"use strict";(self.webpackChunkeverscale_docs_website=self.webpackChunkeverscale_docs_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome to Everscale","href":"/preview/PR-342/","docId":"welcome"},{"type":"category","label":"Overview","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Documentation overview","href":"/preview/PR-342/overview/contents","docId":"overview/overview"},{"type":"link","label":"Infinite scalability","href":"/preview/PR-342/overview/infinite-scalability","docId":"overview/infinite-scalability"},{"type":"link","label":"Differences from EVM","href":"/preview/PR-342/overview/differences-from-evm","docId":"overview/differences-from-evm"},{"type":"link","label":"The Lore","href":"/preview/PR-342/overview/lore","docId":"overview/lore"},{"type":"link","label":"Glossary","href":"/preview/PR-342/overview/concepts","docId":"overview/concepts"}],"href":"/preview/PR-342/overview"},{"type":"category","label":"Build","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/preview/PR-342/develop/intro","docId":"develop/intro"},{"type":"link","label":"Developer Tools Overview","href":"/preview/PR-342/develop/tools-overview","docId":"develop/tools-overview"},{"type":"link","label":"Account Abstraction","href":"/preview/PR-342/develop/account-abstraction","docId":"develop/account-abstraction"},{"type":"link","label":"Actor model","href":"/preview/PR-342/develop/actor-model","docId":"develop/actor-model"},{"type":"link","label":"TVMCell Data structures","href":"/preview/PR-342/develop/tvmcell-data-structure","docId":"develop/tvmcell-data-structure"},{"type":"link","label":"Smart Conctracts, ABI and Messages","href":"/preview/PR-342/develop/sc-abi-messages","docId":"develop/sc-abi-messages"},{"type":"category","label":"Smart Contracts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Everdev CLI Quick Start","href":"/preview/PR-342/develop/smart-contracts/everdev","docId":"develop/smart-contracts/everdev"},{"type":"link","label":"Locklift Environment setup","href":"/preview/PR-342/develop/smart-contracts/locklift-setup","docId":"develop/smart-contracts/locklift-setup"},{"type":"link","label":"Deploy TIP-3 Token","href":"/preview/PR-342/develop/smart-contracts/use-fungible-tokens","docId":"develop/smart-contracts/use-fungible-tokens"},{"type":"link","label":"Tutorial: Tokensale","href":"/preview/PR-342/develop/smart-contracts/tokensale","docId":"develop/smart-contracts/tokensale"},{"type":"link","label":"Tutorial: Voting system","href":"/preview/PR-342/develop/smart-contracts/voting-system","docId":"develop/smart-contracts/voting-system"}],"href":"/preview/PR-342/develop/smart-contracts"},{"type":"category","label":"Frontend and Backend recipes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro","href":"/preview/PR-342/develop/recipes/intro","docId":"develop/recipes/intro"},{"type":"category","label":"EVER SDK Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"EVER SDK Quick Start","href":"/preview/PR-342/develop/recipes/ever-sdk-guides/ever-sdk-start","docId":"develop/recipes/ever-sdk-guides/ever-sdk-start"},{"type":"link","label":"Work with REMP in EVER SDK","href":"/preview/PR-342/develop/recipes/ever-sdk-guides/remp","docId":"develop/recipes/ever-sdk-guides/remp"},{"type":"link","label":"Other EVER SDK Guides","href":"/preview/PR-342/develop/recipes/ever-sdk-guides/other-sdk-guides","docId":"develop/recipes/ever-sdk-guides/other-sdk-guides"}],"href":"/preview/PR-342/develop/tutorial/ever-sdk-guides"},{"type":"link","label":"Connect Wallet","href":"/preview/PR-342/develop/recipes/connect-wallet","docId":"develop/recipes/connect-wallet"},{"type":"link","label":"Advanced usage of Surf Keeper","href":"/preview/PR-342/develop/recipes/surf-wallet-advanced","docId":"develop/recipes/surf-wallet-advanced"},{"type":"link","label":"Add EVER to your backend","href":"/preview/PR-342/develop/recipes/backend-integration","docId":"develop/recipes/backend-integration"},{"type":"link","label":"TIP3 Integration Guide","href":"/preview/PR-342/develop/recipes/tip3-integration","docId":"develop/recipes/tip3-integration"},{"type":"link","label":"Read data from blockchain","href":"/preview/PR-342/develop/recipes/read-data","docId":"develop/recipes/read-data"},{"type":"link","label":"Write data to blockchain","href":"/preview/PR-342/develop/recipes/write-data","docId":"develop/recipes/write-data"}],"href":"/preview/PR-342/develop/recipes"},{"type":"link","label":"GraphQL code generation","href":"/preview/PR-342/develop/payment","docId":"develop/payment"}],"href":"/preview/PR-342/develop"},{"type":"link","label":"Run Validator","href":"/preview/PR-342/validate","docId":"validate"},{"type":"category","label":"Specifications","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ABI Specification","href":"/preview/PR-342/spec/abi","docId":"spec/abi"},{"type":"link","label":"DePools","href":"/preview/PR-342/spec/depool-specification","docId":"spec/depool-specification"},{"type":"link","label":"DeBot","href":"/preview/PR-342/spec/debot-specifications","docId":"spec/debot-specifications"}],"href":"/preview/PR-342/spec"},{"type":"category","label":"Standards","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"TIP-1 TVM Opcode","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"1.1 COPYLEFT","href":"/preview/PR-342/standard/TIP-1/1","docId":"standard/TIP-1/1"},{"type":"link","label":"1.2 MYCODE","href":"/preview/PR-342/standard/TIP-1/2","docId":"standard/TIP-1/2"}],"href":"/preview/PR-342/standard/TIP-1"},{"type":"link","label":"What is TIP?","href":"/preview/PR-342/standard/workflow","docId":"standard/workflow"},{"type":"category","label":"TIP-3 FT","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Core description","href":"/preview/PR-342/standard/TIP-3","docId":"standard/TIP-3/core-description"},{"type":"link","label":"1. Fungible token","href":"/preview/PR-342/standard/TIP-3.1","docId":"standard/TIP-3/1"},{"type":"link","label":"2. Internally-owned Fungible Token Interface","href":"/preview/PR-342/standard/TIP-3.2","docId":"standard/TIP-3/2"}]},{"type":"category","label":"TIP-4 NFT","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Core description","href":"/preview/PR-342/standard/TIP-4","docId":"standard/TIP-4/core-description"},{"type":"link","label":"4.1. Non-Fungible Token","href":"/preview/PR-342/standard/TIP-4.1","docId":"standard/TIP-4/1"},{"type":"link","label":"4.2. JSON Metadata","href":"/preview/PR-342/standard/TIP-4.2","docId":"standard/TIP-4/2"},{"type":"link","label":"4.3. On-chain indexes","href":"/preview/PR-342/standard/TIP-4.3","docId":"standard/TIP-4/3"},{"type":"link","label":"4.4. On-chain storage","href":"/preview/PR-342/standard/TIP-4.4","docId":"standard/TIP-4/4"},{"type":"link","label":"4.5. Can\'t Be Evil licensing","href":"/preview/PR-342/standard/TIP-4.5","docId":"standard/TIP-4/5"}]},{"type":"category","label":"TIP-6","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Core description","href":"/preview/PR-342/standard/TIP-6","docId":"standard/TIP-6/core-description"},{"type":"link","label":"1. Interface Detection","href":"/preview/PR-342/standard/TIP-6.1","docId":"standard/TIP-6/1"}]}],"href":"/preview/PR-342/standard"},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Networking","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Networking","href":"/preview/PR-342/arch/networking/","docId":"arch/networking/networking"},{"type":"link","label":"TL","href":"/preview/PR-342/arch/networking/tl","docId":"arch/networking/tl"},{"type":"link","label":"ADNL","href":"/preview/PR-342/arch/networking/adnl","docId":"arch/networking/adnl"},{"type":"link","label":"DHT - Distributed Hash Table","href":"/preview/PR-342/arch/networking/dht","docId":"arch/networking/dht"},{"type":"link","label":"RLDP","href":"/preview/PR-342/arch/networking/rldp","docId":"arch/networking/rldp"},{"type":"link","label":"Overlay","href":"/preview/PR-342/arch/networking/overlay","docId":"arch/networking/overlay"},{"type":"link","label":"REMP","href":"/preview/PR-342/arch/networking/remp","docId":"arch/networking/remp"}],"href":"/preview/PR-342/arch/networking"},{"type":"category","label":"Consensus","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/preview/PR-342/arch/consensus/introduction","docId":"arch/consensus/introduction"},{"type":"link","label":"Comparison with other solutions","href":"/preview/PR-342/arch/consensus/comparison","docId":"arch/consensus/comparison"},{"type":"link","label":"Components","href":"/preview/PR-342/arch/consensus/components","docId":"arch/consensus/components"},{"type":"link","label":"Catchain Overview","href":"/preview/PR-342/arch/consensus/overview","docId":"arch/consensus/overview"},{"type":"link","label":"Catchain Protocol Messages & Structures","href":"/preview/PR-342/arch/consensus/messages","docId":"arch/consensus/messages"}],"href":"/preview/PR-342/arch/consensus"},{"type":"link","label":"Basics","href":"/preview/PR-342/arch/basics","docId":"arch/basics"},{"type":"link","label":"TL-B and BoC","href":"/preview/PR-342/arch/tlb-and-boc","docId":"arch/tlb-and-boc"},{"type":"category","label":"Opcodes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"tvm_instructions","href":"/preview/PR-342/arch/opcodes/tvm_instructions","docId":"arch/opcodes/tvm_instructions"}],"href":"/preview/PR-342/arch/opcodes"},{"type":"link","label":"TVM","href":"/preview/PR-342/arch/tvm","docId":"arch/tvm"},{"type":"link","label":"Fee calculation","href":"/preview/PR-342/arch/fee-calculation","docId":"arch/fee-calculation"},{"type":"link","label":"Gas Calculation","href":"/preview/PR-342/arch/managing-gas","docId":"arch/managing-gas"},{"type":"link","label":"Transaction executor","href":"/preview/PR-342/arch/executor","docId":"arch/executor"},{"type":"link","label":"Logical Time","href":"/preview/PR-342/arch/logic-time","docId":"arch/logic-time"},{"type":"link","label":"Accounts","href":"/preview/PR-342/arch/accounts","docId":"arch/accounts"},{"type":"link","label":"Message","href":"/preview/PR-342/arch/message","docId":"arch/message"},{"type":"link","label":"Transactions","href":"/preview/PR-342/arch/transactions","docId":"arch/transactions"},{"type":"link","label":"Security","href":"/preview/PR-342/arch/security","docId":"arch/security"},{"type":"link","label":"Workchains","href":"/preview/PR-342/arch/workchains","docId":"arch/workchains"},{"type":"link","label":"Multithreading","href":"/preview/PR-342/arch/multithreading","docId":"arch/multithreading"}],"href":"/preview/PR-342/arch"},{"type":"category","label":"Contribute","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting started","href":"/preview/PR-342/contribute/getting-started","docId":"contribute/getting-started"},{"type":"link","label":"Bug bounty program","href":"/preview/PR-342/contribute/bug-bounty-program","docId":"contribute/bug-bounty-program"}],"href":"/preview/PR-342/contribute"}]},"docs":{"arch/accounts":{"id":"arch/accounts","title":"Accounts","description":"The information storage entity is an account","sidebar":"tutorialSidebar"},"arch/basics":{"id":"arch/basics","title":"Basics","description":"Introduction to understand the basic terminology and concepts","sidebar":"tutorialSidebar"},"arch/consensus/comparison":{"id":"arch/consensus/comparison","title":"Comparison with other solutions","description":"In order to better understand the Catchain, the EverX team researched similar blockchain consensus algorithms, as this makes code reverse engineering much simpler.","sidebar":"tutorialSidebar"},"arch/consensus/components":{"id":"arch/consensus/components","title":"Components","description":"The consensus logic is implemented in three core components:","sidebar":"tutorialSidebar"},"arch/consensus/introduction":{"id":"arch/consensus/introduction","title":"Introduction","description":"This document was created when EverX started to reverse engineer a consensus protocol from publicly released source code of Telegram node as part of EverX Node implementation.","sidebar":"tutorialSidebar"},"arch/consensus/messages":{"id":"arch/consensus/messages","title":"Catchain Protocol Messages & Structures","description":"Catchain protocol consists of:","sidebar":"tutorialSidebar"},"arch/consensus/overview":{"id":"arch/consensus/overview","title":"Catchain Overview","description":"Catchain is a communication protocol between validators. It does not execute the consensus algorithm itself but prepares data required for the decision-making of a higher-level component","sidebar":"tutorialSidebar"},"arch/executor":{"id":"arch/executor","title":"Transaction executor","description":"Transaction executor functional specification","sidebar":"tutorialSidebar"},"arch/fee-calculation":{"id":"arch/fee-calculation","title":"Fee calculation","description":"Explanation of the formulas for fee calculation","sidebar":"tutorialSidebar"},"arch/logic-time":{"id":"arch/logic-time","title":"Logical Time","description":"Logical Time and Message Delivery Guarantees","sidebar":"tutorialSidebar"},"arch/managing-gas":{"id":"arch/managing-gas","title":"Gas Calculation","description":"The entire state of TVM consists of the five components","sidebar":"tutorialSidebar"},"arch/message":{"id":"arch/message","title":"Message","description":"Smart-contracts communicate between each other","sidebar":"tutorialSidebar"},"arch/multithreading":{"id":"arch/multithreading","title":"Multithreading","description":"How the blockchain works on the block and queue level","sidebar":"tutorialSidebar"},"arch/networking/adnl":{"id":"arch/networking/adnl","title":"ADNL","description":"The key element of Eversale is the Abstract Datagram Network Layer (ADNL).It allows all nodes to assume certain network identities, represented by 256-bit abstract network addresses. They communicate via sending datagrams to each other using only these 256-bit network addresses to identify both the sender and the receiver. In particular, one does not need to worry about IPv4 or IPv6 addresses, UDP port numbers, and the like. They are hidden by the Abstract Network Layer.Each datagram is signed and encrypted by the sender. Only the recipient has the possibility to decrypt the message and verify its integrity via signatures.","sidebar":"tutorialSidebar"},"arch/networking/dht":{"id":"arch/networking/dht","title":"DHT - Distributed Hash Table","description":"In fact, it is a distributed key-value database, where each network participant can save something. In Everscale, it is used to locate nodes in the network.","sidebar":"tutorialSidebar"},"arch/networking/networking":{"id":"arch/networking/networking","title":"Networking","description":"Everscale uses its own peer-to-peer network protocols.","sidebar":"tutorialSidebar"},"arch/networking/overlay":{"id":"arch/networking/overlay","title":"Overlay","description":"Everscale is a multi-blockchain platform. That is, its architecture is built in such a way that a lot of chains can exist simultaneously and even independently. With this, there is a constant need for updates on the network. For instance, full nodes could require updates for new blocks of some chains. All chains in the network, including the masterchain, communicate via their own overlay. To join it, it is needed to find the nodes that are already in it, and start exchanging data with them.","sidebar":"tutorialSidebar"},"arch/networking/remp":{"id":"arch/networking/remp","title":"REMP","description":"Introduction","sidebar":"tutorialSidebar"},"arch/networking/rldp":{"id":"arch/networking/rldp","title":"RLDP","description":"Reliable Large Datagram Protocol runs on top of ADNL UDP. It is designed for transmitting big data and includes Forward Error Correction (FEC) algorithms. They are used to replace packet receipt confirmations by the other party. This opens the possibility to transfer data between network components more efficiently. Although, with high traffic consumption.","sidebar":"tutorialSidebar"},"arch/networking/tl":{"id":"arch/networking/tl","title":"TL","description":"TL (Type Language) is used for describing data structures. To structure data, TL schemes are used. TL operates with 32-bit blocks. Accordingly, the size of the data in TL should be a multiple of 4 bytes. If the size of the object is not a multiple of 4, we need to add the required number of zero bytes to achieve multiplicity. The Little Endian order is always used to encode numbers.","sidebar":"tutorialSidebar"},"arch/opcodes/tvm_instructions":{"id":"arch/opcodes/tvm_instructions","title":"tvm_instructions","description":"|     | name                   | alias         | tlb                                                                                | category         | opcode     | fiftasm                        | stack                      | gas                | desc                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | tvmasm                                                                                                                                            | extra_info                                                                                                                                       |","sidebar":"tutorialSidebar"},"arch/security":{"id":"arch/security","title":"Security","description":"External messages pose threats","sidebar":"tutorialSidebar"},"arch/tlb-and-boc":{"id":"arch/tlb-and-boc","title":"TL-B and BoC","description":"Typed Language - Binary is used to describe the scheme of deserialization of objects to cells","sidebar":"tutorialSidebar"},"arch/transactions":{"id":"arch/transactions","title":"Transactions","description":"Let\u2019s once again recall that all interactions on Evercale network are performed via messages. Messages, in turn, create transactions that modify the account\'s state.","sidebar":"tutorialSidebar"},"arch/tvm":{"id":"arch/tvm","title":"TVM","description":"The TVM, is the virtual machine used to execute smart-contract","sidebar":"tutorialSidebar"},"arch/workchains":{"id":"arch/workchains","title":"Workchains","description":"How the blockchain works on the block and queue level","sidebar":"tutorialSidebar"},"contribute/bug-bounty-program":{"id":"contribute/bug-bounty-program","title":"Bug bounty program","description":"We are interested in finding bugs in the following software components","sidebar":"tutorialSidebar"},"contribute/getting-started":{"id":"contribute/getting-started","title":"Getting started","description":"Since Everscale was created on the principles of decentralization, the management and development of the network is completely decentralized thanks to its community.","sidebar":"tutorialSidebar"},"develop/account-abstraction":{"id":"develop/account-abstraction","title":"Account Abstraction","description":"On the differences between Ethereum and Everscale approaches to Account Abstraction","sidebar":"tutorialSidebar"},"develop/actor-model":{"id":"develop/actor-model","title":"Actor model","description":"Let\'s consider one smart contract.","sidebar":"tutorialSidebar"},"develop/intro":{"id":"develop/intro","title":"Intro","description":"To start your developer journey with Everscale, some important concepts should be understood first.","sidebar":"tutorialSidebar"},"develop/payment":{"id":"develop/payment","title":"GraphQL code generation","description":"Integrating Evercloud GraphQL API with Typescript","sidebar":"tutorialSidebar"},"develop/recipes/backend-integration":{"id":"develop/recipes/backend-integration","title":"Add EVER to your backend","description":"Integrate EVER ito your backend","sidebar":"tutorialSidebar"},"develop/recipes/connect-wallet":{"id":"develop/recipes/connect-wallet","title":"Connect Wallet","description":"This is the most basic routine when you start working with any blockchain.","sidebar":"tutorialSidebar"},"develop/recipes/ever-sdk-guides/ever-sdk-start":{"id":"develop/recipes/ever-sdk-guides/ever-sdk-start","title":"EVER SDK Quick Start","description":"Get started by creating a new DApp using EVER SDK","sidebar":"tutorialSidebar"},"develop/recipes/ever-sdk-guides/other-sdk-guides":{"id":"develop/recipes/ever-sdk-guides/other-sdk-guides","title":"Other EVER SDK Guides","description":"Explore guides for EVER SDK","sidebar":"tutorialSidebar"},"develop/recipes/ever-sdk-guides/remp":{"id":"develop/recipes/ever-sdk-guides/remp","title":"Work with REMP in EVER SDK","description":"Trace message processing with REMP","sidebar":"tutorialSidebar"},"develop/recipes/intro":{"id":"develop/recipes/intro","title":"Intro","description":"In this series of examples we will figure out basic steps you need to follow to build a UI around any smart contract and perform various routines common for both frontend and backend parts of any application. We expect a reader to have basic experience with JS.","sidebar":"tutorialSidebar"},"develop/recipes/read-data":{"id":"develop/recipes/read-data","title":"Read data from blockchain","description":"There are several types of things you can read from a blockchain. These are various queries to blockchain RPC node, contract get-methods and contract events.","sidebar":"tutorialSidebar"},"develop/recipes/surf-wallet-advanced":{"id":"develop/recipes/surf-wallet-advanced","title":"Advanced usage of Surf Keeper","description":"After you connected a page to the extension you can interact with your Everscale account.","sidebar":"tutorialSidebar"},"develop/recipes/tip3-integration":{"id":"develop/recipes/tip3-integration","title":"TIP3 Integration Guide","description":"Integrate EVER ito your backend","sidebar":"tutorialSidebar"},"develop/recipes/write-data":{"id":"develop/recipes/write-data","title":"Write data to blockchain","description":"To put something in the Everscale blockchain, you need to send an external message to some account. Depending on a use-case and smart-contract logic, you may also want the account (usually it will be a users\' Wallet smart-contract) to act as a proxy and forward your message to other contract. In this article, we describe both cases","sidebar":"tutorialSidebar"},"develop/sc-abi-messages":{"id":"develop/sc-abi-messages","title":"Smart Conctracts, ABI and Messages","description":"Frontend developers used to build a UI around some machinery called \u201cbackend\u201d, that can be accessed via an API. The common practice in software development is to have some schema definitions, usually built with tool called swagger.","sidebar":"tutorialSidebar"},"develop/smart-contracts/everdev":{"id":"develop/smart-contracts/everdev","title":"Everdev CLI Quick Start","description":"Everdev is a Node.js package with CLI interface that allows to set up developer environment and develop on TVM compatible blockchains (Everscale, Venom, TON, Gosh, etc).","sidebar":"tutorialSidebar"},"develop/smart-contracts/locklift-setup":{"id":"develop/smart-contracts/locklift-setup","title":"Locklift Environment setup","description":"Locklift","sidebar":"tutorialSidebar"},"develop/smart-contracts/tokensale":{"id":"develop/smart-contracts/tokensale","title":"Tutorial: Tokensale","description":"Let\'s write a simple, step-by-step tokensale contract.","sidebar":"tutorialSidebar"},"develop/smart-contracts/use-fungible-tokens":{"id":"develop/smart-contracts/use-fungible-tokens","title":"Deploy TIP-3 Token","description":"One of the most popular use cases for Everscale is the creation of custom tokens using the TIP-3 standard. TIP-3 tokens are fungible tokens that follow a set of rules and standards, making them compatible with a variety of wallets, exchanges, and other Everscale-based services.","sidebar":"tutorialSidebar"},"develop/smart-contracts/voting-system":{"id":"develop/smart-contracts/voting-system","title":"Tutorial: Voting system","description":"Most leading blockchain networks implement decentralized voting systems. Everscale is no exception to this widespread practice.","sidebar":"tutorialSidebar"},"develop/tools-overview":{"id":"develop/tools-overview","title":"Developer Tools Overview","description":"Wallets","sidebar":"tutorialSidebar"},"develop/tvmcell-data-structure":{"id":"develop/tvmcell-data-structure","title":"TVMCell Data structures","description":"Everything in Everscale is stored in cells. A cell is a data structure containing:","sidebar":"tutorialSidebar"},"overview/concepts":{"id":"overview/concepts","title":"Glossary","description":"Accounts","sidebar":"tutorialSidebar"},"overview/differences-from-evm":{"id":"overview/differences-from-evm","title":"Differences from EVM","description":"Ethereum is a great blockchain construct that gave birth to smart contracts, which, in turn, opened the world for dApps. Unfortunately, it became hostage to its own success. Despite the fact that it was a revolution at the time of its inception, it subsequently went on a path of slow evolution, considerably hindering its advancement and losing competition with other blockchains.","sidebar":"tutorialSidebar"},"overview/infinite-scalability":{"id":"overview/infinite-scalability","title":"Infinite scalability","description":"Everscale\u2019s infinite scalability has been envisioned in its architecture since inception. It is achieved by the means of dynamic sharding, described in detail in the technical whitepaper. The reason for scalability was primarily dictated by the blockchain\'s goal to accommodate a billion or even more users. Consequently, such a large customer base requires a high volume of transaction processing per second.","sidebar":"tutorialSidebar"},"overview/lore":{"id":"overview/lore","title":"The Lore","description":"Everscale\u2019s chronicle","sidebar":"tutorialSidebar"},"overview/overview":{"id":"overview/overview","title":"Documentation overview","description":"Welcome","sidebar":"tutorialSidebar"},"spec/abi":{"id":"spec/abi","title":"ABI Specification","description":"ABI specifies message bodies layout for client to contract and contract to contract interaction.","sidebar":"tutorialSidebar"},"spec/debot-specifications":{"id":"spec/debot-specifications","title":"DeBot","description":"Objective","sidebar":"tutorialSidebar"},"spec/depool-specification":{"id":"spec/depool-specification","title":"DePools","description":"Background","sidebar":"tutorialSidebar"},"standard/TIP-1/1":{"id":"standard/TIP-1/1","title":"1.1 COPYLEFT","description":"Developer business models and license information","sidebar":"tutorialSidebar"},"standard/TIP-1/2":{"id":"standard/TIP-1/2","title":"1.2 MYCODE","description":"Returns the Cell with the current code of the smartcontract","sidebar":"tutorialSidebar"},"standard/TIP-3/1":{"id":"standard/TIP-3/1","title":"1. Fungible token","description":"Requires: TIP-6.1","sidebar":"tutorialSidebar"},"standard/TIP-3/2":{"id":"standard/TIP-3/2","title":"2. Internally-owned Fungible Token Interface","description":"Requires: TIP-3.1","sidebar":"tutorialSidebar"},"standard/TIP-3/core-description":{"id":"standard/TIP-3/core-description","title":"Core description","description":"Abstract","sidebar":"tutorialSidebar"},"standard/TIP-4/1":{"id":"standard/TIP-4/1","title":"4.1. Non-Fungible Token","description":"Requires: TIP-6.1","sidebar":"tutorialSidebar"},"standard/TIP-4/2":{"id":"standard/TIP-4/2","title":"4.2. JSON Metadata","description":"Requires: TIP-6.1","sidebar":"tutorialSidebar"},"standard/TIP-4/3":{"id":"standard/TIP-4/3","title":"4.3. On-chain indexes","description":"Requires: TIP-4.1","sidebar":"tutorialSidebar"},"standard/TIP-4/4":{"id":"standard/TIP-4/4","title":"4.4. On-chain storage","description":"Requires: TIP-4.1","sidebar":"tutorialSidebar"},"standard/TIP-4/5":{"id":"standard/TIP-4/5","title":"4.5. Can\'t Be Evil licensing","description":"Requires: TIP-4.1","sidebar":"tutorialSidebar"},"standard/TIP-4/core-description":{"id":"standard/TIP-4/core-description","title":"Core description","description":"Abstract","sidebar":"tutorialSidebar"},"standard/TIP-6/1":{"id":"standard/TIP-6/1","title":"1. Interface Detection","description":"Simple summary","sidebar":"tutorialSidebar"},"standard/TIP-6/core-description":{"id":"standard/TIP-6/core-description","title":"Core description","description":"Abstract","sidebar":"tutorialSidebar"},"standard/workflow":{"id":"standard/workflow","title":"What is TIP?","description":"TIP \u2014 Trustless Improvement Proposal (TIPs) describe standards for the Everscale blockchain. They may include anything that the community considers in need of improvement or standardization. That can be specifications for core protocol, description of interfaces, smart contract standards and so on.","sidebar":"tutorialSidebar"},"validate":{"id":"validate","title":"Run Validator","description":"Validation is crucial in maintaining the security of the Everscale network. It is accomplished by the means of staking EVER tokens and participating in the consensus along with other validators. With the help of the consensus algorithm, the validator proposes candidate blocks and votes on blocks proposed by other validators. When the voting threshold is reached, the proposed block is added to the chain.This process is aided by an overlay network which connects the validators.","sidebar":"tutorialSidebar"},"welcome":{"id":"welcome","title":"Welcome to Everscale","description":"This is the starting point for Everscale documentation. Here you will find the guidance necessary to start developing on the network.","sidebar":"tutorialSidebar"}}}')}}]);