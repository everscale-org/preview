"use strict";(self.webpackChunkeverscale_docs_website=self.webpackChunkeverscale_docs_website||[]).push([[3642],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),c=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),m=n,b=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return r?o.createElement(b,a(a({ref:t},p),{},{components:r})):o.createElement(b,a({ref:t},p))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:n,a[1]=s;for(var c=2;c<i;c++)a[c]=r[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5711:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=r(7462),n=(r(7294),r(3905));const i={sidebar_position:4},a="DeBot Consortium",s={unversionedId:"learn/decentralization/debot-consortium",id:"learn/decentralization/debot-consortium",title:"DeBot Consortium",description:"DeBot-IS-consortium",source:"@site/../../src/learn/decentralization/debot-consortium.md",sourceDirName:"learn/decentralization",slug:"/learn/decentralization/debot-consortium",permalink:"/preview/PR-331/learn/decentralization/debot-consortium",draft:!1,editUrl:"https://github.com/everscale-org/docs/edit/main/.build/website/../../src/learn/decentralization/debot-consortium.md",tags:[],version:"current",lastUpdatedAt:1660241460,formattedLastUpdatedAt:"Aug 11, 2022",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"DeBot Specifications",permalink:"/preview/PR-331/learn/decentralization/debot-specifications"},next:{title:"Terminology",permalink:"/preview/PR-331/learn/terminology"}},l={},c=[{value:"DeBot-IS-consortium",id:"debot-is-consortium",level:2},{value:"Application Rules:",id:"application-rules",level:3},{value:"Interface submission proccess:",id:"interface-submission-proccess",level:3},{value:"Supported browsers:",id:"supported-browsers",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"debot-consortium"},"DeBot Consortium"),(0,n.kt)("h2",{id:"debot-is-consortium"},"DeBot-IS-consortium"),(0,n.kt)("p",null,"DeBot Interface Specifications (IS) Consortium. IS a place where community defines interfaces every DeBot browser should support."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tonlabs/DeBot-IS-consortium"},"DeBot-IS-consortium repository"))),(0,n.kt)("h3",{id:"application-rules"},"Application Rules:"),(0,n.kt)("p",null,'Each new interface must create a folder, which has a readme.md desciption of an interface, example of its implementaion in both Solidity and C++ placed in an "examples" sub folder.'),(0,n.kt)("h3",{id:"interface-submission-proccess"},"Interface submission proccess:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You should create a specifications proposal, discuss it."),(0,n.kt)("li",{parentName:"ul"},"After the discussion is over and proposal is accepted you should submit examples in both Solidity and C++."),(0,n.kt)("li",{parentName:"ul"},"Only proposals with examples will be published.")),(0,n.kt)("h3",{id:"supported-browsers"},"Supported browsers:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If you implemented a DeBot browser we will be happy to list it. Please let us know."),(0,n.kt)("li",{parentName:"ul"},"Your browser should clearly state interfaces which it supports (by version number as stated in repository).")))}d.isMDXComponent=!0}}]);