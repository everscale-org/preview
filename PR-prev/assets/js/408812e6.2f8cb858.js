"use strict";(self.webpackChunkeverscale_docs_website=self.webpackChunkeverscale_docs_website||[]).push([[4891],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(a),b=n,m=d["".concat(l,".").concat(b)]||d[b]||p[b]||o;return a?r.createElement(m,i(i({ref:t},u),{},{components:a})):r.createElement(m,i({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(7294),n=a(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(o.tabItem,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>w});var r=a(7462),n=a(7294),o=a(6010),i=a(2466),s=a(6550),l=a(1980),c=a(7392),u=a(12);function d(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function p(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function b(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=p(e),[i,s]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!b({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[l,c]=m({queryString:a,groupId:r}),[d,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,u.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),h=(()=>{const e=l??d;return b({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{h&&s(h)}),[h]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!b({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),f(e)}),[c,f,o]),tabValues:o}}var h=a(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:a,selectedValue:s,selectValue:l,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,a=u.indexOf(t),r=c[a].value;r!==s&&(d(t),l(r))},b=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:i}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:b,onClick:p},i,{className:(0,o.Z)("tabs__item",v.tabItem,i?.className,{"tabs__item--active":s===t})}),a??t)})))}function k(e){let{lazy:t,children:a,selectedValue:r}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function y(e){const t=f(e);return n.createElement("div",{className:(0,o.Z)("tabs-container",v.tabList)},n.createElement(g,(0,r.Z)({},e,t)),n.createElement(k,(0,r.Z)({},e,t)))}function w(e){const t=(0,h.Z)();return n.createElement(y,(0,r.Z)({key:String(t)},e))}},4087:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=a(7462),n=(a(7294),a(3905)),o=a(4866),i=a(5162);const s={sidebar_position:0},l="Getting started",c={unversionedId:"develop/debots/getting-started",id:"develop/debots/getting-started",title:"Getting started",description:"EverX DeBots Github repository https://github.com/tonlabs/debots",source:"@site/../../src/develop/debots/getting-started.md",sourceDirName:"develop/debots",slug:"/develop/debots/getting-started",permalink:"/preview/PR-prev/develop/debots/getting-started",draft:!1,editUrl:"https://github.com/everscale-org/docs/edit/main/.build/website/../../src/develop/debots/getting-started.md",tags:[],version:"current",lastUpdatedAt:1666367166,formattedLastUpdatedAt:"Oct 21, 2022",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"DeBots",permalink:"/preview/PR-prev/develop/debots"},next:{title:"DeBrowser",permalink:"/preview/PR-prev/develop/debots/debrowser"}},u={},d=[{value:"What is a DeBot?",id:"what-is-a-debot",level:2},{value:"Basic terms",id:"basic-terms",level:2},{value:"DeBot interfaces",id:"debot-interfaces",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"DeBots",id:"debots",level:2},{value:"How to try DeBot",id:"how-to-try-debot",level:2},{value:"DeBot <code>DEvergence</code>",id:"debot-devergence",level:3},{value:"DeBot <code>Multisig</code>",id:"debot-multisig",level:3}],p={toc:d},b="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(b,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"getting-started"},"Getting started"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"EverX DeBots Github repository ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/tonlabs/debots"},"https://github.com/tonlabs/debots"))),(0,n.kt)("h2",{id:"what-is-a-debot"},"What is a DeBot?"),(0,n.kt)("p",null,"DeBot (Decentralized Bot) is an intuitive, no-prior-knowledge-required interface for interacting with smart contracts on Everscale Blockchain."),(0,n.kt)("p",null,"Blockchain technology is complex and can be hard to learn for users without prior experience with it. With DeBots, our goal is twofold: simplify user's experience with the  blockchain, and streamline the development process of blockchain-based services. It should be noted that this is achieved by maintaining the highest level of security. "),(0,n.kt)("p",null,"At its most basic, a DeBot is a secure chat-based interface that allows a user to interact with a smart contract on the blockchain and access its various functions in the form of a dialogue."),(0,n.kt)("h2",{id:"basic-terms"},"Basic terms"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DeBot")," \u2014 a smart contract facilitating conversation-like communication flow with a target smart contract."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Target smart contract")," \u2014 the smart contract for which a DeBot is created. The DeBot is an interface to this smart contract."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DeBot browser")," \u2014 a program that executes the DeBot and parses its answer using DeBot protocol."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"DeBot protocol")," \u2014 a set of rules describing the communication between a browser and the DeBot. Namely, it describes how to call DeBot functions and interpret its answers.")),(0,n.kt)("p",null,"Debots are deployed on the Everscale blockchain and the browser is being managed by the user. The code is simply downloaded and runs inside the engine."),(0,n.kt)("h2",{id:"debot-interfaces"},"DeBot interfaces"),(0,n.kt)("p",null,"To fulfill their functions as a user's interface, DeBots must be able to facilitate a number of interactions between the user, the user's device and the target smart contract on the blockchain:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"receive input from users;"),(0,n.kt)("li",{parentName:"ul"},"query info about other smart contracts;"),(0,n.kt)("li",{parentName:"ul"},"query transactions and messages;"),(0,n.kt)("li",{parentName:"ul"},"receive data from external subsystems (like file systems) and external devices (like NFC, camera and so on);"),(0,n.kt)("li",{parentName:"ul"},"call external function libraries that allow you to do operations that are not supported by VM. For example, work with json, convert numbers to string and vice versa, encrypt/decrypt/sign data.")),(0,n.kt)("p",null,"These needs are covered in various DeBot Interfaces (DInterfaces) which can be used in DeBots and which must be supported in DeBot Browsers."),(0,n.kt)("p",null,"To use an interface, the DeBot should import a source file with the DInterface declaration and call its methods like any other smart contract methods in Everscale \u2014 by sending internal messages to an interface address, which is unique and explicitly defined for every interface."),(0,n.kt)("p",null,"Every DInterface must be discussed and accepted by DeBot Interface Specifications (DIS) Consortium before it can be used in DeBots. All accepted interfaces are published by ",(0,n.kt)("a",{parentName:"p",href:"/preview/PR-prev/learn/decentralization/debot-consortium"},"DeBot Interface Specifications Consortium"),"."),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("p",null,"To build DeBots install ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/tonlabs/everdev"},(0,n.kt)("inlineCode",{parentName:"a"},"everdev")),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g everdev\n")),(0,n.kt)("p",null,"To run and debug DeBots install ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/tonlabs/tonos-cli"},(0,n.kt)("inlineCode",{parentName:"a"},"tonos-cli")),":"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"For run DeBots ",(0,n.kt)("strong",{parentName:"p"},"required")," ",(0,n.kt)("inlineCode",{parentName:"p"},"tonos-cli")," version >= ",(0,n.kt)("inlineCode",{parentName:"p"},"0.11.4"),".")),(0,n.kt)("p",null,"Install using ",(0,n.kt)("inlineCode",{parentName:"p"},"everdev"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npx everdev tonos-cli install\n")),(0,n.kt)("p",null,"or"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npx everdev tonos-cli set --version 0.26.2\n")),(0,n.kt)("p",null,"Or download binaries from here:"),(0,n.kt)(o.Z,{mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"linux",label:"Linux",default:!0,mdxType:"TabItem"},(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"http://sdkbinaries.tonlabs.io/tonos-cli-0_26_2-linux.zip"},"http://sdkbinaries.tonlabs.io/tonos-cli-0_26_2-linux.zip"))),(0,n.kt)(i.Z,{value:"macos",label:"MacOS",mdxType:"TabItem"},(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"http://sdkbinaries.tonlabs.io/tonos-cli-0_26_2-darwin.zip"},"http://sdkbinaries.tonlabs.io/tonos-cli-0_26_2-darwin.zip"))),(0,n.kt)(i.Z,{value:"windows",label:"Windows",mdxType:"TabItem"},(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"http://sdkbinaries.tonlabs.io/tonos-cli-0_26_2-win32.zip"},"http://sdkbinaries.tonlabs.io/tonos-cli-0_26_2-win32.zip")))),(0,n.kt)("h2",{id:"debots"},"DeBots"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tonlabs/debots/tree/main/helloworld"},(0,n.kt)("inlineCode",{parentName:"a"},"Hello"))," \u2014 Hello World DeBot. Can be used as a template for new DeBots."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/tonlabs/debots/tree/main/multisig"},(0,n.kt)("inlineCode",{parentName:"a"},"Multisig"))," \u2014 DeBot for multi-signature wallet (multisig). Uses several basic DeBot interfaces: Terminal, AddressInput, AmountInput, ConfirmInput. It supports all functions of the multisig wallet contract, such as submitting and confirming transactions and viewing wallet information."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/everscale-contest/hackathon2022-tezos-DEvergence"},(0,n.kt)("inlineCode",{parentName:"a"},"DEvergence"))," \u2014 DeBot for the Ever Surf App which the user employs to connect to a Tezos wallet and transact. DeBots are smart contracts with a chat interface similar to those on Telegram.")),(0,n.kt)("h2",{id:"how-to-try-debot"},"How to try DeBot"),(0,n.kt)("p",null,"You can start by trying out ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/tonlabs/debots/tree/main/multisig"},(0,n.kt)("inlineCode",{parentName:"a"},"multisig"))," DeBot. It's already deployed to ",(0,n.kt)("a",{parentName:"p",href:"https://net.ever.live/"},"net.ever.live")," and can be called through any DeBot browser that supports it."),(0,n.kt)("p",null,"To try it out in Ever Surf, go to ",(0,n.kt)("a",{parentName:"p",href:"https://ever.surf/"},"https://ever.surf/")," or in ",(0,n.kt)("inlineCode",{parentName:"p"},"tonos-cli")," call:"),(0,n.kt)("h3",{id:"debot-devergence"},"DeBot ",(0,n.kt)("inlineCode",{parentName:"h3"},"DEvergence")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tonos-cli config --url eri01.net.everos.dev\ntonos-cli debot fetch 0:38a53a8bff83c57b6334f369d5ff678bdaa2b8e229d9b5552dfdda2b4d90cf92\n")),(0,n.kt)("p",null,"or in Ever Surf ",(0,n.kt)("a",{parentName:"p",href:"https://uri.ever.surf/debot/0:38a53a8bff83c57b6334f369d5ff678bdaa2b8e229d9b5552dfdda2b4d90cf92?net=devnet"},"0:38a53a8bff83c57b6334f369d5ff678bdaa2b8e229d9b5552dfdda2b4d90cf92")),(0,n.kt)("h3",{id:"debot-multisig"},"DeBot ",(0,n.kt)("inlineCode",{parentName:"h3"},"Multisig")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"tonos-cli config --url eri01.net.everos.dev\ntonos-cli debot fetch 0:c69a0ed4a11b467ec1a981f29139dc3ff6af47eeacd2cd93e67a6cfc6f771cfb\n")),(0,n.kt)("p",null,"or in Ever Surf ",(0,n.kt)("a",{parentName:"p",href:"https://uri.ever.surf/debot/0:c69a0ed4a11b467ec1a981f29139dc3ff6af47eeacd2cd93e67a6cfc6f771cfb?net=devnet"},"0:c69a0ed4a11b467ec1a981f29139dc3ff6af47eeacd2cd93e67a6cfc6f771cfb")),(0,n.kt)("p",null,"If you do not have a multisig wallet to try it out with, you can use the following test wallet address and seed phrase:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"address: 0:66e01d6df5a8d7677d9ab2daf7f258f1e2a7fe73da5320300395f99e01dc3b5f\nseed phrase: final axis aware because grace sort giant defy dragon blouse motor virus\n")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Please don't empty out its balance, so others can try it out too.")))}m.isMDXComponent=!0}}]);