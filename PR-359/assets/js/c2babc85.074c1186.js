"use strict";(self.webpackChunkeverscale_docs_website=self.webpackChunkeverscale_docs_website||[]).push([[8476],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,y=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(y,o(o({ref:t},p),{},{components:n})):r.createElement(y,o({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1919:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:1,title:"Simple wallet",description:"An example of a basic wallet."},o=void 0,l={unversionedId:"solidity-by-example/application/simple-wallet",id:"solidity-by-example/application/simple-wallet",title:"Simple wallet",description:"An example of a basic wallet.",source:"@site/../../src/solidity-by-example/application/simple-wallet.md",sourceDirName:"solidity-by-example/application",slug:"/solidity-by-example/application/simple-wallet",permalink:"/preview/PR-359/solidity-by-example/application/simple-wallet",draft:!1,editUrl:"https://github.com/everscale-org/docs/edit/main/.build/website/../../src/solidity-by-example/application/simple-wallet.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Simple wallet",description:"An example of a basic wallet."},sidebar:"tutorialSidebar",previous:{title:"Bug bounty program",permalink:"/preview/PR-359/contribute/bug-bounty-program"},next:{title:"Re-Entrancy",permalink:"/preview/PR-359/solidity-by-example/hack/re-entrancy"}},s={},c=[],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"An example of a basic wallet."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma ever-solidity ^0.70.0;\n\n/// @title Utility Errors\n/// @notice Possible exception codes when interacting with contract\nlibrary Error {\n    uint8 constant CALLER_IS_NOT_OWNER = 100;\n    uint8 constant INVALID_DATA_STORAGE = 101;\n}\n\n\n/// @title Simple wallet\ncontract Wallet {\n\n    // Modifier that allows function to accept external call\n    // only if it was signed with contract owner's public key.\n    modifier ownerOnly {\n        // Check that inbound message was signed with owner's public key.\n        // Runtime function that obtains sender's public key.\n        require(msg.pubkey() == tvm.pubkey(), Error.CALLER_IS_NOT_OWNER);\n\n        // Runtime function that allows contract to process inbound messages spending\n        // its own resources (it's necessary if contract should process all inbound messages,\n        // not only those that carry value with them).\n        tvm.accept();\n        _;\n    }\n\n    /// @dev Contract constructor\n    constructor() ownerOnly {\n        // check that contract's public key is set\n        require(tvm.pubkey() != 0, Error.INVALID_DATA_STORAGE);\n    }\n\n    /// @dev Send to transfer EVER to the destination account\n    /// @param dest Transfer target address\n    /// @param value EVER value to transfer\n    function transfer(address dest, uint16 value) public view ownerOnly {\n        // Runtime function that allows to make a transfer with arbitrary settings.\n        dest.transfer(uint128(value) * 1e9, false, 1);\n    }\n\n    /// @dev Send transaction to another contract\n    /// @param dest Destination address\n    /// @param value Amount of attached NANOEVER\n    /// @param bounce Message bounce\n    /// @param flag Message flag\n    /// @param payload Tvm cell encoded payload, such as method call\n    function sendTransaction(\n        address dest,\n        uint128 value,\n        bool bounce,\n        uint8 flag,\n        TvmCell payload\n    ) public view ownerOnly {\n        dest.transfer(value, bounce, flag, payload);\n    }\n\n    /// @dev destruct contract and send all money to target address\n    /// @param dest Transfer target address\n    function destruct(address dest) public ownerOnly {\n        selfdestruct(dest);\n    }\n}\n")),(0,a.kt)("p",null,"1008123500"))}d.isMDXComponent=!0}}]);