"use strict";(self.webpackChunkeverscale_docs_website=self.webpackChunkeverscale_docs_website||[]).push([[6499],{3905:(t,e,a)=>{a.d(e,{Zo:()=>N,kt:()=>o});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),m=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},N=function(t){var e=m(t.components);return n.createElement(p.Provider,{value:e},t.children)},k="mdxType",g={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,N=d(t,["components","mdxType","originalType","parentName"]),k=m(a),f=r,o=k["".concat(p,".").concat(f)]||k[f]||g[f]||l;return a?n.createElement(o,i(i({ref:e},N),{},{components:a})):n.createElement(o,i({ref:e},N))}));function o(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=f;var d={};for(var p in e)hasOwnProperty.call(e,p)&&(d[p]=e[p]);d.originalType=t,d[k]="string"==typeof t?t:r,i[1]=d;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},739:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const l={},i=void 0,d={unversionedId:"arch/opcodes/tvm_instructions",id:"arch/opcodes/tvm_instructions",title:"tvm_instructions",description:"|     | name                   | alias         | tlb                                                                                | category         | opcode     | fiftasm                        | stack                      | gas            | description| tvmasm                                                                                                                                          |",source:"@site/../../src/arch/opcodes/tvm_instructions.md",sourceDirName:"arch/opcodes",slug:"/arch/opcodes/tvm_instructions",permalink:"/preview/PR-342/arch/opcodes/tvm_instructions",draft:!1,editUrl:"https://github.com/everscale-org/docs/edit/main/.build/website/../../src/arch/opcodes/tvm_instructions.md",tags:[],version:"current",lastUpdatedAt:1685623997,formattedLastUpdatedAt:"Jun 1, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Opcodes",permalink:"/preview/PR-342/arch/opcodes"},next:{title:"TVM",permalink:"/preview/PR-342/arch/tvm"}},p={},m=[],N={toc:m},k="wrapper";function g(t){let{components:e,...a}=t;return(0,r.kt)(k,(0,n.Z)({},N,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"right"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"alias"),(0,r.kt)("th",{parentName:"tr",align:"left"},"tlb"),(0,r.kt)("th",{parentName:"tr",align:"left"},"category"),(0,r.kt)("th",{parentName:"tr",align:"left"},"opcode"),(0,r.kt)("th",{parentName:"tr",align:"left"},"fift_asm"),(0,r.kt)("th",{parentName:"tr",align:"left"},"stack"),(0,r.kt)("th",{parentName:"tr",align:"left"},"gas"),(0,r.kt)("th",{parentName:"tr",align:"left"},"description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"tvm_asm"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NOP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NOP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Does nothing."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SWAP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCHG_0I"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SWAP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - y x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as ",(0,r.kt)("inlineCode",{parentName:"td"},"s1 XCHG0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCHG_0I"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#0 i:(## 4) {1 <= i}"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," XCHG0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Interchanges ",(0,r.kt)("inlineCode",{parentName:"td"},"s0")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i]"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1 <= i <= 15"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCHG_IJ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#10 i:(## 4) j:(## 4) {1 <= i} {i + 1 <= j}"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"10ij"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j]"," XCHG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Interchanges ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i]")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j]"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1 <= i < j <= 15"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCHG_0I_LONG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#11 ii:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"11ii"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s0 ","[ii]"," s() XCHG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Interchanges ",(0,r.kt)("inlineCode",{parentName:"td"},"s0")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"s[ii]"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= ii <= 255"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCHG_1I"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#1 i:(## 4) {2 <= i}"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s1 s","[i]"," XCHG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Interchanges ",(0,r.kt)("inlineCode",{parentName:"td"},"s1")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i]"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2 <= i <= 15"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#2 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," PUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a copy of the old ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i]")," into the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DUP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#20"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"20"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DUP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as ",(0,r.kt)("inlineCode",{parentName:"td"},"s0 PUSH"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"OVER"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#21"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"21"),(0,r.kt)("td",{parentName:"tr",align:"left"},"OVER"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x y x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as ",(0,r.kt)("inlineCode",{parentName:"td"},"s1 PUSH"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x21")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#3 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"3i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," POP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops the old ",(0,r.kt)("inlineCode",{parentName:"td"},"s0")," value into the old ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i]"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DROP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DROP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as ",(0,r.kt)("inlineCode",{parentName:"td"},"s0 POP"),", discards the top-of-stack value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NIP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NIP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as ",(0,r.kt)("inlineCode",{parentName:"td"},"s1 POP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x31")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCHG3"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#4 i:uint4 j:uint4 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"4ijk"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j]"," s","[k]"," XCHG3"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s2 s[i] XCHG")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s1 s[j] XCHG")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[k] XCHG0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_stack_register_u4][s2 = parse_stack_register_u4]"," ","[s3 = parse_stack_register_u4]"," 0x40")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"13"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCHG2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#50 i:uint4 j:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"50ij"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j]"," XCHG2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s1 s[i] XCHG")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j] XCHG0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_stack_register_u4][s2 = parse_stack_register_u4]"," 0x50, (s1 << 4)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"14"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCPU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#51 i:uint4 j:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"51ij"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j]"," XCPU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] XCHG0")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j] PUSH"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_stack_register_u4][s2 = parse_stack_register_u4]"," 0x51, (s1 << 4)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUXC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#52 i:uint4 j:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"52ij"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j-1]"," PUXC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] PUSH")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j] XCHG0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_stack_register_u4][s2 = parse_stack_register_u4_minus_one]"," 0x52, (s1 << 4)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"16"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSH2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#53 i:uint4 j:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"53ij"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j]"," PUSH2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] PUSH")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j+1] PUSH"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_stack_register_u4][s2 = parse_stack_register_u4]"," 0x53, (s1 << 4)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"17"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCHG3_ALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#540 i:uint4 j:uint4 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"540ijk"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j]"," s","[k]"," XCHG3_l"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Long form of ",(0,r.kt)("inlineCode",{parentName:"td"},"XCHG3"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XC2PU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#541 i:uint4 j:uint4 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"541ijk"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j]"," s","[k]"," XC2PU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] s[j] XCHG2")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[k] PUSH"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_stack_register_u4][s2 = parse_stack_register_u4]"," ","[s3 = parse_stack_register_u4]"," 0x54, 0x10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"19"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCPUXC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#542 i:uint4 j:uint4 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"542ijk"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j]"," s","[k-1]"," XCPUXC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s1 s[i] XCHG")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j] s[k-1] PUXC"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_stack_register_u4][s2 = parse_stack_register_u4]"," ","[s3 = parse_stack_register_u4_minus_one]"," 0x54, 0x20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"20"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCPU2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#543 i:uint4 j:uint4 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"543ijk"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j]"," s","[k]"," XCPU2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] XCHG0")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j] s[k] PUSH2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_stack_register_u4][s2 = parse_stack_register_u4]"," ","[s3 = parse_stack_register_u4]"," 0x54, 0x30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"21"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUXC2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#544 i:uint4 j:uint4 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"544ijk"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j-1]"," s","[k-1]"," PUXC2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] PUSH")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s2 XCHG0")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j] s[k] XCHG2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"22"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUXCPU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#545 i:uint4 j:uint4 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"545ijk"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j-1]"," s","[k-1]"," PUXCPU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] s[j-1] PUXC")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[k] PUSH"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_stack_register_u4][s2 = parse_stack_register_u4_minus_one]"," ","[s3 = parse_stack_register_u4_minus_one]"," 0x54, 0x50")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"23"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PU2XC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#546 i:uint4 j:uint4 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"546ijk"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j-1]"," s","[k-2]"," PU2XC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] PUSH")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j] s[k-1] PUXC"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_stack_register_u4][s2 = parse_stack_register_u4_minus_one]"," ","[s3 = parse_stack_register_u4_minus_two]"," 0x54, 0x60")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"24"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSH3"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#547 i:uint4 j:uint4 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"547ijk"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," s","[j]"," s","[k]"," PUSH3"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] PUSH")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j+1] s[k+1] PUSH2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"25"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLKSWAP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#55 i:uint4 j:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"55ij"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i+1][j+1]"," BLKSWAP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Permutes two blocks ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j+i+1] \u2026 s[j+1]")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j] \u2026 s0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c1 = parse_const_u4_plus_one][c2 = parse_const_u4_plus_one]"," => 0x55, (c1 << 4)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= i,j <= 15")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"[i+1] [j+1] REVERSE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[j+1] 0 REVERSE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[i+j+2] 0 REVERSE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROT2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLKSWAP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#5513"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5513"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROT2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"a b c d e f - c d e f a b"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Rotates the three topmost pairs of stack entries."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x55, 0x13")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"2ROT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"27"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROLL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLKSWAP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#550 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"550i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i+1]"," ROLL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Rotates the top ",(0,r.kt)("inlineCode",{parentName:"td"},"i+1")," stack entries."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4_plus_one]"," 0x55, c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"1 [i+1] BLKSWAP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROLLREV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLKSWAP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#55 i:uint4 zero:(## 4) {zero = 0}"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"55i0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i+1]"," -ROLL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Rotates the top ",(0,r.kt)("inlineCode",{parentName:"td"},"i+1")," stack entries in the other direction."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4_plus_one]"," 0x55, c << 4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i+1]"," ROLLREV"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"[i+1] 1 BLKSWAP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"29"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSH_LONG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#56 ii:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"56ii"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ii]"," s() PUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a copy of the old ",(0,r.kt)("inlineCode",{parentName:"td"},"s[ii]")," into the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= ii <= 255")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POP_LONG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#57 ii:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"57ii"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ii]"," s() POP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops the old ",(0,r.kt)("inlineCode",{parentName:"td"},"s0")," value into the old ",(0,r.kt)("inlineCode",{parentName:"td"},"s[ii]"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= ii <= 255")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#58"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"58"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"a b c - b c a"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"1 2 BLKSWAP")," or to ",(0,r.kt)("inlineCode",{parentName:"td"},"s2 s1 XCHG2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x58")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROTREV"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#59"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"59"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROTREV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"a b c - c a b"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"2 1 BLKSWAP")," or to ",(0,r.kt)("inlineCode",{parentName:"td"},"s2 s2 XCHG2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x59")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"-ROT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"33"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SWAP2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#5A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SWAP2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"a b c d - c d a b"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"2 2 BLKSWAP")," or to ",(0,r.kt)("inlineCode",{parentName:"td"},"s3 s2 XCHG2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x5A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"2SWAP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DROP2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#5B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DROP2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"a b -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"DROP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"DROP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x5B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"2DROP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"35"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DUP2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#5C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DUP2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"a b - a b a b"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s1 s0 PUSH2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x5C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"2DUP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"36"),(0,r.kt)("td",{parentName:"tr",align:"left"},"OVER2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#5D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"OVER2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"a b c d - a b c d a b"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"s3 s2 PUSH2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x5D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"2OVER"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"37"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REVERSE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#5E i:uint4 j:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5Eij"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i+2][j]"," REVERSE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Reverses the order of ",(0,r.kt)("inlineCode",{parentName:"td"},"s[j+i+1] \u2026 s[j]"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c1 = parse_const_u4_plus_two][c2 = parse_const_u4]"," 0x5E, (c1 << 4)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"38"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLKDROP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#5F0 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5F0i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i]"," BLKDROP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"DROP")," performed ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," times."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4]"," 0x5F, c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"39"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLKPUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#5F i:(## 4) j:uint4 {1 <= i}"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"5Fij"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i][j]"," BLKPUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSH s(j)")," performed ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," times."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c1 = parse_const_u4_nonzero][c2 = parse_const_u4]"," 0x5F, (c1 << 4)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1 <= i <= 15"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= j <= 15"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"40"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PICK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#60"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"60"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PICK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops integer ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," from the stack, then performs ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] PUSH"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x60")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"41"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROLLX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#61"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"61"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROLLX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops integer ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," from the stack, then performs ",(0,r.kt)("inlineCode",{parentName:"td"},"1 [i] BLKSWAP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x61")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"42"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-ROLLX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#62"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"62"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-ROLLX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops integer ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," from the stack, then performs ",(0,r.kt)("inlineCode",{parentName:"td"},"[i] 1 BLKSWAP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x62")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"ROLLREVX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"43"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLKSWX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#63"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"63"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLKSWX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops integers ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),",",(0,r.kt)("inlineCode",{parentName:"td"},"j")," from the stack, then performs ",(0,r.kt)("inlineCode",{parentName:"td"},"[i] [j] BLKSWAP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x63")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"44"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REVX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#64"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"64"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REVX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops integers ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),",",(0,r.kt)("inlineCode",{parentName:"td"},"j")," from the stack, then performs ",(0,r.kt)("inlineCode",{parentName:"td"},"[i] [j] REVERSE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"45"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DROPX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#65"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"65"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DROPX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops integer ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," from the stack, then performs ",(0,r.kt)("inlineCode",{parentName:"td"},"[i] BLKDROP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x65")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"46"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TUCK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#66"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"66"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TUCK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"a b - b a b"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"OVER")," or to ",(0,r.kt)("inlineCode",{parentName:"td"},"s1 s1 XCPU"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x66")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"47"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCHGX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#67"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"67"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCHGX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops integer ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," from the stack, then performs ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i] XCHG"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x67")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"48"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEPTH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#68"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"68"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEPTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- depth"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes the current depth of the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x68")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"49"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKDEPTH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#69"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"69"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKDEPTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18/58"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops integer ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," from the stack, then checks whether there are at least ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," elements, generating a stack underflow exception otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x69")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"50"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ONLYTOPX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ONLYTOPX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops integer ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," from the stack, then removes all but the top ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," elements."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ONLYX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ONLYX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops integer ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," from the stack, then leaves only the bottom ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," elements. Approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"DEPTH")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SUB")," ",(0,r.kt)("inlineCode",{parentName:"td"},"DROPX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"52"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLKDROP2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6C i:(## 4) j:uint4 {1 <= i}"),(0,r.kt)("td",{parentName:"tr",align:"left"},"stack_complex"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6Cij"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i][j]"," BLKDROP2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Drops ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," stack elements under the top ",(0,r.kt)("inlineCode",{parentName:"td"},"j")," elements."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c1 = parse_const_u4_nonzero][c2 = parse_const_u4]"," 0x6C, (c1 << 4)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1 <= i <= 15"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= j <= 15")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"[i+j] 0 REVERSE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[i] BLKDROP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[j] 0 REVERSE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"53"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- null"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes the only value of type ",(0,r.kt)("em",{parentName:"td"},"Null"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHNULL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"54"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNULL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNULL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is a ",(0,r.kt)("em",{parentName:"td"},"Null"),", and returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," accordingly."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"55"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F0 n:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F0n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," TUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x_1 ... x_n - t"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Creates a new ",(0,r.kt)("em",{parentName:"td"},"Tuple")," ",(0,r.kt)("inlineCode",{parentName:"td"},"t=(x_1, \u2026 ,x_n)")," containing ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," values ",(0,r.kt)("inlineCode",{parentName:"td"},"x_1"),",..., ",(0,r.kt)("inlineCode",{parentName:"td"},"x_n"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s = parse_const_u4]"," 0x6F, s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 15")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"56"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NIL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NIL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- t"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes the only ",(0,r.kt)("em",{parentName:"td"},"Tuple")," ",(0,r.kt)("inlineCode",{parentName:"td"},"t=()")," of length zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"57"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SINGLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SINGLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - t"),(0,r.kt)("td",{parentName:"tr",align:"left"},"27"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Creates a singleton ",(0,r.kt)("inlineCode",{parentName:"td"},"t:=(x)"),", i.e., a ",(0,r.kt)("em",{parentName:"td"},"Tuple")," of length one."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"58"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PAIR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F02"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F02"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PAIR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - t"),(0,r.kt)("td",{parentName:"tr",align:"left"},"28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Creates pair ",(0,r.kt)("inlineCode",{parentName:"td"},"t:=(x,y)"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x02")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"59"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRIPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F03"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F03"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRIPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - t"),(0,r.kt)("td",{parentName:"tr",align:"left"},"29"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Creates triple ",(0,r.kt)("inlineCode",{parentName:"td"},"t:=(x,y,z)"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"60"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F1 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F1k"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[k]"," INDEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),"-th element of a ",(0,r.kt)("em",{parentName:"td"},"Tuple")," ",(0,r.kt)("inlineCode",{parentName:"td"},"t"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4]"," 0x6F, 0x10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= k <= 15"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"61"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the first element of a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"CAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"62"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SECOND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SECOND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the second element of a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x11")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"63"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THIRD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THIRD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - z"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the third element of a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"64"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F2 n:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F2n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," UNTUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x_1 ... x_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unpacks a ",(0,r.kt)("em",{parentName:"td"},"Tuple")," ",(0,r.kt)("inlineCode",{parentName:"td"},"t=(x_1,...,x_n)")," of length equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 15"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4]"," 0x6F, 0x20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"t")," is not a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),", or if `"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"65"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNSINGLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F21"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F21"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNSINGLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"27"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unpacks a singleton ",(0,r.kt)("inlineCode",{parentName:"td"},"t=(x)"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x21")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"66"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNPAIR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F22"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F22"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNPAIR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unpacks a pair ",(0,r.kt)("inlineCode",{parentName:"td"},"t=(x,y)"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x22")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNCONS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"67"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTRIPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F23"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F23"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTRIPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x y z"),(0,r.kt)("td",{parentName:"tr",align:"left"},"29"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unpacks a triple ",(0,r.kt)("inlineCode",{parentName:"td"},"t=(x,y,z)"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x23")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"68"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNPACKFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F3 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F3k"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[k]"," UNPACKFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x_1 ... x_k"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+k"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unpacks first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= k <= 15")," elements of a ",(0,r.kt)("em",{parentName:"td"},"Tuple")," ",(0,r.kt)("inlineCode",{parentName:"td"},"t"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4]"," 0x6F, 0x30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If `"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"69"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKTUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNPACKFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKTUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"t")," is a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),". If not, throws a type check exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"70"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EXPLODE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F4 n:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F4n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," EXPLODE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x_1 ... x_m m"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+m"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unpacks a ",(0,r.kt)("em",{parentName:"td"},"Tuple")," ",(0,r.kt)("inlineCode",{parentName:"td"},"t=(x_1,...,x_m)")," and returns its length ",(0,r.kt)("inlineCode",{parentName:"td"},"m"),", but only if ",(0,r.kt)("inlineCode",{parentName:"td"},"m <= n <= 15"),". Otherwise throws a type check exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4]"," 0x6F, 0x40")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"71"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F5 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F5k"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[k]"," SETINDEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= k <= 15")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If `k >="),(0,r.kt)("td",{parentName:"tr",align:"left"},"t")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"72"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F50"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F50"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"73"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETSECOND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETSECOND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"74"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETTHIRD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F52"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F52"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETTHIRD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"75"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F6 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F6k"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[k]"," INDEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),"-th element of a ",(0,r.kt)("em",{parentName:"td"},"Tuple")," ",(0,r.kt)("inlineCode",{parentName:"td"},"t"),", where ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= k <= 15"),". In other words, returns ",(0,r.kt)("inlineCode",{parentName:"td"},"x_{k+1}")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"t=(x_1,...,x_n)"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"k>=n"),", or if ",(0,r.kt)("inlineCode",{parentName:"td"},"t")," is ",(0,r.kt)("em",{parentName:"td"},"Null"),", returns a ",(0,r.kt)("em",{parentName:"td"},"Null")," instead of ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4]"," 0x6F, 0x60")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FIRSTQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F60"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F60"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FIRSTQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the first element of a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x60")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"CARQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"77"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SECONDQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F61"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F61"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SECONDQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the second element of a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x61")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"78"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THIRDQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F62"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F62"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THIRDQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - z"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the third element of a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x62")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"79"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F7 k:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F7k"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[k]"," SETINDEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If `"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"80"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETFIRSTQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F70"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F70"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETFIRSTQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"81"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETSECONDQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F71"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F71"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETSECONDQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"82"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETTHIRDQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F72"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F72"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETTHIRDQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"83"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TUPLEVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F80"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F80"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TUPLEVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x_1 ... x_n n - t"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Creates a new ",(0,r.kt)("em",{parentName:"td"},"Tuple")," ",(0,r.kt)("inlineCode",{parentName:"td"},"t")," of length ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," similarly to ",(0,r.kt)("inlineCode",{parentName:"td"},"TUPLE"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 255")," taken from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0x80")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEXVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F81"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F81"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEXVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t k - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"k INDEX"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= k <= 254")," taken from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0x81")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"85"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTUPLEVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F82"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F82"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTUPLEVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t n - x_1 ... x_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"n UNTUPLE"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 255")," taken from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0x82")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"86"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNPACKFIRSTVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F83"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F83"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNPACKFIRSTVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t n - x_1 ... x_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"n UNPACKFIRST"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 255")," taken from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0x83")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"87"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EXPLODEVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EXPLODEVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t n - x_1 ... x_m m"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+m"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"n EXPLODE"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 255")," taken from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0x84")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"88"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEXVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F85"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F85"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEXVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x k - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"89"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEXVARQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F86"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F86"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEXVARQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t k - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"n INDEXQ"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= k <= 254")," taken from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0x86")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"90"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEXVARQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F87"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F87"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETINDEXVARQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x k - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"91"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TLEN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F88"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F88"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TLEN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the length of a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0x88")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"92"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QTLEN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F89"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F89"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QTLEN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - n or -1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"TLEN"),", but returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"t")," is not a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0x89")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"93"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROSWAPIF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F90"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F90"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROSWAPIF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x or 0 x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a Zero under the topmost Integer x, but only if x != 0."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x90")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"94"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROSWAPIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F91"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F91"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROSWAPIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x \u2013 x or 0 x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a Zero under the topmost Integer x, but only if x = 0."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x91")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROROTRIF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F92"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F92"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROROTRIF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y \u2013 x y or 0 x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a Zero under the second stack entry from the top, but only if the topmost Integer y is non-zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x92")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"96"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROROTRIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F93"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F93"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROROTRIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y \u2013 x y or 0 x y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a Zero under the second stack entry from the top, but only if the topmost Integer y is zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x93")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"97"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROSWAPIF2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F94"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F94"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROSWAPIF2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x \u2013 x or 0 0 x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes two Zeros under the topmost Integer x, but only if x != 0. Equivalent to ZEROSWAPIF; ZEROSWAPIF."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x94")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"98"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROSWAPIFNOT2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F95"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROSWAPIFNOT2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x \u2013 x or 0 0 x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes two Zeros under the topmost Integer x, but only if x = 0. Equivalent to ZEROSWAPIFNOT; ZEROSWAPIFNOT."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x95")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"99"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROROTRIF2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F96"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F96"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROROTRIF2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y \u2013 x y or 0 0 x y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes two Zeros under the second stack entry from the top, but only if the topmost Integer y is non-zero. Equivalent to ZEROROTRIF; ZEROROTRIF."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x96")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"100"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROROTRIFNOT2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F97"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F97"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZEROROTRIFNOT2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y \u2013 x y or 0 0 x y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes two Zeros under the second stack entry from the top, but only if the topmost Integer y is zero. Equivalent to ZEROROTRIFNOT; ZEROROTRIFNOT."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0x97")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"101"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISTUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F8A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F8A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISTUPLE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," depending on whether ",(0,r.kt)("inlineCode",{parentName:"td"},"t")," is a ",(0,r.kt)("em",{parentName:"td"},"Tuple"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0x8A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"102"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LAST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F8B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F8B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LAST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the last element of a non-empty ",(0,r.kt)("em",{parentName:"td"},"Tuple")," ",(0,r.kt)("inlineCode",{parentName:"td"},"t"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0x8B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"103"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TPUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F8C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F8C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TPUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t x - t'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"COMMA"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"104"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TPOP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6F8D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6F8D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TPOP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - t' x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"105"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLSWAPIF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FA0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FA0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLSWAPIF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x or null x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a ",(0,r.kt)("em",{parentName:"td"},"Null")," under the topmost ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", but only if ",(0,r.kt)("inlineCode",{parentName:"td"},"x!=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0xA0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"106"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLSWAPIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FA1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FA1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLSWAPIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x or null x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a ",(0,r.kt)("em",{parentName:"td"},"Null")," under the topmost ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", but only if ",(0,r.kt)("inlineCode",{parentName:"td"},"x=0"),". May be used for stack alignment after quiet primitives such as ",(0,r.kt)("inlineCode",{parentName:"td"},"PLDUXQ"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0xA1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"107"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLROTRIF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FA2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FA2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLROTRIF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x y or null x y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a ",(0,r.kt)("em",{parentName:"td"},"Null")," under the second stack entry from the top, but only if the topmost ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," is non-zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0xA2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"108"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLROTRIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FA3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FA3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLROTRIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x y or null x y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a ",(0,r.kt)("em",{parentName:"td"},"Null")," under the second stack entry from the top, but only if the topmost ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," is zero. May be used for stack alignment after quiet primitives such as ",(0,r.kt)("inlineCode",{parentName:"td"},"LDUXQ"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0xA3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"109"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLSWAPIF2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FA4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FA4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLSWAPIF2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x or null null x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes two nulls under the topmost ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", but only if ",(0,r.kt)("inlineCode",{parentName:"td"},"x!=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0xA4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"NULLSWAPIF")," ",(0,r.kt)("inlineCode",{parentName:"td"},"NULLSWAPIF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"110"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLSWAPIFNOT2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FA5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FA5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLSWAPIFNOT2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x or null null x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes two nulls under the topmost ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", but only if ",(0,r.kt)("inlineCode",{parentName:"td"},"x=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0xA5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"NULLSWAPIFNOT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"NULLSWAPIFNOT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"111"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLROTRIF2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FA6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FA6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLROTRIF2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x y or null null x y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes two nulls under the second stack entry from the top, but only if the topmost ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," is non-zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0xA6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"NULLROTRIF")," ",(0,r.kt)("inlineCode",{parentName:"td"},"NULLROTRIF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"112"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLROTRIFNOT2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FA7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FA7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULLROTRIFNOT2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x y or null null x y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes two nulls under the second stack entry from the top, but only if the topmost ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," is zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F , 0xA7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"NULLROTRIFNOT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"NULLROTRIFNOT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"113"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEX2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FB i:uint2 j:uint2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FBij"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i][j]"," INDEX2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Recovers ",(0,r.kt)("inlineCode",{parentName:"td"},"x=(t_{i+1})_{j+1}")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= i,j <= 3"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i = parse_const_u2][j = parse_const_u2]"," 0x6F, 0xB0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"[i] INDEX")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[j] INDEX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"114"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CADR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEX2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FB4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FB4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CADR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Recovers ",(0,r.kt)("inlineCode",{parentName:"td"},"x=(t_2)_1"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0xB4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"115"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEX2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FB5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FB5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Recovers ",(0,r.kt)("inlineCode",{parentName:"td"},"x=(t_2)_2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0xB5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"116"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEX3"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FE_ i:uint2 j:uint2 k:uint2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FE_ijk"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i][j]"," ","[k]"," INDEX3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Recovers ",(0,r.kt)("inlineCode",{parentName:"td"},"x=t_{i+1}_{j+1}_{k+1}"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i = parse_const_u2][j = parse_const_u2]"," ","[k = parse_const_u2]"," 0x6F, 0xC0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= i,j,k <= 3")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"[i] [j] INDEX2")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[k] INDEX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"117"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEX3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FD4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FD4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Recovers ",(0,r.kt)("inlineCode",{parentName:"td"},"x=t_2_2_1"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0xD4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"118"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDDDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INDEX3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6FD5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"tuple"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6FD5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDDDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"t - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Recovers ",(0,r.kt)("inlineCode",{parentName:"td"},"x=t_2_2_2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6F, 0xD5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"119"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHINT_4"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#7 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"7i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[x]"," PUSHINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," into the stack. ",(0,r.kt)("inlineCode",{parentName:"td"},"-5 <= x <= 10"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[x]"," INT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Here ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," equals four lower-order bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," (",(0,r.kt)("inlineCode",{parentName:"td"},"i=x mod 16"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"120"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZERO"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHINT_4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#70"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"70"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZERO"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x70")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"FALSE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"121"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ONE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHINT_4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#71"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"71"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ONE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- 1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x71")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"122"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TWO"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHINT_4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#72"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"72"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TWO"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- 2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x72")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"123"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TEN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHINT_4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#7A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"7A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TEN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- 10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a ten."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x7A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"124"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHINT_4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#7F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"7F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- -1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x7F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"125"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHINT_8"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#80 xx:int8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"80xx"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[xx]"," PUSHINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- xx"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes integer ",(0,r.kt)("inlineCode",{parentName:"td"},"xx"),". ",(0,r.kt)("inlineCode",{parentName:"td"},"-128 <= xx <= 127"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[xx]"," INT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"126"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHINT_16"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#81 xxxx:int16"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"81xxxx"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[xxxx]"," PUSHINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- xxxx"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes integer ",(0,r.kt)("inlineCode",{parentName:"td"},"xxxx"),". ",(0,r.kt)("inlineCode",{parentName:"td"},"-2^15 <= xx < 2^15"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[xxxx]"," INT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"127"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#81FC18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"81FC18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[1000]"," PUSHINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- 1000"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"128"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHINT_LONG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#82 l:(## 5) xxx:(int (8 * l + 19))"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"82lxxx"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[xxx]"," PUSHINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- xxx"),(0,r.kt)("td",{parentName:"tr",align:"left"},"23"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes integer ",(0,r.kt)("inlineCode",{parentName:"td"},"xxx"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[xxx]"," INT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Details:")," 5-bit ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 30")," determines the length ",(0,r.kt)("inlineCode",{parentName:"td"},"n=8l+19")," of signed big-endian integer ",(0,r.kt)("inlineCode",{parentName:"td"},"xxx"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"The total length of this instruction is ",(0,r.kt)("inlineCode",{parentName:"td"},"l+4")," bytes or ",(0,r.kt)("inlineCode",{parentName:"td"},"n+13=8l+32")," bits."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"129"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHPOW2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#83 xx:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"83xx"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[xx+1]"," PUSHPOW2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- 2^(xx+1)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"(Quietly) pushes ",(0,r.kt)("inlineCode",{parentName:"td"},"2^(xx+1)")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= xx <= 255"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_const_u8_plus_one]"," 0x83, s1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"2^256")," is a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"130"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHNAN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHPOW2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#83FF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"83FF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHNAN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- NaN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x83, 0xFF")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"131"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHPOW2DEC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#84 xx:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"84xx"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[xx+1]"," PUSHPOW2DEC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- 2^(xx+1)-1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes ",(0,r.kt)("inlineCode",{parentName:"td"},"2^(xx+1)-1")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= xx <= 255"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_const_u8_plus_one]"," 0x84, s1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"132"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHNEGPOW2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#85 xx:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"85xx"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[xx+1]"," PUSHNEGPOW2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- -2^(xx+1)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes ",(0,r.kt)("inlineCode",{parentName:"td"},"-2^(xx+1)")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= xx <= 255"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_const_u8_plus_one]"," 0x85, s1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"133"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#88 c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"88"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," PUSHREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes the reference ",(0,r.kt)("inlineCode",{parentName:"td"},"ref")," into the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Details:")," Pushes the first reference of ",(0,r.kt)("inlineCode",{parentName:"td"},"cc.code")," into the stack as a ",(0,r.kt)("em",{parentName:"td"},"Cell")," (and removes this reference from the current continuation)."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"134"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHREFSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#89 c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"89"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," PUSHREFSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"},"118/43"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREF"),", but converts the cell into a ",(0,r.kt)("em",{parentName:"td"},"Slice"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"135"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHREFCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#8A c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"8A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," PUSHREFCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- cont"),(0,r.kt)("td",{parentName:"tr",align:"left"},"118/43"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFSLICE"),", but makes a simple ordinary ",(0,r.kt)("em",{parentName:"td"},"Continuation")," out of the cell."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"136"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#8B x:(## 4) sss:((8 ",(0,r.kt)("em",{parentName:"td"}," x + 4) ")," Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"8Bxsss"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[slice]"," PUSHSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"},"22"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes the slice ",(0,r.kt)("inlineCode",{parentName:"td"},"slice")," into the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[slice]"," SLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Details:")," Pushes the (prefix) subslice of ",(0,r.kt)("inlineCode",{parentName:"td"},"cc.code")," consisting of its first ",(0,r.kt)("inlineCode",{parentName:"td"},"8x+4")," bits and no references (i.e., essentially a bitstring), where ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 15"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A completion tag is assumed, meaning that all trailing zeroes and the last binary one (if present) are removed from this bitstring."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If the original bitstring consists only of zeroes, an empty slice will be pushed."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"137"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#8B04"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"8B04"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[x8]"," PUSHSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes an empty slice (bitstring ``)."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"138"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#8B08"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"8B08"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[x4]"," PUSHSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes bitstring ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"139"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#8B0C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"8B0C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[xC]"," PUSHSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"pushes bitstring ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"140"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHSLICE_REFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#8C r:(## 2) xx:(## 5) c:((r + 1) ",(0,r.kt)("em",{parentName:"td"}," ^Cell) ssss:((8 ")," xx + 1) * Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"8Crxxssss"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[slice]"," PUSHSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"},"25"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes the slice ",(0,r.kt)("inlineCode",{parentName:"td"},"slice")," into the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[slice]"," SLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Details:")," Pushes the (prefix) subslice of ",(0,r.kt)("inlineCode",{parentName:"td"},"cc.code")," consisting of its first ",(0,r.kt)("inlineCode",{parentName:"td"},"1 <= r+1 <= 4")," references and up to first ",(0,r.kt)("inlineCode",{parentName:"td"},"8xx+1")," bits of data, with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= xx <= 31"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A completion tag is also assumed."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"141"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#8C01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"8C01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," PUSHREFSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"},"118/43"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Is equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFSLICE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"142"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHSLICE_LONG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#8D r:(#<= 4) xx:(## 7) c:(r ",(0,r.kt)("em",{parentName:"td"}," ^Cell) ssss:((8 ")," xx + 6) * Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"8Drxxsssss"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[slice]"," PUSHSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"},"28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes the slice ",(0,r.kt)("inlineCode",{parentName:"td"},"slice")," into the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[slice]"," SLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Details:")," Pushes the subslice of ",(0,r.kt)("inlineCode",{parentName:"td"},"cc.code")," consisting of ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 4")," references and up to ",(0,r.kt)("inlineCode",{parentName:"td"},"8xx+6")," bits of data, with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= xx <= 127"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A completion tag is assumed."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"143"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"x{} PUSHSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Examples of ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHSLICE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"x{ABCD1234} PUSHSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"x{}")," is an empty slice. ",(0,r.kt)("inlineCode",{parentName:"td"},"x{...}")," is a hexadecimal literal. ",(0,r.kt)("inlineCode",{parentName:"td"},"b{...}")," is a binary literal."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"b{01101} PUSHSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"More on slice literals ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/Piterden/TON-docs/blob/master/Fift.%20A%20Brief%20Introduction.md#user-content-51-slice-literals"},"here"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Note that the assembler can replace ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHSLICE")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFSLICE")," in certain situations (e.g. if there\u2019s not enough space in the current continuation)."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"144"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<b x{AB12} s, b> PUSHREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- c/s"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Examples of ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREF")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFSLICE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<b x{AB12} s, b> PUSHREFSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"More on building cells in fift ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/Piterden/TON-docs/blob/master/Fift.%20A%20Brief%20Introduction.md#user-content-52-builder-primitives"},"here"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"145"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#8F_ r:(## 2) xx:(## 7) c:(r ",(0,r.kt)("em",{parentName:"td"}," ^Cell) ssss:((8 ")," xx) * Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"8F_rxxcccc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[builder]"," PUSHCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a continuation made from ",(0,r.kt)("inlineCode",{parentName:"td"},"builder"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[builder]"," CONT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Details:")," Pushes the simple ordinary continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"cccc")," made from the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 3")," references and the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= xx <= 127")," bytes of ",(0,r.kt)("inlineCode",{parentName:"td"},"cc.code"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"146"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHCONT_SHORT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#9 x:(## 4) ssss:((8 ",(0,r.kt)("em",{parentName:"td"}," x) ")," Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"},"9xccc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[builder]"," PUSHCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a continuation made from ",(0,r.kt)("inlineCode",{parentName:"td"},"builder"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[builder]"," CONT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Details:")," Pushes an ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"-byte continuation for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 15"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"147"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"const_data"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<{ code }> PUSHCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- c"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a continuation with code ",(0,r.kt)("inlineCode",{parentName:"td"},"code"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<{ code }> CONT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Note that the assembler can replace ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHCONT")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," in certain situations (e.g. if there\u2019s not enough space in the current continuation)."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONT:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"148"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ADD"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ADD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x+y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Adds together two integers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"149"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x-y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"150"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - y-x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SUB"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"151"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NEGATE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NEGATE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - -x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"-1 MULCONST")," or to ",(0,r.kt)("inlineCode",{parentName:"td"},"ZERO SUBR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Notice that it triggers an integer overflow exception if ",(0,r.kt)("inlineCode",{parentName:"td"},"x=-2^256"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"152"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x+1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"1 ADDCONST"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"153"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x-1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"-1 ADDCONST"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"154"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ADDCONST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A6 cc:int8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A6cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc]"," ADDCONST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x+cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-128 <= cc <= 127"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_i8]"," 0xA6, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc]"," ADDINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[-cc]"," SUBCONST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[-cc]"," SUBINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"155"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULCONST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A7 cc:int8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A7cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc]"," MULCONST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x*cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-128 <= cc <= 127"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_i8]"," 0xA7, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc]"," MULINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"156"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MUL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MUL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x*y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"157"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9 m:uint1 s:uint2 cdft:(Either ","[ d:uint2 f:uint2 ][ d:uint2 f:uint2 tt:uint8 ]",")"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9mscdf"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"This is the general encoding of division, with an optional pre-multiplication and an optional replacement of the division or multiplication by a shift. Variable fields are as follows:"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= m <= 1"),"  -  Indicates whether there is pre-multiplication (",(0,r.kt)("inlineCode",{parentName:"td"},"MULDIV")," and its variants), possibly replaced by a left shift."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= s <= 2"),"  -  Indicates whether either the multiplication or the division have been replaced by shifts: ",(0,r.kt)("inlineCode",{parentName:"td"},"s=0")," - no replacement, ",(0,r.kt)("inlineCode",{parentName:"td"},"s=1")," - division replaced by a right shift, ",(0,r.kt)("inlineCode",{parentName:"td"},"s=2")," - multiplication replaced by a left shift (possible only for ",(0,r.kt)("inlineCode",{parentName:"td"},"m=1"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= c <= 1"),"  -  Indicates whether there is a constant one-byte argument ",(0,r.kt)("inlineCode",{parentName:"td"},"tt")," for the shift operator (if ",(0,r.kt)("inlineCode",{parentName:"td"},"s!=0"),"). For ",(0,r.kt)("inlineCode",{parentName:"td"},"s=0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"c=0"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"c=1"),", then ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= tt <= 255"),", and the shift is performed by ",(0,r.kt)("inlineCode",{parentName:"td"},"tt+1")," bits. If ",(0,r.kt)("inlineCode",{parentName:"td"},"s!=0")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"c=0"),", then the shift amount is provided to the instruction as a top-of-stack ",(0,r.kt)("em",{parentName:"td"},"Integer")," in range ",(0,r.kt)("inlineCode",{parentName:"td"},"0...256"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1 <= d <= 3"),"  -  Indicates which results of division are required: ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," - only the quotient, ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," - only the remainder, ",(0,r.kt)("inlineCode",{parentName:"td"},"3")," - both."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= f <= 2"),"  -  Rounding mode: ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," - floor, ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," - nearest integer, ",(0,r.kt)("inlineCode",{parentName:"td"},"2")," - ceiling."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"All instructions below are variants of this."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"158"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A904"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A904"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"q=floor(x/y)"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"r=x-y*q")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x04")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"159"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A905"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A905"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"q\u2019=round(x/y)"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"r\u2019=x-y*q\u2019")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x05")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"160"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIVC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A906"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A906"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIVC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"q\u2019\u2019=ceil(x/y)"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"r\u2019\u2019=x-y*q\u2019\u2019")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x06")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"161"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MOD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A908"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A908"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MOD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - r"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"where q=floor(x/y), r=x mod y=x-yq."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"162"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIVMOD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A90C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A90C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIVMOD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q r"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"where q=floor(x/y), r=x-yq."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x0C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"163"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIVMODR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A90D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A90D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIVMODR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q' r'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"where q' = floor(x/y + 1/2), r' = x - yq'."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x0D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"164"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIVMODC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A90E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A90E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIVMODC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q'' r''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"where q'' = ceil(x/y), r'' = x - yq''."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x0E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"165"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A924"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A924"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - floor(x*c/2^y)"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"166"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RSHIFTR_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A925"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A925"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RSHIFTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - round(x/2^y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x25")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"167"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RSHIFTC_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A926"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A926"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RSHIFTC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - ceil(x/2^y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x26")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"168"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A934 tt:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A934tt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[tt+1]"," RSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x mod 2^(tt+1)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"169"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RSHIFTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A935 tt:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A935tt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[tt+1]"," RSHIFTR#"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - round(x/2^(tt+1))"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"170"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RSHIFTC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A936 tt:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A936tt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[tt+1]"," RSHIFTC#"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - ceil(x/2^(tt+1))"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"171"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MODPOW2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A938 tt:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A938tt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[tt+1]"," MODPOW2#"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x mod 2^(tt+1)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"172"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULDIV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A984"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A98"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULDIV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"q=floor(x*y/z)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x84")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"173"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULDIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A985"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A985"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULDIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - q'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"q'=round(x*y/z)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x85")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"174"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULDIVMOD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A98C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A98C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULDIVMOD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - q r"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"q=floor(x*y/z)"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"r=x*y-z*q")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0x8C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"175"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULRSHIFT_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9A4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9A4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULRSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - floor(x*y/2^z)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= z <= 256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0xA4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"176"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULRSHIFTR_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9A5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9A5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULRSHIFTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - round(x*y/2^z)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= z <= 256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0xA5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"177"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULRSHIFTC_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9A6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9A6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULRSHIFTC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - ceil(x*y/2^z)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= z <= 256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0xA6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"178"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULRSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9B4 tt:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9B4tt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[tt+1]"," MULRSHIFT#"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - floor(x*y/2^(tt+1))"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"179"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULRSHIFTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9B5 tt:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9B5tt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[tt+1]"," MULRSHIFTR#"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - round(x*y/2^(tt+1))"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"180"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MULRSHIFTC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9B6 tt:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9B6tt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[tt+1]"," MULRSHIFTC#"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - ceil(x*y/2^(tt+1))"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"181"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFTDIV_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9C4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9C4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFTDIV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - floor(2^z*x/y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= z <= 256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0xC4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"182"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFTDIVR_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9C5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9C5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFTDIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - round(2^z*x/y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= z <= 256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0xC5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"183"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFTDIVC_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9C6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9C6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFTDIVC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - ceil(2^z*x/y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= z <= 256")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xA9, 0xC6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"184"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFTDIV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9D4 tt:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9D4tt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[tt+1]"," LSHIFT#DIV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - floor(2^(tt+1)*x/y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"185"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFTDIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9D5 tt:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9D5tt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[tt+1]"," LSHIFT#DIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - round(2^(tt+1)*x/y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"186"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFTDIVC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIV_BASE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#A9D6 tt:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_div"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A9D6tt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[tt+1]"," LSHIFT#DIVC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - ceil(2^(tt+1)*x/y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"187"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#AA cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AAcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," LSHIFT#"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x*2^(cc+1)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= cc <= 255")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"188"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#AA00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AA00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[1]"," LSHIFT#"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"MULCONST 2")," or to Forth's 2*."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"189"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#AB cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ABcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," RSHIFT#"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - floor(x/2^(cc+1))"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= cc <= 255")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"190"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFT_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#AC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x*2^y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= y <= 1023")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xAC")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"191"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RSHIFT_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#AD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - floor(x/2^y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= y <= 1023")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xAD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"192"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POW2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#AE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POW2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"y - 2^y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= y <= 1023")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xAE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"ONE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"LSHIFT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"193"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AND"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x&y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bitwise and of two signed integers ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"y"),", sign-extended to infinity."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"194"),(0,r.kt)("td",{parentName:"tr",align:"left"},"OR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"OR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bitwise or of two integers.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"195"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XOR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XOR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x xor y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bitwise xor of two integers."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"196"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - ~x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bitwise not of an integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"197"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FITS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B4 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B4cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," FITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is a ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1"),"-bit signed integer for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= cc <= 255")," (i.e., whether ",(0,r.kt)("inlineCode",{parentName:"td"},"-2^cc <= x < 2^cc"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xB4, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If not, either triggers an integer overflow exception, or replaces ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," with a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN")," (quiet version)."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"198"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKBOOL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B400"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B400"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKBOOL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is a \u201cboolean value'' (i.e., either 0 or -1)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB4, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"199"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UFITS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B5 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B5cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," UFITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is a ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1"),"-bit unsigned integer for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= cc <= 255")," (i.e., whether ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x < 2^(cc+1)"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xB5, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"200"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKBIT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UFITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B500"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B500"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKBIT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is a binary digit (i.e., zero or one)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB5, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"201"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FITSX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B600"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B600"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FITSX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x c - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is a ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"-bit signed integer for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= c <= 1023"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB6, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"202"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UFITSX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B601"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B601"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UFITSX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x c - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is a ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"-bit unsigned integer for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= c <= 1023"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB6, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"203"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BITSIZE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B602"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B602"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BITSIZE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes smallest ",(0,r.kt)("inlineCode",{parentName:"td"},"c >= 0")," such that ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," fits into a ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"-bit signed integer (",(0,r.kt)("inlineCode",{parentName:"td"},"-2^(c-1) <= c < 2^(c-1)"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB6, 0x02")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"204"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UBITSIZE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B603"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B603"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UBITSIZE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes smallest ",(0,r.kt)("inlineCode",{parentName:"td"},"c >= 0")," such that ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," fits into a ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"-bit unsigned integer (",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x < 2^c"),"), or throws a range check exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB6, 0x03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"205"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MIN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B608"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B608"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MIN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x or y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the minimum of two integers ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"y"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB6, 0x08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"206"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MAX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B609"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B609"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MAX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x or y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the maximum of two integers ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"y"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB6, 0x09")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"207"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MINMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B60A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B60A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MINMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x y or y x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sorts two integers. Quiet version of this operation returns two ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),"s if any of the arguments are ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),"s."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB6, 0x0A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"INTSORT2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"208"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ABS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B60B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_logical"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B60B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ABS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"209"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QUIET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7 xx:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arthim_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7xx"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QUIET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},'prefix, transforming any arithmetic operation into its "quiet" variant, indicated by prefixing a Q to its mnemonic. Such operations return NaNs instead of throwing integer overflow exceptions if the results do not fit in Integer\'s, or if one of their arguments is a NaN. Notice that this does not extend to shift amounts and other parameters that must be within a small range (e.g., 0-1023). Also notice that this does not disable type-checking exceptions if a value of a type other than Integer is supplied.'),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"210"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QADD"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QADD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x+y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Always works if x and y are Integers, but returns a NaN if the addition cannot be performed."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"211"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QSUB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QSUB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x-y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"212"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QSUBR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QSUBR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - y-x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"213"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QNEGATE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QNEGATE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - -x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"214"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QINC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QINC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x+1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"215"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDEC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDEC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x-1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"216"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QMUL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QMUL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x*y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"217"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIV"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A904"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A904"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Division returns ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"y=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA9, 0x04")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"218"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A905"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A905"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA9, 0x05")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"219"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIVC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A906"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A906"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIVC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA9, 0x06")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"220"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QMOD"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A908"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A908"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QMOD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - r"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA9, 0x08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"221"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIVMOD"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A90C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A90C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIVMOD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q r"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA9, 0x0C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"222"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIVMODR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A90D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A90D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIVMODR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q' r'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA9, 0x0D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"223"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIVMODC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A90E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A90E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QDIVMODC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - q'' r''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA9, 0x0E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"224"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QMULDIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A985"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A985"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QMULDIVR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - q'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA9, 0x85")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"225"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QMULDIVMOD"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7A98C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7A98C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QMULDIVMOD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y z - q r"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xA9, 0x8C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"226"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QLSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7AC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7AC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QLSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x*2^y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xAC")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"227"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QRSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7AD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7AD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QRSHIFT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - floor(x/2^y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xAD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"228"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QPOW2"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7AE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7AE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QPOW2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"y - 2^y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xAE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"229"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QAND"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7B0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7B0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QAND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x&y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bitwise and (similar to AND), but returns a NaN if either x or y is a NaN instead of throwing an integer overflow exception. However, if one of the arguments is zero, and the other is a NaN, the result is zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xB0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"230"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QOR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7B1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7B1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QOR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Bitwise or. If x = -1 or y = -1, the result is always -1, even if the other argument is a NaN.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"231"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QXOR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7B2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7B2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QXOR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x xor y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xB2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"232"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7B3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7B3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - ~x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xB3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"233"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QFITS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7B4 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7B4cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," QFITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Replaces ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," with a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN")," if x is not a ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1"),"-bit signed integer, leaves it intact otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xB7, 0xB4, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"234"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QUFITS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7B5 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7B5cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," QUFITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Replaces ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," with a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN")," if x is not a ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1"),"-bit unsigned integer, leaves it intact otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xB7, 0xB5, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"235"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QUFITS_8"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7B507"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7B507"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[8]"," QUFITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether x is an unsigned byte (i.e., whether 0 <= x < 2^8), and replaces x with a NaN if this is not the case; leaves x intact otherwise (i.e., if x is an unsigned byte)."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"236"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QFITSX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7B600"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7B600"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QFITSX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x c - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Replaces ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," with a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN")," if x is not a c-bit signed integer, leaves it intact otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xB6, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"237"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QUFITSX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B7B601"),(0,r.kt)("td",{parentName:"tr",align:"left"},"arithm_quiet"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B7B601"),(0,r.kt)("td",{parentName:"tr",align:"left"},"QUFITSX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x c - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Replaces ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," with a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN")," if x is not a c-bit unsigned integer, leaves it intact otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB7, 0xB6, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"238"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SGN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SGN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - sgn(x)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the sign of an integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),":"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x<0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x=0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x>0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"239"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LESS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#B9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"B9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LESS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x<y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x<y"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xB9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"240"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EQUAL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#BA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EQUAL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x=y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x=y"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xBA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"241"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#BB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x<=y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xBB")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"242"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GREATER"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#BC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GREATER"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x>y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xBC")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"243"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#BD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x!=y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"EQUAL")," ",(0,r.kt)("inlineCode",{parentName:"td"},"NOT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"244"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#BE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - x>=y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"LESS")," ",(0,r.kt)("inlineCode",{parentName:"td"},"NOT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xBE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"245"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#BF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y - sgn(x-y)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the sign of ",(0,r.kt)("inlineCode",{parentName:"td"},"x-y"),":"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xBF")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x<y"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x=y"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x>y"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"No integer overflow can occur here unless ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," is a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"246"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EQINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C0 yy:int8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C0yy"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[yy]"," EQINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x=yy"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x=yy"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_i8]"," 0xC0, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-2^7 <= yy < 2^7"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"247"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISZERO"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EQINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C000"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C000"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISZERO"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x=0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether an integer is zero. Corresponds to Forth's ",(0,r.kt)("inlineCode",{parentName:"td"},"0="),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC0, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"248"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LESSINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C1 yy:int8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C1yy"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[yy]"," LESSINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x<yy"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x<yy"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_i8]"," 0xC1, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[yy-1]"," LEQINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-2^7 <= yy < 2^7"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"249"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNEG"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LESSINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C100"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C100"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNEG"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x<0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether an integer is negative. Corresponds to Forth's ",(0,r.kt)("inlineCode",{parentName:"td"},"0<"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC1, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"250"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNPOS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LESSINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C101"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C101"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNPOS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x<=0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether an integer is non-positive."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC1, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"251"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GTINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C2 yy:int8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C2yy"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[yy]"," GTINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x>yy"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x>yy"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_i8]"," 0xC2, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[yy+1]"," GEQINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-2^7 <= yy < 2^7"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"252"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISPOS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GTINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C200"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C200"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISPOS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x>0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether an integer is positive. Corresponds to Forth's ",(0,r.kt)("inlineCode",{parentName:"td"},"0>"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC2, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"253"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNNEG"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GTINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C2FF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C2FF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNNEG"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x >=0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether an integer is non-negative."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC2, 0xFF")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"254"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NEQINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C3 yy:int8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C3yy"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[yy]"," NEQINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x!=yy"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"x!=yy"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_i8]"," 0xC3, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-2^7 <= yy < 2^7"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"255"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNAN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNAN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x=NaN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKNAN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKNAN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18/68"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws an arithmetic overflow exception if ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"257"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SEMPTY"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C700"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C700"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SEMPTY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is empty (i.e., contains no bits of data and no cell references)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"258"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDEMPTY"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C701"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C701"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDEMPTY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," has no bits of data."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"259"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SREMPTY"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C702"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C702"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SREMPTY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," has no references."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x02")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"260"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C703"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C703"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether the first bit of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is a one."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"261"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDLEXCMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C704"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C704"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDLEXCMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Compares the data of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," lexicographically with the data of ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),", returning ",(0,r.kt)("inlineCode",{parentName:"td"},"-1"),", 0, or 1 depending on the result."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x04")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"262"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C705"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C705"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether the data parts of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," coincide, equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SDLEXCMP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ISZERO"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x05")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"263"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPFX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C708"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C708"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPFX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is a prefix of ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"264"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPFXREV"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C709"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C709"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPFXREV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," is a prefix of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SDPFX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x09")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"265"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPPFX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C70A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C70A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPPFX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is a proper prefix of ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," (i.e., a prefix distinct from ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x0A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"266"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPPFXREV"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C70B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C70B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPPFXREV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," is a proper prefix of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x0B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"267"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDSFX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C70C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C70C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDSFX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is a suffix of ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x0C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"268"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDSFXREV"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C70D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C70D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDSFXREV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," is a suffix of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x0D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"269"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPSFX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C70E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C70E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPSFX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is a proper suffix of ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x0E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"270"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPSFXREV"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C70F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C70F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDPSFXREV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," is a proper suffix of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x0F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"271"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCNTLEAD0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C710"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C710"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCNTLEAD0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the number of leading zeroes in ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"272"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCNTLEAD1"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C711"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C711"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCNTLEAD1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the number of leading ones in ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x11")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"273"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCNTTRAIL0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C712"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C712"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCNTTRAIL0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the number of trailing zeroes in ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"274"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCNTTRAIL1"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C713"),(0,r.kt)("td",{parentName:"tr",align:"left"},"compare_other"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C713"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCNTTRAIL1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the number of trailing ones in ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x13")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"275"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C714"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C714"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Calculates diff between first and second parameters and returns it as cell."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"276"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C715"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C715"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Takes the first parameter as document, the second parameter as patch, received on DIFF command, applies patch and saves result document to cell."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x15")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"277"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZIP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C716"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C716"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ZIP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Zip string to cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"278"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNZIP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C717"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C717"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNZIP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Unzip cell to string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x17")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"279"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_ZIP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C718"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C718"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_ZIP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"like ",(0,r.kt)("inlineCode",{parentName:"td"},"DIFF")," but unzip parameters before operation and zip to cell after operation."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x18")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"280"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_ZIP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C719"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C719"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_ZIP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"like ",(0,r.kt)("inlineCode",{parentName:"td"},"DIFF_PATCH")," but unzip parameters before operation and zip to cell after operation."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x19")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"281"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_Q"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C720"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C720"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_Q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"DIFF_PATCH")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"282"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_ZIPQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C721"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C721"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_ZIPQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"DIFF_PATCH_ZIP")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x21")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"283"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_BINARY"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C722"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C722"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_BINARY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"like ",(0,r.kt)("inlineCode",{parentName:"td"},"DIFF_PATCH")," but takes and returns binary arrays instead of string."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x22")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"284"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_BINARY_ZIP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C723"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C723"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_BINARY_ZIP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"like ",(0,r.kt)("inlineCode",{parentName:"td"},"DIFF_PATCH_ZIP")," but takes and returns binary arrays instead of string."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x23")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"285"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_BINARYQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C724"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C724"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_BINARYQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"like ",(0,r.kt)("inlineCode",{parentName:"td"},"DIFF_PATCHQ")," but takes and returns binary arrays instead of string."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x24")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"286"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_BINARY_ZIPQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C725"),(0,r.kt)("td",{parentName:"tr",align:"left"},"diff_operation"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C725"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DIFF_PATCH_BINARY_ZIPQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"like ",(0,r.kt)("inlineCode",{parentName:"td"},"DIFF_PATCH_ZIPQ")," but takes and returns binary arrays instead of string."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC7, 0x25")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"287"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NEWC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NEWC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- b"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Creates a new empty ",(0,r.kt)("em",{parentName:"td"},"Builder"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"288"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ENDC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#C9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"C9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ENDC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"518"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Converts a ",(0,r.kt)("em",{parentName:"td"},"Builder")," into an ordinary ",(0,r.kt)("em",{parentName:"td"},"Cell"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xC9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"289"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STI"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CA cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CAcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," STI"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1"),"-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," into ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= cc <= 255"),", throws a range check exception if ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," does not fit into ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1")," bits."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xCA, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"290"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CB cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CBcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," STU"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1"),"-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," into ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),". In all other respects it is similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"STI"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xCB, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"291"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores a reference to ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," into ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCC")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"292"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBREFR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBREFR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b b'' - b"),(0,r.kt)("td",{parentName:"tr",align:"left"},"518"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"ENDC")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"STREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"ENDCST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"293"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," into ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"294"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b l - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," into ",(0,r.kt)("inlineCode",{parentName:"td"},"b")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 257"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"295"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STUX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STUX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b l - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," into ",(0,r.kt)("inlineCode",{parentName:"td"},"b")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 256"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"296"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIXR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF02"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF02"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIXR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x l - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"STIX"),", but with arguments in a different order."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x02")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"297"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STUXR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF03"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF03"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STUXR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x l - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"STUX"),", but with arguments in a different order."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"298"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF04"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF04"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b l - x b f or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STIX"),". If there is no space in ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", sets ",(0,r.kt)("inlineCode",{parentName:"td"},"b'=b")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"f=-1"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x04")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," does not fit into ",(0,r.kt)("inlineCode",{parentName:"td"},"l")," bits, sets ",(0,r.kt)("inlineCode",{parentName:"td"},"b'=b")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"f=1"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If the operation succeeds, ",(0,r.kt)("inlineCode",{parentName:"td"},"b'")," is the new ",(0,r.kt)("em",{parentName:"td"},"Builder")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"f=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"However, ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 257"),", with a range check exception if this is not so."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"299"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STUXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF05"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF05"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STUXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b l - x b f or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STUX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x05")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"300"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIXRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF06"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF06"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIXRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x l - b x f or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STIXR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x06")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"301"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STUXRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF07"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF07"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STUXRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x l - b x f or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STUXR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x07")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"302"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STI_ALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF08 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF08cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," STI_l"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A longer version of ",(0,r.kt)("inlineCode",{parentName:"td"},"[cc+1] STI"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"303"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STU_ALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF09 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF09cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," STU_l"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A longer version of ",(0,r.kt)("inlineCode",{parentName:"td"},"[cc+1] STU"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"304"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF0A cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF0Acc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," STIR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[cc+1] STI"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xCF, 0x0A, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"305"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STUR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF0B cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF0Bcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," STUR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[cc+1] STU"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xCF, 0x0B, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"306"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF0C cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF0Ccc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," STIQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b - x b f or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STI"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xCF, 0x0C, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"307"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STUQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF0D cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF0Dcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," STUQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b - x b f or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STU"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xCF, 0x0D, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"308"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STIRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF0E cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF0Ecc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," STIRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x - b x f or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STIR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xCF, 0x0E, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"309"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STURQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF0F cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF0Fcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," STURQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x - b x f or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STUR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_plus_one]"," 0xCF, 0x0F, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"310"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREF_ALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREF_l"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A longer version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"311"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b' b - b''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"STBREFR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x11")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"312"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICE_ALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICE_l"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A longer version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STSLICE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"313"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF13"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF13"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b' b - b''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Appends all data from ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b'")," to ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x13")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"314"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREFR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF14"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF14"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREFR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b c - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"STREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"315"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBREFR_ALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBREFR_l"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b b' - b''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A longer encoding of ",(0,r.kt)("inlineCode",{parentName:"td"},"STBREFR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x15")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"316"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICER"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF16"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF16"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICER"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b s - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"STSLICE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"317"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF17"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF17"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b b' - b''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Concatenates two builders."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x17")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCONCAT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"STB"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"318"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREFQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREFQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c b - c b -1 or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x18")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"319"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBREFQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF19"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF19"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBREFQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b' b - b' b -1 or b'' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STBREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x19")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"320"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF1A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF1A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s b - s b -1 or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STSLICE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x1A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"321"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF1B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF1B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b' b - b' b -1 or b'' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STB"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x1B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"322"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREFRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF1C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF1C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREFRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b c - b c -1 or b' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STREFR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x1C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"323"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBREFRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF1D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF1D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBREFRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b b' - b b' -1 or b'' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STBREFR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x1D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"324"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICERQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF1E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF1E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICERQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b s - b s -1 or b'' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STSLICER"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x1E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"325"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF1F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF1F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STBRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b b' - b b' -1 or b'' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"STBR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x1F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCONCATQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"326"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREFCONST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF20 c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF20"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," STREFCONST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - b\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREF")," ",(0,r.kt)("inlineCode",{parentName:"td"},"STREFR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"327"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STREF2CONST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF21 c1:^Cell c2:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF21"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref][ref]"," STREF2CONST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - b\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"STREFCONST")," ",(0,r.kt)("inlineCode",{parentName:"td"},"STREFCONST"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x21")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"328"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ENDXC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF23"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF23"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"x!=0"),", creates a ",(0,r.kt)("em",{parentName:"td"},"special")," or ",(0,r.kt)("em",{parentName:"td"},"exotic")," cell from ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x23")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of the exotic cell must be stored in the first 8 bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"x=0"),", it is equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"ENDC"),". Otherwise some validity checks on the data and references of ",(0,r.kt)("inlineCode",{parentName:"td"},"b")," are performed before creating the exotic cell."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"329"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STILE4"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF28"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STILE4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores a little-endian signed 32-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x28")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"330"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STULE4"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF29"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF29"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STULE4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores a little-endian unsigned 32-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x29")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"331"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STILE8"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF2A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF2A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STILE8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores a little-endian signed 64-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x2A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"332"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STULE8"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF2B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF2B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STULE8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores a little-endian unsigned 64-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x2B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"333"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BDEPTH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BDEPTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the depth of ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),". If no cell references are stored in ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", then ",(0,r.kt)("inlineCode",{parentName:"td"},"x=0"),"; otherwise ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is one plus the maximum of depths of cells referred to from ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"334"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BBITS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BBITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the number of data bits already stored in ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x31")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"335"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the number of cell references already stored in ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"336"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BBITREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF33"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF33"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BBITREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - x y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the numbers of both data bits and cell references in ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"337"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BREMBITS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF35"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF35"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BREMBITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - x'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the number of data bits that can still be stored in ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x35")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"338"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BREMREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF36"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF36"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BREMREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - y'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the number of references that can still be stored in ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x36")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"339"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BREMBITREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF37"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF37"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BREMBITREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - x' y'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the numbers of both data bits and references that can still be stored in ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x37")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"340"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKBITS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF38 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF38cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," BCHKBITS#"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34/84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1")," bits can be stored into ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", where ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= cc <= 255"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"341"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKBITS_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF39"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF39"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKBITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," bits can be stored into ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 1023"),". If there is no space for ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," more bits in ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", or if ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is not within the range ",(0,r.kt)("inlineCode",{parentName:"td"},"0...1023"),", throws an exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x39")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"342"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF3A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF3A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b y -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," references can be stored into ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= y <= 7"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x3A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"343"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKBITREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF3B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF3B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKBITREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x y -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," bits and ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," references can be stored into ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 1023"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= y <= 7"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x3B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"344"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKBITSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF3C cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF3Ccc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," BCHKBITSQ#"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1")," bits can be stored into ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", where ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= cc <= 255"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"345"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKBITSQ_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF3D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF3D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKBITSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," bits can be stored into ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 1023"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x3D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"346"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKREFSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF3E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF3E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKREFSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b y - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," references can be stored into ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= y <= 7"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x3E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"347"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKBITREFSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF3F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF3F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BCHKBITREFSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x y - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," bits and ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," references can be stored into ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 1023"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= y <= 7"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x3F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"348"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STZEROES"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF40"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF40"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STZEROES"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b n - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," binary zeroes into ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x40")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"349"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STONES"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF41"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF41"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STONES"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b n - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," binary ones into ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x41")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"350"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSAME"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF42"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF42"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSAME"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b n x - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," binary ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"es (",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 1"),") into ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x42")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"351"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF43"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF43"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores Continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"cont")," into Builder ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x43")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"352"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICECONST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CFC0_ x:(## 2) y:(## 3) c:(x ",(0,r.kt)("em",{parentName:"td"}," ^Cell) sss:((8 ")," y + 2) * Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CFC0_xysss"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[slice]"," STSLICECONST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"24"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores a constant subslice ",(0,r.kt)("inlineCode",{parentName:"td"},"sss"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Details:")," ",(0,r.kt)("inlineCode",{parentName:"td"},"sss")," consists of ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 3")," references and up to ",(0,r.kt)("inlineCode",{parentName:"td"},"8y+2")," data bits, with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= y <= 7"),". Completion bit is assumed."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Note that the assembler can replace ",(0,r.kt)("inlineCode",{parentName:"td"},"STSLICECONST")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHSLICE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"STSLICER")," if the slice is too big."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"353"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STZERO"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICECONST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF81"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF81"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STZERO"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"24"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores one binary zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x81")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"354"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STONE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICECONST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CF83"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_build"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CF83"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STONE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"24"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores one binary one."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCF, 0x83")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"355"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CTOS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CTOS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - s"),(0,r.kt)("td",{parentName:"tr",align:"left"},"118/43"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Converts a ",(0,r.kt)("em",{parentName:"td"},"Cell")," into a ",(0,r.kt)("em",{parentName:"td"},"Slice"),". Notice that ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," must be either an ordinary cell, or an exotic cell which is automatically ",(0,r.kt)("em",{parentName:"td"},"loaded")," to yield an ordinary cell ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),", converted into a ",(0,r.kt)("em",{parentName:"td"},"Slice")," afterwards."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"356"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ENDS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ENDS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18/68"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Removes a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," from the stack, and throws an exception if it is not empty."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"357"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDI"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D2 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D2cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," LDI"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads (i.e., parses) a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1"),"-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", and returns the remainder of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," as ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"358"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D3 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D3cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," LDU"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1"),"-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD2, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"359"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - c s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads a cell reference ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," from ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"360"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDREFRTOS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDREFRTOS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s' s''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"118/43"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"LDREF")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"CTOS"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"361"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D6 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D6cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," LDSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s'' s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cuts the next ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1")," bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," into a separate ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s''"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD6, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"362"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDIX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D700"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D700"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDIX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit (",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 257"),") integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", and returns the remainder of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," as ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"363"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDUX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D701"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D701"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDUX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," from (the first ",(0,r.kt)("inlineCode",{parentName:"td"},"l")," bits of) ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 256"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"364"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDIX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D702"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D702"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDIX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit integer from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 257"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x02")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"365"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDUX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D703"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D703"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDUX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit integer from ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 256"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"366"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDIXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D704"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D704"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDIXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - x s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"LDIX"),": loads a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit integer from ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," similarly to ",(0,r.kt)("inlineCode",{parentName:"td"},"LDIX"),", but returns a success flag, equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," on success or to ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," on failure (if ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," does not have ",(0,r.kt)("inlineCode",{parentName:"td"},"l")," bits), instead of throwing a cell underflow exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x04")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"367"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDUXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D705"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D705"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDUXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - x s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"LDUX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x05")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"368"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDIXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D706"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D706"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDIXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"PLDIX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x06")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"369"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDUXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D707"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D707"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDUXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"PLDUX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"370"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDI_ALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D708 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D708cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," LDI_l"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A longer encoding for ",(0,r.kt)("inlineCode",{parentName:"td"},"LDI"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"371"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDU_ALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D709 cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D709cc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," LDU_l"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A longer encoding for ",(0,r.kt)("inlineCode",{parentName:"td"},"LDU"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"372"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDI"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D70A cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D70Acc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," PLDI"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1"),"-bit integer from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD7, 0x0A, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"373"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D70B cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D70Bcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," PLDU"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"cc+1"),"-bit integer from ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD7, 0x0B, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"374"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDIQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D70C cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D70Ccc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," LDIQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"LDI"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD7, 0x0C, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"375"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDUQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D70D cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D70Dcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," LDUQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"LDU"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD7, 0x0D, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"376"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDIQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D70E cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D70Ecc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," PLDIQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"PLDI"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD7, 0x0E, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"377"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDUQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D70F cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D70Fcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," PLDUQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"PLDU"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD7, 0x0F, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"378"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDUZ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D714_ c:uint3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D714_c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[32(c+1)]"," PLDUZ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads the first ",(0,r.kt)("inlineCode",{parentName:"td"},"32(c+1)")," bits of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," into an unsigned integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= c <= 7"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is shorter than necessary, missing bits are assumed to be zero. This operation is intended to be used along with ",(0,r.kt)("inlineCode",{parentName:"td"},"IFBITJMP")," and similar instructions."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_plduz_parameter]"," 0xD7, 0x10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"379"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDSLICEX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D718"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D718"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDSLICEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - s'' s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023")," bits from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," into a separate ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s''"),", returning the remainder of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," as ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x18")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"380"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDSLICEX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D719"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D719"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDSLICEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - s''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023")," bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," as ",(0,r.kt)("inlineCode",{parentName:"td"},"s''"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x19")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"381"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDSLICEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D71A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D71A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDSLICEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - s'' s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"LDSLICEX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x1A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"382"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDSLICEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D71B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D71B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDSLICEXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - s' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"LDSLICEXQ"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x1B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"383"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDSLICE_ALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D71C cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D71Ccc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," LDSLICE_l"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s'' s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A longer encoding for ",(0,r.kt)("inlineCode",{parentName:"td"},"LDSLICE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"384"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D71D cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D71Dcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," PLDSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 < cc+1 <= 256")," bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," as ",(0,r.kt)("inlineCode",{parentName:"td"},"s''"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD7, 0x1D, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"385"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDSLICEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D71E cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D71Ecc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," LDSLICEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s'' s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"LDSLICE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD7, 0x1E, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"386"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDSLICEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D71F cc:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D71Fcc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc+1]"," PLDSLICEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s'' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"PLDSLICE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[cc = parse_const_u8_plus_one]"," 0xD7, 0x1F, cc")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"387"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCUTFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D720"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D720"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCUTFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023")," bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),". It is equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PLDSLICEX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"388"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDSKIPFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D721"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D721"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDSKIPFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns all but the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023")," bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),". It is equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"LDSLICEX")," ",(0,r.kt)("inlineCode",{parentName:"td"},"NIP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x21")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"389"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCUTLAST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D722"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D722"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDCUTLAST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the last ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023")," bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x22")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"390"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDSKIPLAST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D723"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D723"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDSKIPLAST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns all but the last ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023")," bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x23")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"391"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDSUBSTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D724"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D724"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDSUBSTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l l' - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l' <= 1023")," bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," starting from offset ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023"),", thus extracting a bit substring out of the data of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x24")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"392"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDBEGINSX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D726"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D726"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDBEGINSX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - s''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," begins with (the data bits of) ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),", and removes ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," from ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," on success. On failure throws a cell deserialization exception. Primitive ",(0,r.kt)("inlineCode",{parentName:"td"},"SDPFXREV")," can be considered a quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"SDBEGINSX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x26")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"393"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDBEGINSXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D727"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D727"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDBEGINSXQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s s' - s'' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"SDBEGINSX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x27")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"394"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDBEGINS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D72A_ x:(## 7) sss:((8 ",(0,r.kt)("em",{parentName:"td"}," x + 3) ")," Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D72A_xsss"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[slice]"," SDBEGINS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," begins with constant bitstring ",(0,r.kt)("inlineCode",{parentName:"td"},"sss")," of length ",(0,r.kt)("inlineCode",{parentName:"td"},"8x+3")," (with continuation bit assumed), where ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 127"),", and removes ",(0,r.kt)("inlineCode",{parentName:"td"},"sss")," from ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," on success."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"395"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDBEGINS_0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D72802"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D72802"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[0]"," SDBEGINS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," begins with a binary zero."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"396"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDBEGINS_1"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D72806"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D72802"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[1]"," SDBEGINS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," begins with a binary one."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"397"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDBEGINSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D72E_ x:(## 7) sss:((8 ",(0,r.kt)("em",{parentName:"td"}," x + 3) ")," Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D72E_xsss"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[slice]"," SDBEGINSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s'' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"SDBEGINS"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"398"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCUTFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D730"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D730"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCUTFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l r - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023")," bits and first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 4")," references of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"399"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SSKIPFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D731"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D731"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SSKIPFIRST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l r - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns all but the first ",(0,r.kt)("inlineCode",{parentName:"td"},"l")," bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"r")," references of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x31")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"400"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCUTLAST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D732"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D732"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCUTLAST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l r - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the last ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023")," data bits and last ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 4")," references of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"401"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SSKIPLAST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D733"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D733"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SSKIPLAST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l r - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns all but the last ",(0,r.kt)("inlineCode",{parentName:"td"},"l")," bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"r")," references of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"402"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D734"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D734"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l r l' r' - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l' <= 1023")," bits and ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r' <= 4")," references from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", after skipping the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023")," bits and first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 4")," references."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x34")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"403"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SPLIT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D736"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D736"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SPLIT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l r - s' s''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Splits the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= 1023")," data bits and first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 4")," references from ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," into ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),", returning the remainder of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," as ",(0,r.kt)("inlineCode",{parentName:"td"},"s''"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x36")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"404"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SPLITQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D737"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D737"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SPLITQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l r - s' s'' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"SPLIT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x37")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"405"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XCTOS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D739"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D739"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - s ?"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Transforms an ordinary or exotic cell into a ",(0,r.kt)("em",{parentName:"td"},"Slice"),", as if it were an ordinary cell. A flag is returned indicating whether ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," is exotic. If that be the case, its type can later be deserialized from the first eight bits of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x39")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"406"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XLOAD"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D73A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D73A"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - c'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads an exotic cell ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," and returns an ordinary cell ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," is already ordinary, does nothing. If ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," cannot be loaded, throws an exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x3A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"407"),(0,r.kt)("td",{parentName:"tr",align:"left"},"XLOADQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D73B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D73B"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - c' -1 or c 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads an exotic cell ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," and returns an ordinary cell ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," is already ordinary, does nothing. If ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," cannot be loaded, returns 0."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x3B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"408"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKBITS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D741"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D741"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKBITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether there are at least ",(0,r.kt)("inlineCode",{parentName:"td"},"l")," data bits in ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),". If this is not the case, throws a cell deserialisation (i.e., cell underflow) exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x41")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"409"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D742"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D742"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s r -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether there are at least ",(0,r.kt)("inlineCode",{parentName:"td"},"r")," references in ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x42")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"410"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKBITREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D743"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D743"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKBITREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l r -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether there are at least ",(0,r.kt)("inlineCode",{parentName:"td"},"l")," data bits and ",(0,r.kt)("inlineCode",{parentName:"td"},"r")," references in ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x43")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"411"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKBITSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D745"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D745"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKBITSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether there are at least ",(0,r.kt)("inlineCode",{parentName:"td"},"l")," data bits in ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x45")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"412"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKREFSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D746"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D746"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKREFSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s r - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether there are at least ",(0,r.kt)("inlineCode",{parentName:"td"},"r")," references in ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x46")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"413"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKBITREFSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D747"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D747"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SCHKBITREFSQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s l r - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether there are at least ",(0,r.kt)("inlineCode",{parentName:"td"},"l")," data bits and ",(0,r.kt)("inlineCode",{parentName:"td"},"r")," references in ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x47")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"414"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDREFVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D748"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D748"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDREFVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s n - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-th cell reference of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 3"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x48")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"415"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SBITS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D749"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D749"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SBITS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - l"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the number of data bits in ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x49")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"416"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D74A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D74A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - r"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the number of references in ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x4A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"417"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SBITREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D74B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D74B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SBITREFS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - l r"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns both the number of data bits and the number of references in ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x4B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"418"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDREFIDX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D74E_ n:uint2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D74E_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," PLDREFIDX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-th cell reference of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", where ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 3"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u2]"," 0xD7, 0x4C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"419"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDREFIDX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D74C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D74C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads the first cell reference of a ",(0,r.kt)("em",{parentName:"td"},"Slice"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x4C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"420"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDILE4"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D750"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D750"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDILE4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads a little-endian signed 32-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x50")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"421"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDULE4"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D751"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D751"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDULE4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads a little-endian unsigned 32-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x51")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"422"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDILE8"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D752"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D752"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDILE8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads a little-endian signed 64-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x52")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"423"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDULE8"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D753"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D753"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDULE8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads a little-endian unsigned 64-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x53")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"424"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDILE4"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D754"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D754"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDILE4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads a little-endian signed 32-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x54")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"425"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDULE4"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D755"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D755"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDULE4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads a little-endian unsigned 32-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x55")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"426"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDILE8"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D756"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D756"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDILE8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads a little-endian signed 64-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x56")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"427"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDULE8"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D757"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D757"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDULE8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads a little-endian unsigned 64-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x57")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"428"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDILE4Q"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D758"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D758"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDILE4Q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quietly loads a little-endian signed 32-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x58")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"429"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDULE4Q"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D759"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D759"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDULE4Q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quietly loads a little-endian unsigned 32-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x59")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"430"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDILE8Q"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D75A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D75A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDILE8Q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quietly loads a little-endian signed 64-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x5A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"431"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDULE8Q"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D75B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D75B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDULE8Q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quietly loads a little-endian unsigned 64-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x5B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"432"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDILE4Q"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D75C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D75C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDILE4Q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quietly preloads a little-endian signed 32-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x5C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"433"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDULE4Q"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D75D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D75D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDULE4Q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quietly preloads a little-endian unsigned 32-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x5D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"434"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDILE8Q"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D75E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D75E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDILE8Q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quietly preloads a little-endian signed 64-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x5E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"435"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDULE8Q"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D75F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D75F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDULE8Q"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quietly preloads a little-endian unsigned 64-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x5F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"436"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDZEROES"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D760"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D760"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDZEROES"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - n s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the count ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," of leading zero bits in ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", and removes these bits from ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x60")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"437"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDONES"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D761"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D761"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDONES"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - n s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the count ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," of leading one bits in ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", and removes these bits from ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x61")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"438"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDSAME"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D762"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D762"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDSAME"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s x - n s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the count ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," of leading bits equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 1")," in ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", and removes these bits from ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x62")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"439"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDEPTH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D764"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D764"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDEPTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the depth of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," has no references, then ",(0,r.kt)("inlineCode",{parentName:"td"},"x=0"),"; otherwise ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is one plus the maximum of depths of cells referred to from ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"440"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDEPTH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D765"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D765"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDEPTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the depth of ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," has no references, then ",(0,r.kt)("inlineCode",{parentName:"td"},"x=0"),"; otherwise ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is one plus the maximum of depths of cells referred to from ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," is a ",(0,r.kt)("em",{parentName:"td"},"Null")," instead of a ",(0,r.kt)("em",{parentName:"td"},"Cell"),", returns zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x65")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"441"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D766"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cell_parse"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D766"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - cont s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads a continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"cont")," from ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD7, 0x66")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"442"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EXECUTE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EXECUTE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Calls"),", or ",(0,r.kt)("em",{parentName:"td"},"executes"),", continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"443"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JMPX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#D9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JMPX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Jumps"),", or transfers control, to continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xD9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"The remainder of the previous current continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"cc")," is discarded."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"444"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLXARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DA p:uint4 r:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DApr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[p][r]"," CALLXARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Calls")," continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"p")," parameters and expecting ",(0,r.kt)("inlineCode",{parentName:"td"},"r")," return values"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= p <= 15"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 15")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"445"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLXARGS_VAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB0 p:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB0p"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[p]"," -1 CALLXARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Calls")," continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= p <= 15")," parameters, expecting an arbitrary number of return values."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"446"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JMPXARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB1 p:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB1p"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[p]"," JMPXARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Jumps")," to continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", passing only the top ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= p <= 15")," values from the current stack to it (the remainder of the current stack is discarded)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[p = parse_const_u4]"," 0xDB, 0x10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"447"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB2 r:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB2r"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[r]"," RETARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Returns")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),", with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 15")," return values taken from the current stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[r = parse_const_u4]"," 0xDB, 0x20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"448"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB30"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Returns")," to the continuation at ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),". The remainder of the current continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"cc")," is discarded."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETTRUE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c0 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"449"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB31"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Returns")," to the continuation at ",(0,r.kt)("inlineCode",{parentName:"td"},"c1"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x31")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETFALSE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c1 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"450"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BRANCH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BRANCH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Performs ",(0,r.kt)("inlineCode",{parentName:"td"},"RETTRUE")," if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f!=0"),", or ",(0,r.kt)("inlineCode",{parentName:"td"},"RETFALSE")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"f=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETBOOL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"451"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLCC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLCC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("em",{parentName:"td"},"Call with current continuation"),", transfers control to ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", pushing the old value of ",(0,r.kt)("inlineCode",{parentName:"td"},"cc")," into ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"'s stack (instead of discarding it or writing it into new ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x34")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"452"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JMPXDATA"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB35"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB35"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JMPXDATA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"CALLCC"),", but the remainder of the current continuation (the old value of ",(0,r.kt)("inlineCode",{parentName:"td"},"cc"),") is converted into a ",(0,r.kt)("em",{parentName:"td"},"Slice")," before pushing it into the stack of ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x35")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"453"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLCCARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB36 p:uint4 r:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB36pr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[p][r]"," CALLCCARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"CALLXARGS"),", but pushes the old value of ",(0,r.kt)("inlineCode",{parentName:"td"},"cc")," (along with the top ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= p <= 15")," values from the original stack) into the stack of newly-invoked continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", setting ",(0,r.kt)("inlineCode",{parentName:"td"},"cc.nargs")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"-1 <= r <= 14"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c1 = parse_const_u4][c2 = parse_const_i4]"," 0xDB, 0x36, (c1 << 4)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"454"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLXVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB38"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB38"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLXVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c p r -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"CALLXARGS"),", but takes ",(0,r.kt)("inlineCode",{parentName:"td"},"-1 <= p,r <= 254")," from the stack. The next three operations also take ",(0,r.kt)("inlineCode",{parentName:"td"},"p")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"r")," from the stack, both in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"-1...254"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x38")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"455"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB39"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB39"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"p r -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"RETARGS"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x39")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"456"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JMPXVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB3A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB3A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JMPXVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c p r -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPXARGS"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x3A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"457"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLCCVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB3B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB3B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLCCVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c p r -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"CALLCCARGS"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x3B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"458"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB3C c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB3C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," CALLREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"CALLX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"459"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JMPREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB3D c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB3D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," JMPREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"460"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JMPREFDATA"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB3E c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB3E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," JMPREFDATA"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPXDATA"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x3E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"461"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETDATA"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DB3F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_basic"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DB3F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETDATA"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c0 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPXDATA"),". In this way, the remainder of the current continuation is converted into a ",(0,r.kt)("em",{parentName:"td"},"Slice")," and returned to the caller."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDB, 0x3F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"462"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFRET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFRET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Performs a ",(0,r.kt)("inlineCode",{parentName:"td"},"RET"),", but only if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f")," is non-zero. If ",(0,r.kt)("inlineCode",{parentName:"td"},"f")," is a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),", throws an integer overflow exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDC")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOT:"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"463"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOTRET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOTRET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Performs a ",(0,r.kt)("inlineCode",{parentName:"td"},"RET"),", but only if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f")," is zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"IF:"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"464"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Performs ",(0,r.kt)("inlineCode",{parentName:"td"},"EXECUTE")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," (i.e., ",(0,r.kt)("em",{parentName:"td"},"executes")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"), but only if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f")," is non-zero. Otherwise simply discards both values."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"465"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IF:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<{ code }>IF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"466"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#DF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Executes continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", but only if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f")," is zero. Otherwise simply discards both values."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xDF")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"467"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOT:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IFNOT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<{ code }>IFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"468"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Jumps to ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," (similarly to ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),"), but only if ",(0,r.kt)("inlineCode",{parentName:"td"},"f")," is non-zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"469"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFJMP:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IFJMP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"470"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOTJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOTJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Jumps to ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," (similarly to ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),"), but only if ",(0,r.kt)("inlineCode",{parentName:"td"},"f")," is zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"471"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOTJMP:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IFNOTJMP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"472"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFELSE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFELSE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f c c' -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"If integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f")," is non-zero, executes ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", otherwise executes ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),". Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"CONDSELCHK")," ",(0,r.kt)("inlineCode",{parentName:"td"},"EXECUTE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"473"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IF:<{ code1 }>ELSE<{ code2 }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code1 }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code2 }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IFELSE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"474"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E300 c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E300"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," IFREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IF"),", with the optimization that the cell reference is not actually loaded into a ",(0,r.kt)("em",{parentName:"td"},"Slice")," and then converted into an ordinary ",(0,r.kt)("em",{parentName:"td"},"Continuation")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"f=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Gas consumption of this primitive depends on whether ",(0,r.kt)("inlineCode",{parentName:"td"},"f=0")," and whether the reference was loaded before."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar remarks apply other primitives that accept a continuation as a reference."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"475"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E301 c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E301"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," IFNOTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IFNOT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"476"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFJMPREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E302 c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E302"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," IFJMPREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IFJMP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"477"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOTJMPREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E303 c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E303"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," IFNOTJMPREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IFNOTJMP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"478"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONDSEL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E304"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E304"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONDSEL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f x y - x or y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"If integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f")," is non-zero, returns ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", otherwise returns ",(0,r.kt)("inlineCode",{parentName:"td"},"y"),". Notice that no type checks are performed on ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"y"),"; as such, it is more like a conditional stack operation. Roughly equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"ROT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ISZERO")," ",(0,r.kt)("inlineCode",{parentName:"td"},"INC")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ROLLX")," ",(0,r.kt)("inlineCode",{parentName:"td"},"NIP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x04")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"479"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONDSELCHK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E305"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E305"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONDSELCHK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f x y - x or y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Same as ",(0,r.kt)("inlineCode",{parentName:"td"},"CONDSEL"),", but first checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," have the same type."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x05")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"480"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFRETALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E308"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E308"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFRETALT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Performs ",(0,r.kt)("inlineCode",{parentName:"td"},"RETALT")," if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f!=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"481"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOTRETALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E309"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E309"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNOTRETALT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Performs ",(0,r.kt)("inlineCode",{parentName:"td"},"RETALT")," if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x09")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"482"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFREFELSE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E30D c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E30D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," IFREFELSE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IFELSE"),", with the optimization that the cell reference is not actually loaded into a ",(0,r.kt)("em",{parentName:"td"},"Slice")," and then converted into an ordinary ",(0,r.kt)("em",{parentName:"td"},"Continuation")," if ",(0,r.kt)("inlineCode",{parentName:"td"},"f=0"),". Similar remarks apply to the next two primitives: cells are converted into continuations only when necessary."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"483"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFELSEREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E30E c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E30E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref]"," IFELSEREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IFELSE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"484"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFREFELSEREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E30F c1:^Cell c2:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E30F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref][ref]"," IFREFELSEREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHREFCONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"IFELSE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"485"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFBITJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E39_ n:uint5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E39_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," IFBITJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x c - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether bit ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 31")," is set in integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", and if so, performs ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX")," to continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),". Value ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is left in the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u5]"," 0xE3, 0x80")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"486"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNBITJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E3B_ n:uint5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E3B_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," IFNBITJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x c - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Jumps to ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," if bit ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 31")," is not set in integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u5]"," 0xE3, 0xA0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"487"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFBITJMPREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E3D_ n:uint5 c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E3D_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref][n]"," IFBITJMPREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Performs a ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPREF")," if bit ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 31")," is set in integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u5]"," 0xE3, 0xC0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"488"),(0,r.kt)("td",{parentName:"tr",align:"left"},"IFNBITJMPREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E3F_ n:uint5 c:^Cell"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_conditional"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E3F_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref][n]"," IFNBITJMPREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"126/51"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Performs a ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPREF")," if bit ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 31")," is not set in integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u5]"," 0xE3, 0xE0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"489"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEAT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEAT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"n c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Executes continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," times, if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," is non-negative. If ",(0,r.kt)("inlineCode",{parentName:"td"},"n>=2^31")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"n<-2^31"),", generates a range check exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Notice that a ",(0,r.kt)("inlineCode",{parentName:"td"},"RET")," inside the code of ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," works as a ",(0,r.kt)("inlineCode",{parentName:"td"},"continue"),", not as a ",(0,r.kt)("inlineCode",{parentName:"td"},"break"),". One should use either alternative (experimental) loops or alternative ",(0,r.kt)("inlineCode",{parentName:"td"},"RETALT")," (along with a ",(0,r.kt)("inlineCode",{parentName:"td"},"SETEXITALT")," before the loop) to ",(0,r.kt)("inlineCode",{parentName:"td"},"break")," out of a loop."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"490"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEAT:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"n -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"REPEAT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<{ code }>REPEAT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"491"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEATEND"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEATEND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"n -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"REPEAT"),", but it is applied to the current continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"cc"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEAT:"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"492"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTIL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTIL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Executes continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", then pops an integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," from the resulting stack. If ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is zero, performs another iteration of this loop. The actual implementation of this primitive involves an extraordinary continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"ec_until")," with its arguments set to the body of the loop (continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),") and the original current continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"cc"),". This extraordinary continuation is then saved into the savelist of ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," as ",(0,r.kt)("inlineCode",{parentName:"td"},"c.c0")," and the modified ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," is then executed. The other loop primitives are implemented similarly with the aid of suitable extraordinary continuations."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"493"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTIL:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"UNTIL"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<{ code }>UNTIL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"494"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTILEND"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTILEND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"UNTIL"),", but executes the current continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"cc")," in a loop. When the loop exit condition is satisfied, performs a ",(0,r.kt)("inlineCode",{parentName:"td"},"RET"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTIL:"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"495"),(0,r.kt)("td",{parentName:"tr",align:"left"},"WHILE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"WHILE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c' c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Executes ",(0,r.kt)("inlineCode",{parentName:"td"},"c'")," and pops an integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," from the resulting stack. If ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is zero, exists the loop and transfers control to the original ",(0,r.kt)("inlineCode",{parentName:"td"},"cc"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is non-zero, executes ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", and then begins a new iteration."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"496"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"WHILE:<{ cond }>DO<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ cond }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"WHILE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"497"),(0,r.kt)("td",{parentName:"tr",align:"left"},"WHILEEND"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"WHILEEND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c' -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"WHILE"),", but uses the current continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"cc")," as the loop body."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"498"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAIN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAIN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"REPEAT"),", but executes ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," infinitely many times. A ",(0,r.kt)("inlineCode",{parentName:"td"},"RET")," only begins a new iteration of the infinite loop, which can be exited only by an exception, or a ",(0,r.kt)("inlineCode",{parentName:"td"},"RETALT")," (or an explicit ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xEA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"499"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAIN:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"AGAIN"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<{ code }>AGAIN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"500"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAINEND"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAINEND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"AGAIN"),", but performed with respect to the current continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"cc"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xEB")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAIN:"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"501"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEATBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E314"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E314"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEATBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"n c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"REPEAT"),", but also sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," to the original ",(0,r.kt)("inlineCode",{parentName:"td"},"cc")," after saving the old value of ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," into the savelist of the original ",(0,r.kt)("inlineCode",{parentName:"td"},"cc"),". In this way ",(0,r.kt)("inlineCode",{parentName:"td"},"RETALT")," could be used to break out of the loop body."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"502"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E314"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEATBRK:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"n -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"REPEATBRK"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<{ code }>REPEATBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"503"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEATENDBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E315"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E315"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REPEATENDBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"n -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"REPEATEND"),", but also sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," to the original ",(0,r.kt)("inlineCode",{parentName:"td"},"c0")," after saving the old value of ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," into the savelist of the original ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),". Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SAMEALTSAVE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"REPEATEND"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x15")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"504"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTILBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E316"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E316"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTILBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"UNTIL"),", but also modifies ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," in the same way as ",(0,r.kt)("inlineCode",{parentName:"td"},"REPEATBRK"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"505"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E316"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTILBRK:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"UNTILBRK"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"506"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTILENDBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E317"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E317"),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTILENDBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SAMEALTSAVE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"UNTILEND"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x17")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"UNTILBRK:"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"507"),(0,r.kt)("td",{parentName:"tr",align:"left"},"WHILEBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E318"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E318"),(0,r.kt)("td",{parentName:"tr",align:"left"},"WHILEBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c' c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"WHILE"),", but also modifies ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," in the same way as ",(0,r.kt)("inlineCode",{parentName:"td"},"REPEATBRK"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x18")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"508"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E318"),(0,r.kt)("td",{parentName:"tr",align:"left"},"WHILEBRK:<{ cond }>DO<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ cond }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"WHILEBRK"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"509"),(0,r.kt)("td",{parentName:"tr",align:"left"},"WHILEENDBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E319"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E319"),(0,r.kt)("td",{parentName:"tr",align:"left"},"WHILEENDBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SAMEALTSAVE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"WHILEEND"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x19")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"510"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAINBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E31A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E31A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAINBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"AGAIN"),", but also modifies ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," in the same way as ",(0,r.kt)("inlineCode",{parentName:"td"},"REPEATBRK"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x1A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"511"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E31A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAINBRK:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"AGAINBRK"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"512"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAINENDBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#E31B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_loops"),(0,r.kt)("td",{parentName:"tr",align:"left"},"E31B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAINENDBRK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SAMEALTSAVE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"AGAINEND"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xE3, 0x1B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"AGAINBRK:"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"513"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCONTARGS_N"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EC r:uint4 n:(#<= 14)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_stack"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ECrn"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[r][n]"," SETCONTARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x_1 x_2...x_r c - c'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+s\u201d"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"[r] -1 SETCONTARGS"),", but sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c.nargs")," to the final size of the stack of ",(0,r.kt)("inlineCode",{parentName:"td"},"c'")," plus ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),". In other words, transforms ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," into a ",(0,r.kt)("em",{parentName:"td"},"closure")," or a ",(0,r.kt)("em",{parentName:"td"},"partially applied function"),", with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 14")," arguments missing."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"514"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETNUMARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCONTARGS_N"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EC0 n:(#<= 14)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_stack"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EC0n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," SETNUMARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - c'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c.nargs")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," plus the current depth of ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"'s stack, where ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 14"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"c.nargs")," is already set to a non-negative value, does nothing."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4_14]"," 0xEC, c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"515"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCONTARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EC r:uint4 n:(## 4) {n = 15}"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_stack"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ECrF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[r]"," -1 SETCONTARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x_1 x_2...x_r c - c'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+s\u201d"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 15")," values ",(0,r.kt)("inlineCode",{parentName:"td"},"x_1...x_r")," into the stack of (a copy of) the continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", starting with ",(0,r.kt)("inlineCode",{parentName:"td"},"x_1"),". If the final depth of ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"'s stack turns out to be greater than ",(0,r.kt)("inlineCode",{parentName:"td"},"c.nargs"),", a stack overflow exception is generated."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"516"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETURNARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED0 p:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_stack"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED0p"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[p]"," RETURNARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+s\u201d"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Leaves only the top ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= p <= 15")," values in the current stack (somewhat similarly to ",(0,r.kt)("inlineCode",{parentName:"td"},"ONLYTOPX"),"), with all the unused bottom values not discarded, but saved into continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c0")," in the same way as ",(0,r.kt)("inlineCode",{parentName:"td"},"SETCONTARGS")," does."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4]"," 0xED, c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"517"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETURNVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_stack"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RETURNVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"p -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+s\u201d"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"RETURNARGS"),", but with Integer ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= p <= 255")," taken from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0x10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"518"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCONTVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_stack"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCONTVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x_1 x_2...x_r c r n - c'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+s\u201d"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"SETCONTARGS"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 255")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"-1 <= n <= 255")," taken from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0x11")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"519"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETNUMVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_stack"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETNUMVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c n - c'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"-1 <= n <= 255")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0x12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"n=-1"),", this operation does nothing (",(0,r.kt)("inlineCode",{parentName:"td"},"c'=c"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Otherwise its action is similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"[n] SETNUMARGS"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," taken from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"520"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLESS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED1E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_create"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED1E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLESS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Transforms a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," into a simple ordinary continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", with ",(0,r.kt)("inlineCode",{parentName:"td"},"c.code=s")," and an empty stack and savelist."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0x1E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"521"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLESSVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED1F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_create"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED1F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLESSVARARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x_1...x_r s r n - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+s\u201d"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"ROT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"BLESS")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ROTREV")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SETCONTVARARGS"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0x1F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"522"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLESSARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EE r:uint4 n:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_create"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EErn"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[r][n]"," BLESSARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x_1...x_r s - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 15"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"-1 <= n <= 14")),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c1 = parse_const_u4][c2 = parse_const_i4]"," 0xEE, (c1 << 4)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"BLESS")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[r] [n] SETCONTARGS"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"The value of ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," is represented inside the instruction by the 4-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"n mod 16"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"523"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLESSNUMARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLESSARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EE0 n:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_create"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EE0n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," BLESSNUMARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - c"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Also transforms a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," into a ",(0,r.kt)("em",{parentName:"td"},"Continuation")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", but sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c.nargs")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 14"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4_14]"," 0xEE, c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"524"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED4 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED4i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," PUSHCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes the current value of control register ",(0,r.kt)("inlineCode",{parentName:"td"},"c(i)"),". If the control register is not supported in the current codepage, or if it does not have a value, an exception is triggered."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_control_register]"," 0xED, 0x40")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," PUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"525"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHROOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED44"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED44"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c4 PUSHCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes the \u201cglobal data root'' cell reference, thus enabling access to persistent smart-contract data."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0x44")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c4 PUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POPCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED5 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED5i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," POPCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pops a value ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," from the stack and stores it into control register ",(0,r.kt)("inlineCode",{parentName:"td"},"c(i)"),", if supported in the current codepage. Notice that if a control register accepts only values of a specific type, a type-checking exception may occur."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_control_register]"," 0xED, 0x50")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," POP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"527"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POPROOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POPCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED54"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED54"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c4 POPCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets the \u201cglobal data root'' cell reference, thus allowing modification of persistent smart-contract data."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0x54")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c4 POP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"528"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCONTCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED6 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED6i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," SETCONT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x c - c'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," into the savelist of continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," as ",(0,r.kt)("inlineCode",{parentName:"td"},"c(i)"),", and returns the resulting continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),". Almost all operations with continuations may be expressed in terms of ",(0,r.kt)("inlineCode",{parentName:"td"},"SETCONTCTR"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"POPCTR"),", and ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHCTR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_control_register]"," 0xED, 0x60")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," SETCONTCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"529"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETRETCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED7 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED7i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," SETRETCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c0 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] SETCONTCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c0 POPCTR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_control_register]"," 0xED, 0x70")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"530"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETALTCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED8 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED8i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," SETALTCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c1 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] SETCONTCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c0 POPCTR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_control_register]"," 0xED, 0x80")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"531"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POPSAVE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#ED9 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ED9i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," POPSAVE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] POPCTR"),", but also saves the old value of ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i]")," into continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_control_register]"," 0xED, 0x90")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," POPCTRSAVE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent (up to exceptions) to ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] SAVECTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] POPCTR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"532"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SAVE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDA i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDAi"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," SAVE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Saves the current value of ",(0,r.kt)("inlineCode",{parentName:"td"},"c(i)")," into the savelist of continuation ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),". If an entry for ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i]")," is already present in the savelist of ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),", nothing is done. Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] SETRETCTR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_control_register]"," 0xED, 0xA0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," SAVECTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"533"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SAVEALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDB i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDBi"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," SAVEALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] SAVE"),", but saves the current value of ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i]")," into the savelist of ",(0,r.kt)("inlineCode",{parentName:"td"},"c1"),", not ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_control_register]"," 0xED, 0xB0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," SAVEALTCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"534"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SAVEBOTH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDC i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDCi"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," SAVEBOTH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"DUP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] SAVE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] SAVEALT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_control_register]"," 0xED, 0xC0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"c","[i]"," SAVEBOTHCTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"535"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHCTRX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDE0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDE0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PUSHCTRX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] PUSHCTR"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= i <= 255"),", taken from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xE0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Notice that this primitive is one of the few \u201cexotic'' primitives, which are not polymorphic like stack manipulation primitives, and at the same time do not have well-defined types of parameters and return values, because the type of ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," depends on ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"536"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POPCTRX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDE1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDE1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"POPCTRX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] POPCTR"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= i <= 255")," from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xE1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"537"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCONTCTRX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDE2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDE2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCONTCTRX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x c i - c'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"c[i] SETCONTCTR"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= i <= 255")," from the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xE2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"538"),(0,r.kt)("td",{parentName:"tr",align:"left"},"COMPOS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDF0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"COMPOS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c' - c''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the composition ",(0,r.kt)("inlineCode",{parentName:"td"},"compose0(c, c\u2019)"),", which has the meaning of \u201cperform ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", and, if successful, perform ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),"'' (if ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," is a boolean circuit) or simply \u201cperform ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", then ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),"''. Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c0 SETCONT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xF0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"BOOLAND"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"539"),(0,r.kt)("td",{parentName:"tr",align:"left"},"COMPOSALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDF1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"COMPOSALT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c' - c''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the alternative composition ",(0,r.kt)("inlineCode",{parentName:"td"},"compose1(c, c\u2019)"),", which has the meaning of \u201cperform ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", and, if not successful, perform ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),"'' (if ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," is a boolean circuit). Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c1 SETCONT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xF1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"BOOLOR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"540"),(0,r.kt)("td",{parentName:"tr",align:"left"},"COMPOSBOTH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDF2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"COMPOSBOTH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c' - c''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes composition ",(0,r.kt)("inlineCode",{parentName:"td"},"compose1(compose0(c, c\u2019), c\u2019)"),", which has the meaning of \u201ccompute boolean circuit ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", then compute ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),", regardless of the result of ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"''."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xF2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"541"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ATEXIT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDF3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ATEXIT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c0")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"compose0(c, c0)"),". In other words, ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," will be executed before exiting current subroutine."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xF3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"542"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ATEXIT:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ATEXIT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<{ code }>ATEXIT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"543"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ATEXITALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDF4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ATEXITALT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"compose1(c, c1)"),". In other words, ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," will be executed before exiting current subroutine by its alternative return path."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xF4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"544"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ATEXITALT:<{ code }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ATEXITALT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"<{ code }>ATEXITALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"545"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETEXITALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDF5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETEXITALT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"compose1(compose0(c, c0), c1)"),","),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xF5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"In this way, a subsequent ",(0,r.kt)("inlineCode",{parentName:"td"},"RETALT")," will first execute ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", then transfer control to the original ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),". This can be used, for instance, to exit from nested loops."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"546"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THENRET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDF6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THENRET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - c'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes ",(0,r.kt)("inlineCode",{parentName:"td"},"compose0(c, c0)"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xF6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"547"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THENRETALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDF7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THENRETALT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - c'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes ",(0,r.kt)("inlineCode",{parentName:"td"},"compose0(c, c1)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xF7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"548"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INVERT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDF8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INVERT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Interchanges ",(0,r.kt)("inlineCode",{parentName:"td"},"c0")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"c1"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xF8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"549"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BOOLEVAL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDF9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDF9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BOOLEVAL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Performs ",(0,r.kt)("inlineCode",{parentName:"td"},"cc:=compose1(compose0(c, compose0(-1 PUSHINT, cc)), compose0(0 PUSHINT, cc))"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," represents a boolean circuit, the net effect is to evaluate it and push either ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," into the stack before continuing."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xF9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"550"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SAMEALT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDFA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDFA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SAMEALT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),". Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c0 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c1 POPCTR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xFA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"551"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SAMEALTSAVE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#EDFB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_registers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"EDFB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SAMEALTSAVE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),", but first saves the old value of ",(0,r.kt)("inlineCode",{parentName:"td"},"c1")," into the savelist of ",(0,r.kt)("inlineCode",{parentName:"td"},"c0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xED, 0xFB")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c1 SAVE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SAMEALT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"552"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F0 n:uint8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_dict"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F0nn"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[nn]"," CALL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- nn"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Calls the continuation in ",(0,r.kt)("inlineCode",{parentName:"td"},"c3"),", pushing integer ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= nn <= 255")," into its stack as an argument."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[nn]"," CALLDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"[nn] PUSHINT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c3 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"EXECUTE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"553"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CALLDICT_LONG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F12_ n:uint14"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_dict"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F12_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," CALL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- n"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"For ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 2^14"),", an encoding of ",(0,r.kt)("inlineCode",{parentName:"td"},"[n] CALL")," for larger values of ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," CALLDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"554"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JMPDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F16_ n:uint14"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_dict"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F16_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," JMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- n"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Jumps to the continuation in ",(0,r.kt)("inlineCode",{parentName:"td"},"c3"),", pushing integer ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 2^14")," as its argument."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"n PUSHINT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c3 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"555"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PREPAREDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F1A_ n:uint14"),(0,r.kt)("td",{parentName:"tr",align:"left"},"cont_dict"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F1A_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," PREPARE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- n c"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"n PUSHINT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c3 PUSHCTR"),", for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 2^14"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u14]"," 0xF1, 0x80")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," PREPAREDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"In this way, ",(0,r.kt)("inlineCode",{parentName:"td"},"[n] CALL")," is approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"[n] PREPARE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"EXECUTE"),", and ",(0,r.kt)("inlineCode",{parentName:"td"},"[n] JMP")," is approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"[n] PREPARE")," ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"One might use, for instance, ",(0,r.kt)("inlineCode",{parentName:"td"},"CALLXARGS")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"CALLCC")," instead of ",(0,r.kt)("inlineCode",{parentName:"td"},"EXECUTE")," here."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"556"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROW_SHORT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F22_ n:uint6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F22_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," THROW"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- 0 n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 63")," with parameter zero."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"In other words, it transfers control to the continuation in ",(0,r.kt)("inlineCode",{parentName:"td"},"c2"),", pushing ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," into its stack, and discarding the old stack altogether."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"557"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWIF_SHORT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F26_ n:uint6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F26_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," THROWIF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 63")," with  parameter zero only if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f!=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"558"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWIFNOT_SHORT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2A_ n:uint6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2A_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," THROWIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 63")," with parameter zero only if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"559"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROW"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2C4_ n:uint11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2C4_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," THROW"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- 0 nn"),(0,r.kt)("td",{parentName:"tr",align:"left"},"84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"For ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 2^11"),", an encoding of ",(0,r.kt)("inlineCode",{parentName:"td"},"[n] THROW")," for larger values of ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"560"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWARG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2CC_ n:uint11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2CC_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," THROWARG"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - x nn"),(0,r.kt)("td",{parentName:"tr",align:"left"},"84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <  2^11")," with parameter ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", by copying ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," into the stack of ",(0,r.kt)("inlineCode",{parentName:"td"},"c2")," and transferring control to ",(0,r.kt)("inlineCode",{parentName:"td"},"c2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u11]"," 0xF2, 0xC8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"561"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWIF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2D4_ n:uint11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2D4_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," THROWIF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34/84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"For ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 2^11"),", an encoding of ",(0,r.kt)("inlineCode",{parentName:"td"},"[n] THROWIF")," for larger values of ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"562"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWARGIF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2DC_ n:uint11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2DC_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," THROWARGIF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34/84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= nn < 2^11")," with parameter ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," only if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f!=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u11]"," 0xF2, 0xD8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"563"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2E4_ n:uint11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2E4_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," THROWIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34/84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"For ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 2^11"),", an encoding of ",(0,r.kt)("inlineCode",{parentName:"td"},"[n] THROWIFNOT")," for larger values of ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"564"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWARGIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2EC_ n:uint11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2EC_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n]"," THROWARGIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34/84"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 2^11")," with parameter ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," only if integer ",(0,r.kt)("inlineCode",{parentName:"td"},"f=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u11]"," 0xF2, 0xE8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"565"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWANY"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2F0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2F0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWANY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"n - 0 n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 2^16")," with parameter zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF2, 0xF0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"ZERO")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"THROWARGANY"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"566"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWARGANY"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2F1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2F1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWARGANY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x n - x n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 2^16")," with parameter ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", transferring control to the continuation in ",(0,r.kt)("inlineCode",{parentName:"td"},"c2"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF2, 0xF1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c2 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"2 JMPXARGS"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"567"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWANYIF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2F2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2F2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWANYIF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"n f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 2^16")," with parameter zero only if ",(0,r.kt)("inlineCode",{parentName:"td"},"f!=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF2, 0xF2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"568"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWARGANYIF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2F3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2F3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWARGANYIF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x n f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n<2^16")," with parameter ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," only if ",(0,r.kt)("inlineCode",{parentName:"td"},"f!=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF2, 0xF3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"569"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWANYIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2F4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2F4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWANYIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"n f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n<2^16")," with parameter zero only if ",(0,r.kt)("inlineCode",{parentName:"td"},"f=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF2, 0xF4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"570"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWARGANYIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2F5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2F5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"THROWARGANYIFNOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x n f -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26/76"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Throws exception ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n<2^16")," with parameter ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," only if ",(0,r.kt)("inlineCode",{parentName:"td"},"f=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF2, 0xF5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"571"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRY"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F2FF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2FF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c' -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets ",(0,r.kt)("inlineCode",{parentName:"td"},"c2")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),", first saving the old value of ",(0,r.kt)("inlineCode",{parentName:"td"},"c2")," both into the savelist of ",(0,r.kt)("inlineCode",{parentName:"td"},"c'")," and into the savelist of the current continuation, which is stored into ",(0,r.kt)("inlineCode",{parentName:"td"},"c.c0")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"c'.c0"),". Then runs ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," similarly to ",(0,r.kt)("inlineCode",{parentName:"td"},"EXECUTE"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," does not throw any exceptions, the original value of ",(0,r.kt)("inlineCode",{parentName:"td"},"c2")," is automatically restored on return from ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),". If an exception occurs, the execution is transferred to ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),", but the original value of ",(0,r.kt)("inlineCode",{parentName:"td"},"c2")," is restored in the process, so that ",(0,r.kt)("inlineCode",{parentName:"td"},"c'")," can re-throw the exception by ",(0,r.kt)("inlineCode",{parentName:"td"},"THROWANY")," if it cannot handle it by itself."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF2, 0xFF")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"572"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F2FF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRY:<{ code1 }>CATCH<{ code2 }>"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code1 }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"<{ code2 }> CONT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"TRY"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"573"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRYARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F3 p:uint4 r:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"exceptions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F3pr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[p][r]"," TRYARGS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c c' -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"TRY"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"[p] [r] CALLXARGS")," internally used instead of ",(0,r.kt)("inlineCode",{parentName:"td"},"EXECUTE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[s1 = parse_const_u4][s2 = parse_const_u4]"," 0xF3, (s1 << 4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"In this way, all but the top ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= p <= 15")," stack elements will be saved into current continuation's stack, and then restored upon return from either ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"c'"),", with the top ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= r <= 15")," values of the resulting stack of ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"c'")," copied as return values."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"574"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NEWDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NULL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_create"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NEWDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns a new empty dictionary."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"It is an alternative mnemonics for ",(0,r.kt)("inlineCode",{parentName:"td"},"PUSHNULL"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"575"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTEMPTY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ISNULL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#6E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_create"),(0,r.kt)("td",{parentName:"tr",align:"left"},"6E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTEMPTY"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," is empty, and returns ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," accordingly."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0x6E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"It is an alternative mnemonics for ",(0,r.kt)("inlineCode",{parentName:"td"},"ISNULL"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"576"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STDICTS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STSLICE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#CE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_serial"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STDICTS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"18"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores a ",(0,r.kt)("em",{parentName:"td"},"Slice"),"-represented dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," into ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xCE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"It is actually a synonym for ",(0,r.kt)("inlineCode",{parentName:"td"},"STSLICE"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"577"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F400"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_serial"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F400"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D b - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," into ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", returing the resulting ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"STOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"In other words, if ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," is a cell, performs ",(0,r.kt)("inlineCode",{parentName:"td"},"STONE")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"STREF"),"; if ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," is ",(0,r.kt)("em",{parentName:"td"},"Null"),", performs ",(0,r.kt)("inlineCode",{parentName:"td"},"NIP")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"STZERO"),"; otherwise throws a type checking exception."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"578"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SKIPDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F401"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_serial"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F401"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SKIPDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"LDDICT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"NIP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"SKIPOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"579"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDDICTS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F402"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_serial"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F402"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDDICTS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s' s''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads (parses) a (",(0,r.kt)("em",{parentName:"td"},"Slice"),"-represented) dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", and returns the remainder of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," as ",(0,r.kt)("inlineCode",{parentName:"td"},"s''"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x02")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"This is a \u201csplit function'' for all ",(0,r.kt)("inlineCode",{parentName:"td"},"HashmapE(n,X)")," dictionary types."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"580"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDDICTS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F403"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_serial"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F403"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDDICTS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads a (",(0,r.kt)("em",{parentName:"td"},"Slice"),"-represented) dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"LDDICTS")," ",(0,r.kt)("inlineCode",{parentName:"td"},"DROP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"581"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F404"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_serial"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F404"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - D s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads (parses) a dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", and returns the remainder of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," as ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),". May be applied to dictionaries or to values of arbitrary ",(0,r.kt)("inlineCode",{parentName:"td"},"(^Y)?")," types."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x04")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"582"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F405"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_serial"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F405"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Preloads a dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x05")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"LDDICT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"DROP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"583"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDDICTQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F406"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_serial"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F406"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDDICTQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - D s' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"LDDICT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x06")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"584"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDDICTQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F407"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_serial"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F407"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PLDDICTQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - D -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"PLDDICT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x07")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"585"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F40A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_get"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F40A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Looks up key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," (represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice"),", the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 1023")," data bits of which are used as a key) in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," of type ",(0,r.kt)("inlineCode",{parentName:"td"},"HashmapE(n,X)")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit keys."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x0A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"On success, returns the value found as a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"586"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F40B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_get"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F40B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - c -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGET"),", but with a ",(0,r.kt)("inlineCode",{parentName:"td"},"LDREF")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ENDS")," applied to ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," on success."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x0B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"This operation is useful for dictionaries of type ",(0,r.kt)("inlineCode",{parentName:"td"},"HashmapE(n,^Y)"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"587"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F40C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_get"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F40C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGET"),", but with a signed (big-endian) ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," as a key. If ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," does not fit into ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," bits, returns ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," is a ",(0,r.kt)("inlineCode",{parentName:"td"},"NaN"),", throws an integer overflow exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x0C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"588"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F40D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_get"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F40D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - c -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Combines ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGET")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETREF"),": it uses signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," as a key and returns a ",(0,r.kt)("em",{parentName:"td"},"Cell")," instead of a ",(0,r.kt)("em",{parentName:"td"},"Slice")," on success."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x0D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"589"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F40E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_get"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F40E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - x -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGET"),", but with ",(0,r.kt)("em",{parentName:"td"},"unsigned")," (big-endian) ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," used as a key."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x0E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"590"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F40F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_get"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F40F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - c -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGETREF"),", but with an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," key ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x0F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"591"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F412"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F412"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x k D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets the value associated with ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," (represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice")," as in ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGET"),") in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," (also represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice"),") to value ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," (again a ",(0,r.kt)("em",{parentName:"td"},"Slice"),"), and returns the resulting dictionary as ",(0,r.kt)("inlineCode",{parentName:"td"},"D'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"592"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F413"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F413"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c k D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSET"),", but with the value set to a reference to ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x13")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"593"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F414"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F414"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSET"),", but with the key represented by a (big-endian) signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," does not fit into ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," bits, a range check exception is generated."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"594"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F415"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F415"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETREF"),", but with the key a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer as in ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTISET"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x15")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"595"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F416"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F416"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTISET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an ",(0,r.kt)("em",{parentName:"td"},"unsigned")," ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"596"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F417"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F417"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTISETREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," unsigned."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x17")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"597"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F41A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F41A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x k D n - D' y -1 or D' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Combines ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSET")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGET"),": it sets the value corresponding to key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", but also returns the old value ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," associated with the key in question, if present."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x1A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"598"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F41B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F41B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c k D n - D' c' -1 or D' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Combines ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETREF")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETREF")," similarly to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETGET"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x1B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"599"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F41C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F41C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D' y -1 or D' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTISETGET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x1C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"600"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F41D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F41D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D' c' -1 or D' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTISETGETREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x1D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"601"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F41E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F41E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D' y -1 or D' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTISETGET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x1E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"602"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F41F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F41F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D' c' -1 or D' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTISETGETREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x1F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"603"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F422"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F422"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A ",(0,r.kt)("em",{parentName:"td"},"Replace")," operation, which is similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSET"),", but sets the value of key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," only if the key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," was already present in ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x22")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"604"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACEREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F423"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F423"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACEREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A ",(0,r.kt)("em",{parentName:"td"},"Replace")," counterpart of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x23")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"605"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F424"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F424"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTREPLACE"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x24")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"606"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACEREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F425"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F425"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACEREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTREPLACEREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x25")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"607"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F426"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F426"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTREPLACE"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x26")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"608"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACEREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F427"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F427"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACEREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTREPLACEREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x27")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"609"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACEGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F42A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F42A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACEGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x k D n - D' y -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A ",(0,r.kt)("em",{parentName:"td"},"Replace")," counterpart of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETGET"),": on success, also returns the old value associated with the key in question."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x2A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"610"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACEGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F42B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F42B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACEGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c k D n - D' c' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A ",(0,r.kt)("em",{parentName:"td"},"Replace")," counterpart of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETGETREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x2B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"611"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACEGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F42C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F42C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACEGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D' y -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTREPLACEGET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x2C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"612"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACEGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F42D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F42D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACEGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D' c' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTREPLACEGETREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x2D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"613"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACEGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F42E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F42E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACEGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D' y -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTREPLACEGET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x2E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"614"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACEGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F42F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F42F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACEGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D' c' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTREPLACEGETREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x2F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"615"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADD"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F432"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F432"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"An ",(0,r.kt)("em",{parentName:"td"},"Add")," counterpart of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSET"),": sets the value associated with key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", but only if it is not already present in ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"616"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADDREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F433"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F433"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADDREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"An ",(0,r.kt)("em",{parentName:"td"},"Add")," counterpart of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"617"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADD"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F434"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F434"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTADD"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x34")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"618"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADDREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F435"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F435"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADDREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTADDREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x35")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"619"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADD"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F436"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F436"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTADD"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x36")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"620"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADDREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F437"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F437"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADDREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTADDREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x37")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"621"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADDGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F43A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F43A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADDGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x k D n - D' -1 or D y 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"An ",(0,r.kt)("em",{parentName:"td"},"Add")," counterpart of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETGET"),": sets the value associated with key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", but only if key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," is not already present in ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),". Otherwise, just returns the old value ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," without changing the dictionary."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x3A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"622"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADDGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F43B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F43B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADDGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c k D n - D' -1 or D c' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"An ",(0,r.kt)("em",{parentName:"td"},"Add")," counterpart of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETGETREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x3B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"623"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADDGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F43C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F43C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADDGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D' -1 or D y 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTADDGET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x3C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"624"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADDGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F43D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F43D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADDGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D' -1 or D c' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTADDGETREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x3D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"625"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADDGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F43E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F43E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADDGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x i D n - D' -1 or D y 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTADDGET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x3E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"626"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADDGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F43F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F43F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADDGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c i D n - D' -1 or D c' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTADDGETREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x3F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"627"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F441"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F441"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b k D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x41")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"628"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F442"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F442"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x42")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"629"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F443"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F443"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x43")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"630"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F445"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F445"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b k D n - D' y -1 or D' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x44")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"631"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F446"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F446"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D' y -1 or D' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x46")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"632"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F447"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F447"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D' y -1 or D' 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x47")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"633"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACEB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F449"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F449"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACEB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x49")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"634"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACEB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F44A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F44A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACEB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x4A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"635"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACEB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F44B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F44B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACEB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x4B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"636"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACEGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F44D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F44D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREPLACEGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b k D n - D' y -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x4D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"637"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACEGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F44E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F44E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREPLACEGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D' y -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x4E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"638"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACEGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F44F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F44F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREPLACEGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D' y -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x4F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"639"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADDB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F451"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F451"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADDB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x51")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"640"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADDB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F452"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F452"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADDB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x52")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"641"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADDB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F453"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F453"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADDB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x53")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"642"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADDGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F455"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F455"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTADDGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b k D n - D' -1 or D y 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x55")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"643"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADDGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F456"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F456"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIADDGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D' -1 or D y 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x56")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"644"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADDGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F457"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_set_builder"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F457"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUADDGETB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b i D n - D' -1 or D y 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x57")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"645"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTDEL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F459"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_delete"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F459"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTDEL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Deletes ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit key, represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),", from dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),". If the key is present, returns the modified dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D'")," and the success flag ",(0,r.kt)("inlineCode",{parentName:"td"},"-1"),". Otherwise, returns the original dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x59")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"646"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIDEL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F45A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_delete"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F45A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIDEL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - D' ?"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A version of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTDEL")," with the key represented by a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," does not fit into ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," bits, simply returns ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," (\u201ckey not found, dictionary unmodified'')."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x5A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"647"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUDEL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F45B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_delete"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F45B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUDEL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - D' ?"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIDEL"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x5B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"648"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTDELGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F462"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_delete"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F462"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTDELGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - D' x -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Deletes ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit key, represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),", from dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),". If the key is present, returns the modified dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D'"),", the original value ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," associated with the key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," (represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice"),"), and the success flag ",(0,r.kt)("inlineCode",{parentName:"td"},"-1"),". Otherwise, returns the original dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x62")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"649"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTDELGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F463"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_delete"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F463"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTDELGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - D' c -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTDELGET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"LDREF")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ENDS")," applied to ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," on success, so that the value returned ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," is a ",(0,r.kt)("em",{parentName:"td"},"Cell"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x63")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"650"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIDELGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F464"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_delete"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F464"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIDELGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - D' x -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTDELGET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"651"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIDELGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F465"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_delete"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F465"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIDELGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - D' c -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTDELGETREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x65")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"652"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUDELGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F466"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_delete"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F466"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUDELGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - D' x -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTDELGET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x66")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"653"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUDELGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F467"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_delete"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F467"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUDELGETREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - D' c -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTDELGETREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x67")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"654"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F469"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_mayberef"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F469"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - c^?"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A variant of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETREF")," that returns ",(0,r.kt)("em",{parentName:"td"},"Null")," instead of the value ",(0,r.kt)("inlineCode",{parentName:"td"},"c^?")," if the key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," is absent from dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x69")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"655"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F46A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_mayberef"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F46A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - c^?"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETOPTREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," a signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer. If the key ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," is out of range, also returns ",(0,r.kt)("em",{parentName:"td"},"Null"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x6A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"656"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F46B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_mayberef"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F46B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - c^?"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETOPTREF"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integer. If the key ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," is out of range, also returns ",(0,r.kt)("em",{parentName:"td"},"Null"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x6B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"657"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F46D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_mayberef"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F46D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTSETGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c^? k D n - D' ~c^?"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A variant of both ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETOPTREF")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETGETREF")," that sets the value corresponding to key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"c^?")," (if ",(0,r.kt)("inlineCode",{parentName:"td"},"c^?")," is ",(0,r.kt)("em",{parentName:"td"},"Null"),", then the key is deleted instead), and returns the old value ",(0,r.kt)("inlineCode",{parentName:"td"},"~c^?")," (if the key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," was absent before, returns ",(0,r.kt)("em",{parentName:"td"},"Null")," instead)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x6D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"658"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F46E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_mayberef"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F46E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTISETGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c^? i D n - D' ~c^?"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to primitive ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETGETOPTREF"),", but using signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," as a key. If ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," does not fit into ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," bits, throws a range checking exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x6E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"659"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F46F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_mayberef"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F46F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUSETGETOPTREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c^? i D n - D' ~c^?"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to primitive ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTSETGETOPTREF"),", but using unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," as a key."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x6F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"660"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTSET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F470"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_prefix"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F470"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTSET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x70")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"661"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTREPLACE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F471"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_prefix"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F471"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTREPLACE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x71")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"662"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTADD"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F472"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_prefix"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F472"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTADD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x72")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"663"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTDEL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F473"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_prefix"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F473"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTDEL"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - D' -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x73")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"664"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETNEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F474"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F474"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETNEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - x' k' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the minimal key ",(0,r.kt)("inlineCode",{parentName:"td"},"k'")," in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," that is lexicographically greater than ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),", and returns ",(0,r.kt)("inlineCode",{parentName:"td"},"k'")," (represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice"),") along with associated value ",(0,r.kt)("inlineCode",{parentName:"td"},"x'")," (also represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x74")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"665"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETNEXTEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F475"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F475"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETNEXTEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - x' k' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETNEXT"),", but computes the minimal key ",(0,r.kt)("inlineCode",{parentName:"td"},"k'")," that is lexicographically greater than or equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x75")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"666"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETPREV"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F476"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F476"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETPREV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - x' k' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETNEXT"),", but computes the maximal key ",(0,r.kt)("inlineCode",{parentName:"td"},"k'")," lexicographically smaller than ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x76")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"667"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETPREVEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F477"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F477"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTGETPREVEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k D n - x' k' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETPREV"),", but computes the maximal key ",(0,r.kt)("inlineCode",{parentName:"td"},"k'")," lexicographically smaller than or equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x77")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"668"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETNEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F478"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F478"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETNEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - x' i' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETNEXT"),", but interprets all keys in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," as big-endian signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers, and computes the minimal key ",(0,r.kt)("inlineCode",{parentName:"td"},"i'")," that is larger than ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," (which does not necessarily fit into ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," bits)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x78")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"669"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETNEXTEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F479"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F479"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETNEXTEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - x' i' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETNEXTEQ"),", but interprets keys as signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x79")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"670"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETPREV"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F47A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F47A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETPREV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - x' i' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETPREV"),", but interprets keys as signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x7A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"671"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETPREVEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F47B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F47B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETPREVEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - x' i' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETPREVEQ"),", but interprets keys as signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x7B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"672"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETNEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F47C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F47C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETNEXT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - x' i' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETNEXT"),", but interprets all keys in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," as big-endian unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers, and computes the minimal key ",(0,r.kt)("inlineCode",{parentName:"td"},"i'")," that is larger than ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," (which does not necessarily fit into ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," bits, and is not necessarily non-negative)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x7C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"673"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETNEXTEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F47D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F47D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETNEXTEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - x' i' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETNEXTEQ"),", but interprets keys as unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x7D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"674"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETPREV"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F47E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F47E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETPREV"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - x' i' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETPREV"),", but interprets keys as unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x7E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"675"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETPREVEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F47F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_next"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F47F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETPREVEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - x' i' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTGETPREVEQ"),", but interprets keys a unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x7F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"676"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F482"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F482"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - x k -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the minimal key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," (represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," data bits) in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),", and returns ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," along with the associated value ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x82")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"677"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F483"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F483"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - c k -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTMIN"),", but returns the only reference in the value as a ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x83")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"678"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F484"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F484"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - x i -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTMIN"),", but computes the minimal key ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," under the assumption that all keys are big-endian signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers. Notice that the key and value returned may differ from those computed by ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTMIN")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUMIN"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x84")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"679"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F485"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F485"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - c i -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIMIN"),", but returns the only reference in the value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x85")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"680"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F486"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F486"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - x i -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTMIN"),", but returns the key as an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x86")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"681"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F487"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F487"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - c i -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUMIN"),", but returns the only reference in the value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x87")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"682"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F48A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F48A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - x k -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the maximal key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," (represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," data bits) in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),", and returns ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," along with the associated value ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x8A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"683"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F48B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F48B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - c k -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTMAX"),", but returns the only reference in the value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x8B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"684"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F48C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F48C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - x i -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTMAX"),", but computes the maximal key ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," under the assumption that all keys are big-endian signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers. Notice that the key and value returned may differ from those computed by ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTMAX")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUMAX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x8C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"685"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F48D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F48D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - c i -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIMAX"),", but returns the only reference in the value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x8D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"686"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F48E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F48E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - x i -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTMAX"),", but returns the key as an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x8E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"687"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F48F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F48F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - c i -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUMAX"),", but returns the only reference in the value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x8F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"688"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREMMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F492"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F492"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREMMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' x k -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the minimal key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," (represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," data bits) in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),", removes ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," from the dictionary, and returns ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," along with the associated value ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," and the modified dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x92")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"689"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREMMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F493"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F493"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREMMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' c k -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTREMMIN"),", but returns the only reference in the value as a ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x93")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"690"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREMMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F494"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F494"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREMMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' x i -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTREMMIN"),", but computes the minimal key ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," under the assumption that all keys are big-endian signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers. Notice that the key and value returned may differ from those computed by ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTREMMIN")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUREMMIN"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x94")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"691"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREMMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F495"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F495"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREMMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' c i -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIREMMIN"),", but returns the only reference in the value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x95")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"692"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREMMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F496"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F496"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREMMIN"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' x i -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTREMMIN"),", but returns the key as an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x96")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"693"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREMMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F497"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F497"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREMMINREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' c i -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUREMMIN"),", but returns the only reference in the value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x937")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"694"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREMMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F49A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F49A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREMMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' x k -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the maximal key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," (represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," data bits) in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),", removes ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," from the dictionary, and returns ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," along with the associated value ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," and the modified dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x9A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"695"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREMMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F49B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F49B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTREMMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' c k -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTREMMAX"),", but returns the only reference in the value as a ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x9B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"696"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREMMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F49C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F49C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREMMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' x i -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTREMMAX"),", but computes the minimal key ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," under the assumption that all keys are big-endian signed ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit integers. Notice that the key and value returned may differ from those computed by ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTREMMAX")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUREMMAX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x9C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"697"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREMMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F49D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F49D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIREMMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' c i -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIREMMAX"),", but returns the only reference in the value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x9D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"698"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREMMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F49E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F49E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREMMAX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' x i -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTREMMAX"),", but returns the key as an unsigned ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x9E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"699"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREMMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F49F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_min"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F49F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUREMMAXREF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D n - D' c i -1 or D 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUREMMAX"),", but returns the only reference in the value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0x9F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"700"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4A0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4A0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGET"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," ",(0,r.kt)("inlineCode",{parentName:"td"},"BLESS"),"ed into a continuation with a subsequent ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX")," to it on success. On failure, does nothing. This is useful for implementing ",(0,r.kt)("inlineCode",{parentName:"td"},"switch"),"/",(0,r.kt)("inlineCode",{parentName:"td"},"case")," constructions."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xA0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"701"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4A1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4A1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGETJMP"),", but performs ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUGET")," instead of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGET"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xA1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"702"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETEXEC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4A2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4A2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETEXEC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGETJMP"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"EXECUTE")," instead of ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xA2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"703"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETEXEC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4A3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4A3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETEXEC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n -"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUGETJMP"),", but with ",(0,r.kt)("inlineCode",{parentName:"td"},"EXECUTE")," instead of ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xA3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"704"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTPUSHCONST"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4A6_ d:^Cell n:uint10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4A6_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref][n]"," DICTPUSHCONST"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- D n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"34"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pushes a non-empty constant dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," (as a ",(0,r.kt)("inlineCode",{parentName:"td"},"Cell^?"),") along with its key length ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 1023"),", stored as a part of the instruction. The dictionary itself is created from the first of remaining references of the current continuation. In this way, the complete ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTPUSHCONST")," instruction can be obtained by first serializing ",(0,r.kt)("inlineCode",{parentName:"td"},"xF4A4_"),", then the non-empty dictionary itself (one ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," bit and a cell reference), and then the unsigned 10-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," (as if by a ",(0,r.kt)("inlineCode",{parentName:"td"},"STU 10")," instruction). An empty dictionary can be pushed by a ",(0,r.kt)("inlineCode",{parentName:"td"},"NEWDICT")," primitive instead."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u10]"," 0xF4, 0xA4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"705"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTGETQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4A8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4A8"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTGETQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s D n - s' x s'' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Looks up the unique prefix of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," present in the prefix code dictionary represented by ",(0,r.kt)("inlineCode",{parentName:"td"},"Cell^?")," ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 1023"),". If found, the prefix of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is returned as ",(0,r.kt)("inlineCode",{parentName:"td"},"s'"),", and the corresponding value (also a ",(0,r.kt)("em",{parentName:"td"},"Slice"),") as ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),". The remainder of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is returned as a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s''"),". If no prefix of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is a key in prefix code dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D"),", returns the unchanged ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," and a zero flag to indicate failure."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xA8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"706"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4A9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4A9"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s D n - s' x s''"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"PFXDICTGET"),", but throws a cell deserialization failure exception on failure."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xA9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"707"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTGETJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4AA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4AA"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTGETJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s D n - s' s'' or s"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"PFXDICTGETQ"),", but on success ",(0,r.kt)("inlineCode",{parentName:"td"},"BLESS"),"es the value ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," into a ",(0,r.kt)("em",{parentName:"td"},"Continuation")," and transfers control to it as if by a ",(0,r.kt)("inlineCode",{parentName:"td"},"JMPX"),". On failure, returns ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," unchanged and continues execution."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xAA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"708"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTGETEXEC"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4AB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4AB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTGETEXEC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s D n - s' s''"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"PFXDICTGETJMP"),", but ",(0,r.kt)("inlineCode",{parentName:"td"},"EXEC"),"utes the continuation found instead of jumping to it. On failure, throws a cell deserialization exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xAB")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"709"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PFXDICTCONSTGETJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4AE_ d:^Cell n:uint10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4AE_n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref][n]"," PFXDICTCONSTGETJMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s' s'' or s"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Combines ",(0,r.kt)("inlineCode",{parentName:"td"},"[n] DICTPUSHCONST")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n <= 1023")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"PFXDICTGETJMP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[n = parse_const_u10]"," 0xF4, 0xAC")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ref][n]"," PFXDICTSWITCH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"710"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETJMPZ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4BC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4BC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETJMPZ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - i or nothing"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A variant of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGETJMP")," that returns index ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," on failure."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xBC")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"711"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETJMPZ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4BD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4BD"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETJMPZ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - i or nothing"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A variant of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUGETJMP")," that returns index ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," on failure."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xBD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"712"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETEXECZ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4BE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4BE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTIGETEXECZ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - i or nothing"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A variant of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGETEXEC")," that returns index ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," on failure."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xBE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"713"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETEXECZ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4BF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_special"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4BF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DICTUGETEXECZ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i D n - i or nothing"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A variant of ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTUGETEXEC")," that returns index ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," on failure."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xBF")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"714"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4B1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_sub"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4B1"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k l D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Constructs a subdictionary consisting of all keys beginning with prefix ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," (represented by a ",(0,r.kt)("em",{parentName:"td"},"Slice"),", the first ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= l <= n <= 1023")," data bits of which are used as a key) of length ",(0,r.kt)("inlineCode",{parentName:"td"},"l")," in dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," of type ",(0,r.kt)("inlineCode",{parentName:"td"},"HashmapE(n,X)")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"-bit keys. On success, returns the new subdictionary of the same type ",(0,r.kt)("inlineCode",{parentName:"td"},"HashmapE(n,X)")," as a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"D'"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xB1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"715"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTIGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4B2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_sub"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4B2"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTIGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x l D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Variant of ",(0,r.kt)("inlineCode",{parentName:"td"},"SUBDICTGET")," with the prefix represented by a signed big-endian ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", where necessarily ",(0,r.kt)("inlineCode",{parentName:"td"},"l <= 257"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xB2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"716"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTUGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4B3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_sub"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4B3"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTUGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x l D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Variant of ",(0,r.kt)("inlineCode",{parentName:"td"},"SUBDICTGET")," with the prefix represented by an unsigned big-endian ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", where necessarily ",(0,r.kt)("inlineCode",{parentName:"td"},"l <= 256"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xB3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"717"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTRPGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4B5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_sub"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4B5"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTRPGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k l D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"SUBDICTGET"),", but removes the common prefix ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," from all keys of the new dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D'"),", which becomes of type ",(0,r.kt)("inlineCode",{parentName:"td"},"HashmapE(n-l,X)"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xB5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"718"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTIRPGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4B6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_sub"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4B6"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTIRPGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x l D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Variant of ",(0,r.kt)("inlineCode",{parentName:"td"},"SUBDICTRPGET")," with the prefix represented by a signed big-endian ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", where necessarily ",(0,r.kt)("inlineCode",{parentName:"td"},"l <= 257"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xB6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"719"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTURPGET"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F4B7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dict_sub"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F4B7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SUBDICTURPGET"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x l D n - D'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Variant of ",(0,r.kt)("inlineCode",{parentName:"td"},"SUBDICTRPGET")," with the prefix represented by an unsigned big-endian ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),"-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", where necessarily ",(0,r.kt)("inlineCode",{parentName:"td"},"l <= 256"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF4, 0xB7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"720"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ACCEPT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F800"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_gas"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F800"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ACCEPT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets current gas limit ",(0,r.kt)("inlineCode",{parentName:"td"},"g_l")," to its maximal allowed value ",(0,r.kt)("inlineCode",{parentName:"td"},"g_m"),", and resets the gas credit ",(0,r.kt)("inlineCode",{parentName:"td"},"g_c")," to zero, decreasing the value of ",(0,r.kt)("inlineCode",{parentName:"td"},"g_r")," by ",(0,r.kt)("inlineCode",{parentName:"td"},"g_c")," in the process."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"In other words, the current smart contract agrees to buy some gas to finish the current transaction. This action is required to process external messages, which bring no value (hence no gas) with themselves."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"721"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETGASLIMIT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F801"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_gas"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F801"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETGASLIMIT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"g -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sets current gas limit ",(0,r.kt)("inlineCode",{parentName:"td"},"g_l")," to the minimum of ",(0,r.kt)("inlineCode",{parentName:"td"},"g")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"g_m"),", and resets the gas credit ",(0,r.kt)("inlineCode",{parentName:"td"},"g_c")," to zero. If the gas consumed so far (including the present instruction) exceeds the resulting value of ",(0,r.kt)("inlineCode",{parentName:"td"},"g_l"),", an (unhandled) out of gas exception is thrown before setting new gas limits. Notice that ",(0,r.kt)("inlineCode",{parentName:"td"},"SETGASLIMIT")," with an argument ",(0,r.kt)("inlineCode",{parentName:"td"},"g >= 2^63-1")," is equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"ACCEPT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"722"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BUYGAS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F802"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_gas"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F802"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BUYGAS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the amount of gas that can be bought for ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," nanograms, and sets ",(0,r.kt)("inlineCode",{parentName:"td"},"g_l")," accordingly in the same way as ",(0,r.kt)("inlineCode",{parentName:"td"},"SETGASLIMIT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x02")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"723"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GRAMTOGAS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F804"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_gas"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F804"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GRAMTOGAS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x - g"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the amount of gas that can be bought for ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," nanograms. If ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is negative, returns 0. If ",(0,r.kt)("inlineCode",{parentName:"td"},"g")," exceeds 2^63 - 1, it is replaced with this value."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x04")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"724"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GASTOGRAM"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F805"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_gas"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F805"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GASTOGRAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"g - x"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the price of ",(0,r.kt)("inlineCode",{parentName:"td"},"g")," gas in nanograms."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x05")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"725"),(0,r.kt)("td",{parentName:"tr",align:"left"},"COMMIT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F80F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_gas"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F80F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"COMMIT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Commits the current state of registers ",(0,r.kt)("inlineCode",{parentName:"td"},"c4")," (\u201cpersistent data'') and ",(0,r.kt)("inlineCode",{parentName:"td"},"c5")," (\u201cactions'') so that the current execution is considered \u201csuccessful'' with the saved values even if an exception is thrown later."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x0F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"726"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RANDU256"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F810"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_rnd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F810"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RANDU256"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"+")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"727"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RAND"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F811"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_rnd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F811"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RAND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"y - z"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"+")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"RANDU256")," ",(0,r.kt)("inlineCode",{parentName:"td"},"256 MULRSHIFT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"728"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETRAND"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F814"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_rnd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F814"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETRAND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c7"),(0,r.kt)("td",{parentName:"tr",align:"left"},"+")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"729"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ADDRAND"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F815"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_rnd"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F815"),(0,r.kt)("td",{parentName:"tr",align:"left"},"ADDRAND"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Mixes unsigned 256-bit ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," into the random seed ",(0,r.kt)("inlineCode",{parentName:"td"},"r")," by setting the random seed to ",(0,r.kt)("inlineCode",{parentName:"td"},"Sha")," of the concatenation of two 32-byte strings: the first with the big-endian representation of the old seed ",(0,r.kt)("inlineCode",{parentName:"td"},"r"),", and the second with the big-endian representation of ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x15")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"RANDOMIZE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"730"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F82 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F82i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[i]"," GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the ",(0,r.kt)("inlineCode",{parentName:"td"},"i"),"-th parameter from the ",(0,r.kt)("em",{parentName:"td"},"Tuple")," provided at ",(0,r.kt)("inlineCode",{parentName:"td"},"c7")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= i <= 15"),". Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c7 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"FIRST")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[i] INDEX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[c = parse_const_u4]"," 0xF8, 0x20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"If one of these internal operations fails, throws an appropriate type checking or range checking exception."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"731"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NOW"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F823"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F823"),(0,r.kt)("td",{parentName:"tr",align:"left"},"NOW"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the current Unix time as an ",(0,r.kt)("em",{parentName:"td"},"Integer"),". If it is impossible to recover the requested value starting from ",(0,r.kt)("inlineCode",{parentName:"td"},"c7"),", throws a type checking or range checking exception as appropriate."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x23")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"3 GETPARAM"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"732"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLOCKLT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F824"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F824"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BLOCKLT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the starting logical time of the current block."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x24")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"4 GETPARAM"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"733"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LTIME"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F825"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F825"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LTIME"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the logical time of the current transaction."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x25")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"5 GETPARAM"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"734"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RANDSEED"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F826"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F826"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RANDSEED"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the current random seed as an unsigned 256-bit ",(0,r.kt)("em",{parentName:"td"},"Integer"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x26")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"6 GETPARAM"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"735"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BALANCE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F827"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F827"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BALANCE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- t"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the remaining balance of the smart contract as a ",(0,r.kt)("em",{parentName:"td"},"Tuple")," consisting of an ",(0,r.kt)("em",{parentName:"td"},"Integer")," (the remaining Gram balance in nanograms) and a ",(0,r.kt)("em",{parentName:"td"},"Maybe Cell")," (a dictionary with 32-bit keys representing the balance of \u201cextra currencies'')."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x27")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"7 GETPARAM"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Note that ",(0,r.kt)("inlineCode",{parentName:"td"},"RAW")," primitives such as ",(0,r.kt)("inlineCode",{parentName:"td"},"SENDRAWMSG")," do not update this field."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"736"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MYADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F828"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F828"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MYADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the internal address of the current smart contract as a ",(0,r.kt)("em",{parentName:"td"},"Slice")," with a ",(0,r.kt)("inlineCode",{parentName:"td"},"MsgAddressInt"),". If necessary, it can be parsed further using primitives such as ",(0,r.kt)("inlineCode",{parentName:"td"},"PARSEMSGADDR")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"REWRITESTDADDR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x28")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"8 GETPARAM"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"737"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONFIGROOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F829"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F829"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONFIGROOT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the ",(0,r.kt)("em",{parentName:"td"},"Maybe Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," with the current global configuration dictionary. Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"9 GETPARAM "),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x29")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"738"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MYCODE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F82A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F82A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"MYCODE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- s"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the Cell with the current code of the smart contract. Smart contract has own code, the cell representation of which can be obtained by this instruction."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x2A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"10 GETPARAM")),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"739"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INITCODEHASH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F82B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F82B"),(0,r.kt)("td",{parentName:"tr",align:"left"},"INITCODEHASH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the integer represented 256 bit hash of code cell with which the contract was deployed."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x2B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"11 GETPARAM"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"740"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STORAGEFEE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F82C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F82C"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STORAGEFEE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the ",(0,r.kt)("inlineCode",{parentName:"td"},"Integer")," with collected storage fee from account in this transaction."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x2C")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"12 GETPARAM"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"741"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SEQNO"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F82D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F82D"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SEQNO"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"returns the ",(0,r.kt)("inlineCode",{parentName:"td"},"Integer")," with current sequence number of collating block."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x2D")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"13 GETPARAM"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"742"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONFIGDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F830"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F830"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONFIGDICT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- D 32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the global configuration dictionary along with its key length (32)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"CONFIGROOT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"32 PUSHINT"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"743"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONFIGPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F832"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F832"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONFIGPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i - c -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the value of the global configuration parameter with integer index ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," as a ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", and a flag to indicate success."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"CONFIGDICT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGETREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"744"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONFIGOPTPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F833"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_config"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F833"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CONFIGOPTPARAM"),(0,r.kt)("td",{parentName:"tr",align:"left"},"i - c^?"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the value of the global configuration parameter with integer index ",(0,r.kt)("inlineCode",{parentName:"td"},"i")," as a ",(0,r.kt)("em",{parentName:"td"},"Maybe Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c^?"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x33")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"CONFIGDICT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"DICTIGETOPTREF"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"745"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETGLOBVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F840"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_global"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F840"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETGLOBVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"k - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),"-th global variable for ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= k < 255"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF8, 0x40")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c7 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"INDEXVARQ"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"746"),(0,r.kt)("td",{parentName:"tr",align:"left"},"GETGLOB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F85_ k:(## 5) {1 <= k}"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_global"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F85_k"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[k]"," GETGLOB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"- x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),"-th global variable for ",(0,r.kt)("inlineCode",{parentName:"td"},"1 <= k <= 31"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[k = parse_const_u5]"," 0xF8, 0x40")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c7 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"[k] INDEXQ"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"747"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETGLOBVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F860"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_global"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F860"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETGLOBVAR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x k -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c7\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c7 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ROTREV")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SETINDEXVARQ")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c7 POPCTR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"748"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETGLOB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F87_ k:(## 5) {1 <= k}"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_global"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F87_k"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[k]"," SETGLOB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26+"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c7\u2019"),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"c7 PUSHCTR")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"k SETINDEXQ")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c7 POPCTR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"749"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HASHCU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F900"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_crypto"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F900"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HASHCU"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the representation hash of a ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," and returns it as a 256-bit unsigned integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),". Useful for signing and checking signatures of arbitrary entities represented by a tree of cells."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"750"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HASHSU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F901"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_crypto"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F901"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HASHSU"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes the hash of a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," and returns it as a 256-bit unsigned integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),". The result is the same as if an ordinary cell containing only data and references from ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," had been created and its hash computed by ",(0,r.kt)("inlineCode",{parentName:"td"},"HASHCU"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"751"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SHA256U"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F902"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_crypto"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F902"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SHA256U"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Computes ",(0,r.kt)("inlineCode",{parentName:"td"},"Sha")," of the data bits of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),". If the bit length of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is not divisible by eight, throws a cell underflow exception. The hash value is returned as a 256-bit unsigned integer ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x02")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"752"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKSIGNU"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F910"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_crypto"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F910"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKSIGNU"),(0,r.kt)("td",{parentName:"tr",align:"left"},"h s k - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks the Ed25519-signature ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," of a hash ",(0,r.kt)("inlineCode",{parentName:"td"},"h")," (a 256-bit unsigned integer, usually computed as the hash of some data) using public key ",(0,r.kt)("inlineCode",{parentName:"td"},"k")," (also represented by a 256-bit unsigned integer)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"The signature ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," must be a ",(0,r.kt)("em",{parentName:"td"},"Slice")," containing at least 512 data bits; only the first 512 bits are used. The result is ",(0,r.kt)("inlineCode",{parentName:"td"},"-1")," if the signature is valid, ",(0,r.kt)("inlineCode",{parentName:"td"},"0")," otherwise."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Notice that ",(0,r.kt)("inlineCode",{parentName:"td"},"CHKSIGNU")," is equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"ROT")," ",(0,r.kt)("inlineCode",{parentName:"td"},"NEWC")," ",(0,r.kt)("inlineCode",{parentName:"td"},"256 STU")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ENDC")," ",(0,r.kt)("inlineCode",{parentName:"td"},"ROTREV")," ",(0,r.kt)("inlineCode",{parentName:"td"},"CHKSIGNS"),", i.e., to ",(0,r.kt)("inlineCode",{parentName:"td"},"CHKSIGNS")," with the first argument ",(0,r.kt)("inlineCode",{parentName:"td"},"d")," set to 256-bit ",(0,r.kt)("em",{parentName:"td"},"Slice")," containing ",(0,r.kt)("inlineCode",{parentName:"td"},"h"),". Therefore, if ",(0,r.kt)("inlineCode",{parentName:"td"},"h")," is computed as the hash of some data, these data are hashed ",(0,r.kt)("em",{parentName:"td"},"twice"),", the second hashing occurring inside ",(0,r.kt)("inlineCode",{parentName:"td"},"CHKSIGNS"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"753"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKSIGNS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F911"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_crypto"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F911"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHKSIGNS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"d s k - ?"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Checks whether ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is a valid Ed25519-signature of the data portion of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"d")," using public key ",(0,r.kt)("inlineCode",{parentName:"td"},"k"),", similarly to ",(0,r.kt)("inlineCode",{parentName:"td"},"CHKSIGNU"),". If the bit length of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"d")," is not divisible by eight, throws a cell underflow exception. The verification of Ed25519 signatures is the standard one, with ",(0,r.kt)("inlineCode",{parentName:"td"},"Sha")," used to reduce ",(0,r.kt)("inlineCode",{parentName:"td"},"d")," to the 256-bit number that is actually signed."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x11")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"754"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDATASIZEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F940"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_misc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F940"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDATASIZEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c n - x y z -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Recursively computes the count of distinct cells ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", data bits ",(0,r.kt)("inlineCode",{parentName:"td"},"y"),", and cell references ",(0,r.kt)("inlineCode",{parentName:"td"},"z")," in the dag rooted at ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),", effectively returning the total storage used by this dag taking into account the identification of equal cells. The values of ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"y"),", and ",(0,r.kt)("inlineCode",{parentName:"td"},"z")," are computed by a depth-first traversal of this dag, with a hash table of visited cell hashes used to prevent visits of already-visited cells. The total count of visited cells ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," cannot exceed non-negative ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"n"),"; otherwise the computation is aborted before visiting the ",(0,r.kt)("inlineCode",{parentName:"td"},"(n+1)"),"-st cell and a zero is returned to indicate failure. If ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," is ",(0,r.kt)("em",{parentName:"td"},"Null"),", returns ",(0,r.kt)("inlineCode",{parentName:"td"},"x=y=z=0"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x40")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"755"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDATASIZE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F941"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_misc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F941"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CDATASIZE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c n - x y z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A non-quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"CDATASIZEQ")," that throws a cell overflow exception (8) on failure."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x41")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"756"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDATASIZEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F942"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_misc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F942"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDATASIZEQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s n - x y z -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"CDATASIZEQ"),", but accepting a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," instead of a ",(0,r.kt)("em",{parentName:"td"},"Cell"),". The returned value of ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," does not take into account the cell that contains the slice ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," itself; however, the data bits and the cell references of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," are accounted for in ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"z"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x42")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"757"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDATASIZE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F943"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_misc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F943"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SDATASIZE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s n - x y z"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"A non-quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"SDATASIZEQ")," that throws a cell overflow exception (8) on failure."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x43")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"758"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FIND_BY_INIT_CODE_HASH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F944"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_misc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F944"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FIND_BY_INIT_CODE_HASH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - t"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the list of accounts with initial code hash specified in 256 bit of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x44")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"759"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FIND_BY_CODE_HASH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F945"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_misc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F945"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FIND_BY_CODE_HASH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - t"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the list of accounts with code hash specified in 256 bit of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x45")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"760"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FIND_BY_DATA_HASH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F946"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_misc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F946"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FIND_BY_DATA_HASH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - t"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Returns the list of accounts with data hash specified in 256 bit of ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xF9, 0x46")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"761"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRYELECT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#F950"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_misc"),(0,r.kt)("td",{parentName:"tr",align:"left"},"F950"),(0,r.kt)("td",{parentName:"tr",align:"left"},"TRYELECT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"D - c c' D' x x'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Executes try_elect method for accounts got by config param 30. D is the input Hashmap with credits, c - contains serialized validator set, c' is the HashmapE with frozen stakes, D' is the HashmapE with credits, x is the integer with total stake, x' is the integer with total weight."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"762"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDGRAMS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_currency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDGRAMS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads (deserializes) a ",(0,r.kt)("inlineCode",{parentName:"td"},"Gram")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"VarUInteger 16")," amount from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", and returns the amount as ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," along with the remainder ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," of ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),". The expected serialization of ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," consists of a 4-bit unsigned big-endian integer ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),", followed by an ",(0,r.kt)("inlineCode",{parentName:"td"},"8l"),"-bit unsigned big-endian representation of ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDVARUINT16"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"The net effect is approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"4 LDU")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"3 LSHIFT#")," ",(0,r.kt)("inlineCode",{parentName:"td"},"LDUX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"763"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDVARINT16"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_currency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA01"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDVARINT16"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"LDVARUINT16"),", but loads a ",(0,r.kt)("em",{parentName:"td"},"signed")," ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x01")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"4 LDU")," ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP")," ",(0,r.kt)("inlineCode",{parentName:"td"},"3 LSHIFT#")," ",(0,r.kt)("inlineCode",{parentName:"td"},"LDIX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"764"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STGRAMS"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA02"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_currency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA02"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STGRAMS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Stores (serializes) an ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"0...2^120-1")," into ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b"),", and returns the resulting ",(0,r.kt)("em",{parentName:"td"},"Builder")," ",(0,r.kt)("inlineCode",{parentName:"td"},"b'"),". The serialization of ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," consists of a 4-bit unsigned big-endian integer ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),", which is the smallest integer ",(0,r.kt)("inlineCode",{parentName:"td"},"l>=0"),", such that ",(0,r.kt)("inlineCode",{parentName:"td"},"x<2^(8l)"),", followed by an ",(0,r.kt)("inlineCode",{parentName:"td"},"8l"),"-bit unsigned big-endian representation of ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," does not belong to the supported range, a range check exception is thrown."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x02")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"STVARUINT16"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"765"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STVARINT16"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA03"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_currency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA03"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STVARINT16"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"STVARUINT16"),", but serializes a ",(0,r.kt)("em",{parentName:"td"},"signed")," ",(0,r.kt)("em",{parentName:"td"},"Integer")," ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"-2^119...2^119-1"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"766"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDVARUINT32"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA04"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_currency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA04"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDVARUINT32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads (deserializes) a ",(0,r.kt)("inlineCode",{parentName:"td"},"VarUInteger 32")," from ",(0,r.kt)("em",{parentName:"td"},"CellSlice"),(0,r.kt)("inlineCode",{parentName:"td"},"s"),", and returns the deserialized value as an ",(0,r.kt)("em",{parentName:"td"},"Integer")," 0 <= x<2^248. The expected serialization of x consists of a 5-bit unsigned big-endian integer ",(0,r.kt)("inlineCode",{parentName:"td"},"l"),", followed by an 8l-bit unsigned big-endian representation of ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),". The net effect is approximately equivalent to ",(0,r.kt)("inlineCode",{parentName:"td"},"LDU 5"),"; ",(0,r.kt)("inlineCode",{parentName:"td"},"SWAP"),"; ",(0,r.kt)("inlineCode",{parentName:"td"},"SHIFT 3"),"; ",(0,r.kt)("inlineCode",{parentName:"td"},"LDUX"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x04")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"767"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDVARINT32"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA05"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_currency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA05"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDVARINT32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"Deserializes a ",(0,r.kt)("inlineCode",{parentName:"td"},"VarInteger 32")," from ",(0,r.kt)("em",{parentName:"td"},"CellSlice"),(0,r.kt)("inlineCode",{parentName:"td"},"s"),", and returns the deserialized value as an ",(0,r.kt)("em",{parentName:"td"},"Integer"),"-2^247 <= x<2^247."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x05")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"768"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STVARUINT32"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA06"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_currency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA06"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STVARUINT32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Serializes an ",(0,r.kt)("em",{parentName:"td"},"Integer"),"  0<=x<2^248 as a ",(0,r.kt)("inlineCode",{parentName:"td"},"VarUInteger 32"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x06")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"769"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STVARINT32"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA07"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_currency"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA07"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STVARINT32"),(0,r.kt)("td",{parentName:"tr",align:"left"},"b x - b'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"serializes an ",(0,r.kt)("em",{parentName:"td"},"Integer")," -2^247<=x<2^{247} as a ",(0,r.kt)("inlineCode",{parentName:"td"},"VarInteger 32"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x07")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"770"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDMSGADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA40"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_addr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA40"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDMSGADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s' s''"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Loads from ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," the only prefix that is a valid ",(0,r.kt)("inlineCode",{parentName:"td"},"MsgAddress"),", and returns both this prefix ",(0,r.kt)("inlineCode",{parentName:"td"},"s'")," and the remainder ",(0,r.kt)("inlineCode",{parentName:"td"},"s''")," of ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," as slices."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x40")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"771"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDMSGADDRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA41"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_addr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA41"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LDMSGADDRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - s' s'' -1 or s 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"LDMSGADDR"),": on success, pushes an extra ",(0,r.kt)("inlineCode",{parentName:"td"},"-1"),"; on failure, pushes the original ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," and a zero."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x41")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"772"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PARSEMSGADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA42"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_addr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA42"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PARSEMSGADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - t"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Decomposes ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," containing a valid ",(0,r.kt)("inlineCode",{parentName:"td"},"MsgAddress")," into a ",(0,r.kt)("em",{parentName:"td"},"Tuple")," ",(0,r.kt)("inlineCode",{parentName:"td"},"t")," with separate fields of this ",(0,r.kt)("inlineCode",{parentName:"td"},"MsgAddress"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is not a valid ",(0,r.kt)("inlineCode",{parentName:"td"},"MsgAddress"),", a cell deserialization exception is thrown."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x42")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"773"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PARSEMSGADDRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA43"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_addr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA43"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PARSEMSGADDRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - t -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of ",(0,r.kt)("inlineCode",{parentName:"td"},"PARSEMSGADDR"),": returns a zero on error instead of throwing an exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x43")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"774"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REWRITESTDADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA44"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_addr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA44"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REWRITESTDADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Parses ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," containing a valid ",(0,r.kt)("inlineCode",{parentName:"td"},"MsgAddressInt")," (usually a ",(0,r.kt)("inlineCode",{parentName:"td"},"msg_addr_std"),"), applies rewriting from the ",(0,r.kt)("inlineCode",{parentName:"td"},"anycast")," (if present) to the same-length prefix of the address, and returns both the workchain ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," and the 256-bit address ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," as integers. If the address is not 256-bit, or if ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," is not a valid serialization of ",(0,r.kt)("inlineCode",{parentName:"td"},"MsgAddressInt"),", throws a cell deserialization exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x44")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"775"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REWRITESTDADDRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA45"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_addr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA45"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REWRITESTDADDRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x y -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of primitive ",(0,r.kt)("inlineCode",{parentName:"td"},"REWRITESTDADDR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x45")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"776"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REWRITEVARADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA46"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_addr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA46"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REWRITEVARADDR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s'"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A variant of ",(0,r.kt)("inlineCode",{parentName:"td"},"REWRITESTDADDR")," that returns the (rewritten) address as a ",(0,r.kt)("em",{parentName:"td"},"Slice")," ",(0,r.kt)("inlineCode",{parentName:"td"},"s"),", even if it is not exactly 256 bit long (represented by a ",(0,r.kt)("inlineCode",{parentName:"td"},"msg_addr_var"),")."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x46")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"777"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REWRITEVARADDRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FA47"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_addr"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FA47"),(0,r.kt)("td",{parentName:"tr",align:"left"},"REWRITEVARADDRQ"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s - x s' -1 or 0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A quiet version of primitive ",(0,r.kt)("inlineCode",{parentName:"td"},"REWRITEVARADDR"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFA, 0x47")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"778"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SENDRAWMSG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FB00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_actions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FB00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SENDRAWMSG"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Sends a raw message contained in ",(0,r.kt)("em",{parentName:"td"},"Cell ",(0,r.kt)("inlineCode",{parentName:"em"},"c")),", which should contain a correctly serialized object ",(0,r.kt)("inlineCode",{parentName:"td"},"Message X"),", with the only exception that the source address is allowed to have dummy value ",(0,r.kt)("inlineCode",{parentName:"td"},"addr_none")," (to be automatically replaced with the current smart-contract address), and ",(0,r.kt)("inlineCode",{parentName:"td"},"ihr_fee"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"fwd_fee"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"created_lt")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"created_at")," fields can have arbitrary values (to be rewritten with correct values during the action phase of the current transaction). Integer parameter ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," contains the flags. Currently ",(0,r.kt)("inlineCode",{parentName:"td"},"x=0")," is used for ordinary messages; ",(0,r.kt)("inlineCode",{parentName:"td"},"x=128")," is used for messages that are to carry all the remaining balance of the current smart contract (instead of the value originally indicated in the message); ",(0,r.kt)("inlineCode",{parentName:"td"},"x=64")," is used for messages that carry all the remaining value of the inbound message in addition to the value initially indicated in the new message (if bit 0 is not set, the gas fees are deducted from this amount); ",(0,r.kt)("inlineCode",{parentName:"td"},"x'=x+1")," means that the sender wants to pay transfer fees separately; ",(0,r.kt)("inlineCode",{parentName:"td"},"x'=x+2")," means that any errors arising while processing this message during the action phase should be ignored. Finally, ",(0,r.kt)("inlineCode",{parentName:"td"},"x'=x+32")," means that the current account must be destroyed if its resulting balance is zero. This flag is usually employed together with ",(0,r.kt)("inlineCode",{parentName:"td"},"+128"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFB, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"779"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RAWRESERVE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FB02"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_actions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FB02"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RAWRESERVE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x y -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Creates an output action which would reserve exactly ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," nanograms (if ",(0,r.kt)("inlineCode",{parentName:"td"},"y=0"),"), at most ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," nanograms (if ",(0,r.kt)("inlineCode",{parentName:"td"},"y=2"),"), or all but ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," nanograms (if ",(0,r.kt)("inlineCode",{parentName:"td"},"y=1")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"y=3"),"), from the remaining balance of the account. It is roughly equivalent to creating an outbound message carrying ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," nanograms (or ",(0,r.kt)("inlineCode",{parentName:"td"},"b-x")," nanograms, where ",(0,r.kt)("inlineCode",{parentName:"td"},"b")," is the remaining balance) to oneself, so that the subsequent output actions would not be able to spend more money than the remainder. Bit ",(0,r.kt)("inlineCode",{parentName:"td"},"+2")," in ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," means that the external action does not fail if the specified amount cannot be reserved; instead, all remaining balance is reserved. Bit ",(0,r.kt)("inlineCode",{parentName:"td"},"+8")," in ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," means ",(0,r.kt)("inlineCode",{parentName:"td"},"x:=-x")," before performing any further actions. Bit ",(0,r.kt)("inlineCode",{parentName:"td"},"+4")," in ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," means that ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," is increased by the original balance of the current account (before the compute phase), including all extra currencies, before performing any other checks and actions. Currently ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," must be a non-negative integer, and ",(0,r.kt)("inlineCode",{parentName:"td"},"y")," must be in the range ",(0,r.kt)("inlineCode",{parentName:"td"},"0...15"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFB, 0x02")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"780"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RAWRESERVEX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FB03"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_actions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FB03"),(0,r.kt)("td",{parentName:"tr",align:"left"},"RAWRESERVEX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"x D y -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"RAWRESERVE"),", but also accepts a dictionary ",(0,r.kt)("inlineCode",{parentName:"td"},"D")," (represented by a ",(0,r.kt)("em",{parentName:"td"},"Cell")," or ",(0,r.kt)("em",{parentName:"td"},"Null"),") with extra currencies. In this way currencies other than Grams can be reserved."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFB, 0x03")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"781"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCODE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FB04"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_actions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FB04"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCODE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Creates an output action that would change this smart contract code to that given by ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),". Notice that this change will take effect only after the successful termination of the current run of the smart contract."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFB, 0x04")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"782"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETLIBCODE"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FB06"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_actions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FB06"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETLIBCODE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Creates an output action that would modify the collection of this smart contract libraries by adding or removing library with code given in ",(0,r.kt)("em",{parentName:"td"},"Cell")," ",(0,r.kt)("inlineCode",{parentName:"td"},"c"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"x=0"),", the library is actually removed if it was previously present in the collection (if not, this action does nothing). If ",(0,r.kt)("inlineCode",{parentName:"td"},"x=1"),", the library is added as a private library, and if ",(0,r.kt)("inlineCode",{parentName:"td"},"x=2"),", the library is added as a public library (and becomes available to all smart contracts if the current smart contract resides in the masterchain); if the library was present in the collection before, its public/private status is changed according to ",(0,r.kt)("inlineCode",{parentName:"td"},"x"),". Values of ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," other than ",(0,r.kt)("inlineCode",{parentName:"td"},"0...2")," are invalid."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFB, 0x06")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"783"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHANGELIB"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FB07"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_actions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FB07"),(0,r.kt)("td",{parentName:"tr",align:"left"},"CHANGELIB"),(0,r.kt)("td",{parentName:"tr",align:"left"},"h x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Creates an output action similarly to ",(0,r.kt)("inlineCode",{parentName:"td"},"SETLIBCODE"),", but instead of the library code accepts its hash as an unsigned 256-bit integer ",(0,r.kt)("inlineCode",{parentName:"td"},"h"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"x!=0")," and the library with hash ",(0,r.kt)("inlineCode",{parentName:"td"},"h")," is absent from the library collection of this smart contract, this output action will fail."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFB, 0x07")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"784"),(0,r.kt)("td",{parentName:"tr",align:"left"},"COPYLEFT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FB0A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"app_actions"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FB0A"),(0,r.kt)("td",{parentName:"tr",align:"left"},"COPYLEFT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s x -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"526"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Where ",(0,r.kt)("inlineCode",{parentName:"td"},"s")," - is slice of 256-bit AccountId and ",(0,r.kt)("inlineCode",{parentName:"td"},"x")," - is type of license. Add license payment to code creator. The license payment calculates from compute _phase_fees taking the appropriate percentage. If summary payment is less than license _payment_threshold, then value saves in unsplit_shard_state of masterblock. If summary payment in unsplit_shard_state is more than license_payment_threshold then node sends internal message to account address in masterchain, specified in slice s. The instruction return an error on contracts in masterchain."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFB, 0x0A")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"785"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEBUG"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE nn:(#<= 239)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FEnn"),(0,r.kt)("td",{parentName:"tr",align:"left"},"{nn} DEBUG"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= nn < 240")),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_240]"," 0xFE, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"786"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEBUGSTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FEF n:(## 4) ssss:((n ",(0,r.kt)("em",{parentName:"td"}," 8 + 8) ")," Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FEFnssss"),(0,r.kt)("td",{parentName:"tr",align:"left"},"{string} DEBUGSTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"0 <= n < 16"),". Length of ",(0,r.kt)("inlineCode",{parentName:"td"},"ssss")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"n+1")," bytes."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_setcp]"," 0xFF, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"{string} {x} DEBUGSTRI"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"{string}")," is a ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/Piterden/TON-docs/blob/master/Fift.%20A%20Brief%20Introduction.md#user-content-29-string-literals"},"string literal"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DEBUGSTR"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"ssss")," is the given string."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"DEBUGSTRI"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"ssss")," is one-byte integer ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= x <= 255")," followed by the given string."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"787"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DUMPSTK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEBUG"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DUMPSTK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Dumps the stack (at most the top 255 values) and shows the total stack depth."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFE, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"788"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DUMPSTKTOP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE0 n:(## 4)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE0n"),(0,r.kt)("td",{parentName:"tr",align:"left"},"{n} DUMPSTKTOP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"1<=n<15, dumps the top ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," values from the stack, starting from the deepest of them. If there are d<n values available, dumps only ",(0,r.kt)("inlineCode",{parentName:"td"},"d")," values."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u4_1_14]"," 0xFE, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"789"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HEXDUMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE10"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HEXDUMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Dumps s0 in hexadecimal form, be it a ",(0,r.kt)("em",{parentName:"td"},"Slice")," or an ",(0,r.kt)("em",{parentName:"td"},"Integer"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFE, 0x10")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"790"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HEXPRINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE11"),(0,r.kt)("td",{parentName:"tr",align:"left"},"HEXPRINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"HEXDUMP"),", except the hexadecimal representation of s0 is not immediately output, but rather concatenated to an output text buffer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFE, 0x11")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"791"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BINDUMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE12"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BINDUMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Dumps s0 in binary form, similarly to ",(0,r.kt)("inlineCode",{parentName:"td"},"HEXDUMP"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFE, 0x12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"792"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BINPRINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE13"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE13"),(0,r.kt)("td",{parentName:"tr",align:"left"},"BINPRINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Outputs the binary representation of ",(0,r.kt)("inlineCode",{parentName:"td"},"s0")," to a text buffer."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFE, 0x13")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"793"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STRDUMP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE14"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE14"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STRDUMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Dumps the ",(0,r.kt)("em",{parentName:"td"},"Slice")," at ",(0,r.kt)("inlineCode",{parentName:"td"},"s0")," as an UTF-8 string."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFE, 0x14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"794"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STRPRINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE15"),(0,r.kt)("td",{parentName:"tr",align:"left"},"STRPRINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Similar to ",(0,r.kt)("inlineCode",{parentName:"td"},"STRDUMP"),", but outputs the string into a text buffer (without carriage return)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFE, 0x15")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"795"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEBUGOFF"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE1E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE1E"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEBUGOFF"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Disables all debug output until it is re-enabled by a ",(0,r.kt)("inlineCode",{parentName:"td"},"DEBUGON"),". More precisely, this primitive increases an internal counter, which disables all debug operations (except ",(0,r.kt)("inlineCode",{parentName:"td"},"DEBUGOFF")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"DEBUGON"),") when strictly positive."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFE, 0x1E")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"796"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEBUGON"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE1F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE1F"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEBUGON"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enables debug output (in a debug version of TVM)."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFE, 0x1F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"797"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DUMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEBUG"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE2 i:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE2i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[i]"," DUMP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Dumps ",(0,r.kt)("inlineCode",{parentName:"td"},"s[i]"),"."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u4_14]"," 0xFE, 0x20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"798"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PRINT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FE3 n:uint4"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FE3i"),(0,r.kt)("td",{parentName:"tr",align:"left"},"s","[n]"," PRINT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"0<=n<15, concatenates the text representation of s(n) (without any leading or trailing spaces or carriage returns) to a text buffer which will be output before the output of any other debug operation."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u4_14]"," 0xFE, 0x30")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"799"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DUMPTOSFMT"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FEF n:(## 4) ssss:((n ",(0,r.kt)("em",{parentName:"td"}," 8 + 8) ")," Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FEFnssss"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ssss]","DUMPTOSFMT"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Dumps s0 formatted according to the (n+1)-byte string ",(0,r.kt)("inlineCode",{parentName:"td"},"ssss"),". This string might contain (a prefix of) the name of a TL-B type supported by the debugger. If the string begins with a zero byte, simply outputs it (without the first byte) into the debug log. If the string begins with a byte equal to one, concatenates it to a buffer, which will be output before the output of any other debug operation (effectively outputs a string without a carriage return)."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"800"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LOGSTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FEF n:(## 4) 00 ssss:((n ",(0,r.kt)("em",{parentName:"td"}," 8 + 8) ")," Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FEFn00ssss"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ssss]","LOGSTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String ",(0,r.kt)("inlineCode",{parentName:"td"},"ssss")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," bytes long."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"801"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LOGFLUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FEF000"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FEF000"),(0,r.kt)("td",{parentName:"tr",align:"left"},"LOGFLUSH"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Flushes all pending debug output from the buffer into the debug log."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFE, 0xF0, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"802"),(0,r.kt)("td",{parentName:"tr",align:"left"},"PRINTSTR"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FEF n:(## 4) 01 ssss:((n ",(0,r.kt)("em",{parentName:"td"}," 8 + 8) ")," Bit)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"debug"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FEFn01ssss"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[ssss]","PRINTSTR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String ",(0,r.kt)("inlineCode",{parentName:"td"},"ssss")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"n")," bytes long."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"803"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCP"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"codepage"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FFnn"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[nn]"," SETCP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selects TVM codepage ",(0,r.kt)("inlineCode",{parentName:"td"},"0 <= nn < 240"),". If the codepage is not supported, throws an invalid opcode exception."),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z = parse_const_u8_setcp]"," 0xFF, z")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"804"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCP0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FF nn:(#<= 239)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"codepage"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FF00"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCP0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selects TVM (test) codepage zero as described in this document."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFF, 0x00")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"805"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCP_SPECIAL"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FFF z:(## 4) {1 <= z}"),(0,r.kt)("td",{parentName:"tr",align:"left"},"codepage"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FFFz"),(0,r.kt)("td",{parentName:"tr",align:"left"},"[z-16]"," SETCP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"-"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selects TVM codepage ",(0,r.kt)("inlineCode",{parentName:"td"},"z-16")," for ",(0,r.kt)("inlineCode",{parentName:"td"},"1 <= z <= 15"),". Negative codepages ",(0,r.kt)("inlineCode",{parentName:"td"},"-13...-1")," are reserved for restricted versions of TVM needed to validate runs of TVM in other codepages. Negative codepage ",(0,r.kt)("inlineCode",{parentName:"td"},"-14")," is reserved for experimental codepages, not necessarily compatible between different TVM implementations, and should be disabled in the production versions of TVM."),(0,r.kt)("td",{parentName:"tr",align:"left"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"right"},"806"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCPX"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"#FFF0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"codepage"),(0,r.kt)("td",{parentName:"tr",align:"left"},"FFF0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"SETCPX"),(0,r.kt)("td",{parentName:"tr",align:"left"},"c -"),(0,r.kt)("td",{parentName:"tr",align:"left"},"26"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Selects codepage ",(0,r.kt)("inlineCode",{parentName:"td"},"c")," with ",(0,r.kt)("inlineCode",{parentName:"td"},"-2^15 <= c < 2^15")," passed in the top of the stack."),(0,r.kt)("td",{parentName:"tr",align:"left"},"0xFF, 0xF0")))))}g.isMDXComponent=!0}}]);